0
{"eq_name": "sincosinv_nv8_nt812_prog_35", "num_vars": 8, "dim": [1, 1, 1, 1, 1, 1, 1, 1], "vars_range_and_types": "[{\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}]", "function_set": ["add", "sub", "mul", "div", "inv", "sin", "cos", "const"], "eq_expression": "[('add', 'binary'), (-0.581000000000000, 'const'), ('add', 'binary'), ('mul', 'binary'), (0.966100000000000, 'const'), ('X3', 'var'), ('add', 'binary'), ('mul', 'binary'), (0.578300000000000, 'const'), ('pow', 'binary'), ('X1', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (0.514600000000000, 'const'), ('sin', 'unary'), ('X5', 'var'), ('add', 'binary'), ('mul', 'binary'), (0.160800000000000, 'const'), ('X4', 'var'), ('add', 'binary'), ('mul', 'binary'), (0.945400000000000, 'const'), ('pow', 'binary'), ('X2', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (0.0512000000000000, 'const'), ('X6', 'var'), ('add', 'binary'), ('mul', 'binary'), (0.835800000000000, 'const'), ('X7', 'var'), ('add', 'binary'), ('mul', 'binary'), (-0.349200000000000, 'const'), ('X0', 'var'), ('add', 'binary'), ('mul', 'binary'), (0.590300000000000, 'const'), ('mul', 'binary'), ('X0', 'var'), ('cos', 'unary'), ('X6', 'var'), ('add', 'binary'), ('mul', 'binary'), (0.241900000000000, 'const'), ('mul', 'binary'), ('X4', 'var'), ('pow', 'binary'), ('X2', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (0.254800000000000, 'const'), ('mul', 'binary'), ('pow', 'binary'), ('X6', 'var'), (-1, 'const'), ('cos', 'unary'), ('X7', 'var'), ('add', 'binary'), ('mul', 'binary'), (0.253600000000000, 'const'), ('mul', 'binary'), ('X5', 'var'), ('X6', 'var'), ('add', 'binary'), ('mul', 'binary'), (0.779100000000000, 'const'), ('mul', 'binary'), ('X2', 'var'), ('sin', 'unary'), ('X0', 'var'), ('add', 'binary'), ('mul', 'binary'), (0.197900000000000, 'const'), ('mul', 'binary'), ('X6', 'var'), ('pow', 'binary'), ('X1', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (0.916700000000000, 'const'), ('mul', 'binary'), ('X0', 'var'), ('X4', 'var'), ('add', 'binary'), ('mul', 'binary'), (-0.772500000000000, 'const'), ('mul', 'binary'), ('cos', 'unary'), ('X3', 'var'), ('cos', 'unary'), ('X7', 'var'), ('add', 'binary'), ('mul', 'binary'), (-0.572200000000000, 'const'), ('mul', 'binary'), ('X2', 'var'), ('pow', 'binary'), ('X6', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (-0.593500000000000, 'const'), ('mul', 'binary'), ('X5', 'var'), ('pow', 'binary'), ('X1', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (-0.169000000000000, 'const'), ('mul', 'binary'), ('X4', 'var'), ('X5', 'var'), ('mul', 'binary'), (-0.177100000000000, 'const'), ('mul', 'binary'), ('X0', 'var'), ('sin', 'unary'), ('X5', 'var')]", "simulated_exec": false, "expr": "0.9167*X0*X4 - 0.1771*X0*sin(X5) + 0.5903*X0*cos(X6) - 0.3492*X0 + 0.7791*X2*sin(X0) - 0.5722*X2/X6 + 0.9661*X3 - 0.169*X4*X5 + 0.1608*X4 + 0.2536*X5*X6 + 0.0512*X6 + 0.8358*X7 + 0.5146*sin(X5) - 0.7725*cos(X3)*cos(X7) - 0.581 + 0.2548*cos(X7)/X6 + 0.2419*X4/X2 + 0.9454/X2 - 0.5935*X5/X1 + 0.1979*X6/X1 + 0.5783/X1", "expr_obj_thres": 0.01}