0
{"eq_name": "inv_nv5_nt58_prog_10_totalvars_20_rand_1", "num_vars": 20, "dim": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "vars_range_and_types": "[{\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}, {\"name\": \"LogUniform\", \"range\": [0.1, 10], \"dim\": [1], \"only_positive\": true}]", "function_set": ["add", "sub", "mul", "inv", "const"], "eq_expression": "[('add', 'binary'), (-0.605000000000000, 'const'), ('add', 'binary'), ('mul', 'binary'), (0.967700000000000, 'const'), ('X7', 'var'), ('add', 'binary'), ('mul', 'binary'), (0.0545000000000000, 'const'), ('pow', 'binary'), ('X13', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (-0.0635000000000000, 'const'), ('pow', 'binary'), ('X2', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (-0.961500000000000, 'const'), ('pow', 'binary'), ('X11', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (-0.359900000000000, 'const'), ('pow', 'binary'), ('X14', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (0.832700000000000, 'const'), ('mul', 'binary'), ('X14', 'var'), ('pow', 'binary'), ('X7', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (0.434400000000000, 'const'), ('mul', 'binary'), ('X13', 'var'), ('X14', 'var'), ('add', 'binary'), ('mul', 'binary'), (0.0326000000000000, 'const'), ('mul', 'binary'), ('X2', 'var'), ('X7', 'var'), ('add', 'binary'), ('mul', 'binary'), (-0.516000000000000, 'const'), ('mul', 'binary'), ('X11', 'var'), ('pow', 'binary'), ('X2', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (-0.972200000000000, 'const'), ('mul', 'binary'), ('X7', 'var'), ('pow', 'binary'), ('X11', 'var'), (-1, 'const'), ('add', 'binary'), ('mul', 'binary'), (-0.299600000000000, 'const'), ('mul', 'binary'), ('X13', 'var'), ('X7', 'var'), ('add', 'binary'), ('mul', 'binary'), (-0.748200000000000, 'const'), ('mul', 'binary'), ('pow', 'binary'), ('X11', 'var'), (-1, 'const'), ('pow', 'binary'), ('X14', 'var'), (-1, 'const'), ('mul', 'binary'), (-0.958500000000000, 'const'), ('mul', 'binary'), ('X14', 'var'), ('pow', 'binary'), ('X2', 'var'), (-1, 'const')]", "simulated_exec": false, "expr": "-0.516*X11/X2 + 0.4344*X13*X14 - 0.2996*X13*X7 + 0.8327*X14/X7 - 0.9585*X14/X2 + 0.0326*X2*X7 + 0.9677*X7 - 0.605 - 0.0635/X2 - 0.3599/X14 + 0.0545/X13 - 0.9722*X7/X11 - 0.9615/X11 - 0.7482/(X11*X14)", "expr_obj_thres": 0.01}