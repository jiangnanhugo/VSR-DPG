from collections import OrderedDict
import sympy
from base import KnownEquation

EQUATION_CLASS_DICT = OrderedDict()


def register_eq_class(cls):
    EQUATION_CLASS_DICT[cls.__name__] = cls
    return cls


def get_eq_obj(key, **kwargs):
    if key in EQUATION_CLASS_DICT:
        return EQUATION_CLASS_DICT[key](**kwargs)
    raise KeyError(f'`{key}` is not expected as a equation object key')


@register_eq_class
class sincos_nv8_nt812_prog_46(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_46'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.0805 * x[1] * x[2] + 0.5071 * x[1] + 0.4797 * x[2] * x[5] - 0.5875 * x[2] - 0.2832 * x[3] * sympy.sin(
            x[1]) - 0.9256 * x[3] * sympy.sin(x[7]) - 0.0547 * x[3] * sympy.cos(x[2]) + 0.8181 * x[3] - 0.8635 * x[4] * x[6] + 0.3082 * x[
                            4] * sympy.sin(x[1]) + 0.2889 * x[5] - 0.2555 * x[6] * sympy.cos(x[0]) - 0.6243 * x[7] - 0.9974 * sympy.sin(
            x[0]) * sympy.sin(x[2]) - 0.3524 * sympy.sin(x[0]) * sympy.sin(x[4]) - 0.6319 * sympy.sin(x[2]) * sympy.sin(
            x[6]) - 0.9886 * sympy.sin(x[4]) * sympy.cos(x[2]) - 0.7073 * sympy.cos(x[0]) - 0.267 * sympy.cos(x[4]) - 0.429 * sympy.cos(
            x[6]) + 0.1009
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1009, 'const'), ('mul', 'binary'), (0.8181, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.7073, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.6243, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.5071, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.2889, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.5875, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.267, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.429, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6319, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9886, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3524, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0805, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9256, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2555, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3082, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2832, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4797, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0547, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9974, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8635, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_0(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_0'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.3173 * x[0] * x[2] + 0.8872 * x[0] * x[4] + 0.6968 * x[0] * sympy.cos(x[7]) + 0.0237 * x[1] * sympy.sin(
            x[0]) + 0.5801 * x[3] * x[6] + 0.2899 * x[3] * x[7] + 0.2512 * x[3] * sympy.cos(x[5]) - 0.3491 * x[3] + 0.2259 * x[
                            4] * sympy.sin(x[3]) - 0.5449 * x[6] + 0.5309 * x[7] - 0.1076 * sympy.sin(x[2]) + 0.588 * sympy.sin(
            x[4]) + 0.6665 * sympy.sin(x[5]) * sympy.cos(x[0]) - 0.8541 * sympy.sin(x[7]) * sympy.cos(x[6]) + 0.8479 * sympy.cos(
            x[0]) - 0.9064 * sympy.cos(x[1]) * sympy.cos(x[4]) - 0.877 * sympy.cos(x[1]) * sympy.cos(x[7]) - 0.8864 * sympy.cos(
            x[1]) + 0.7559 * sympy.cos(x[5]) + 0.7899
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7899, 'const'), ('mul', 'binary'), (0.5309, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.5449, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.588, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.8479, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.1076, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.8864, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.7559, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.3491, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.877, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8872, 'const'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5801, 'const'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2899, 'const'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6968, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8541, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2512, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3173, 'const'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0237, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9064, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2259, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6665, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_35(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_35'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.5399 * x[0] * sympy.sin(x[4]) - 0.8407 * x[0] + 0.0147 * x[1] * x[3] + 0.1489 * x[1] + 0.9973 * x[2] + 0.4925 * \
                        x[3] * x[6] - 0.2723 * x[3] * sympy.sin(x[4]) + 0.0959 * x[4] - 0.8207 * x[5] + 0.6857 * x[6] * sympy.sin(
            x[2]) - 0.8772 * x[7] - 0.0365 * sympy.sin(x[0]) * sympy.cos(x[7]) - 0.0545 * sympy.sin(x[1]) * sympy.cos(
            x[7]) + 0.9003 * sympy.sin(x[2]) * sympy.sin(x[3]) - 0.226 * sympy.sin(x[2]) * sympy.cos(x[4]) - 0.4957 * sympy.sin(
            x[3]) - 0.764 * sympy.sin(x[5]) * sympy.cos(x[4]) + 0.6901 * sympy.cos(x[1]) * sympy.cos(x[6]) + 0.0003 * sympy.cos(
            x[3]) * sympy.cos(x[7]) - 0.208 * sympy.cos(x[6]) - 0.4167
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4167, 'const'), ('mul', 'binary'), (-0.208, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.8772, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.9973, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.1489, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.8207, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.4957, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.8407, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.0959, 'const'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2723, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0003, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9003, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5399, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0545, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4925, 'const'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.764, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0147, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6857, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0365, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.226, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6901, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_8(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_8'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.292 * x[0] * sympy.cos(x[2]) - 0.1613 * x[0] + 0.3752 * x[1] * x[3] - 0.3503 * x[2] * sympy.sin(x[1]) + 0.1041 * \
                        x[2] * sympy.sin(x[6]) + 0.6193 * x[4] * sympy.cos(x[3]) + 0.4697 * x[4] - 0.4962 * x[5] * x[7] - 0.006 * x[
                            5] * sympy.sin(x[3]) + 0.2057 * x[5] - 0.7291 * x[6] * sympy.sin(x[3]) - 0.5308 * x[7] * sympy.sin(
            x[6]) - 0.1291 * x[7] + 0.871 * sympy.sin(x[2]) * sympy.sin(x[5]) - 0.2832 * sympy.sin(x[2]) - 0.9686 * sympy.sin(
            x[3]) - 0.6923 * sympy.sin(x[4]) * sympy.cos(x[0]) - 0.2232 * sympy.cos(x[1]) + 0.1273 * sympy.cos(x[4]) * sympy.cos(
            x[6]) + 0.2133 * sympy.cos(x[6]) - 0.8635
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8635, 'const'), ('mul', 'binary'), (-0.2832, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.2133, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.4697, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.1613, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.2057, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.1291, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.2232, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.9686, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6923, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1273, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3503, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.006, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4962, 'const'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6193, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.871, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5308, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1041, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3752, 'const'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.292, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7291, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_6', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_42(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_42'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.9752 * x[0] + 0.9663 * x[2] * sympy.cos(x[1]) - 0.5132 * x[2] * sympy.cos(x[6]) - 0.8921 * x[4] * sympy.cos(
            x[7]) + 0.6581 * x[4] - 0.7644 * x[5] * sympy.sin(x[0]) + 0.2619 * x[5] * sympy.sin(x[3]) - 0.23 * x[5] + 0.9403 * x[
                            6] * sympy.sin(x[7]) - 0.025 * x[6] + 0.0347 * x[7] * sympy.sin(x[2]) - 0.0898 * sympy.sin(x[0]) * sympy.sin(
            x[3]) + 0.3168 * sympy.sin(x[1]) * sympy.cos(x[3]) + 0.6322 * sympy.sin(x[1]) + 0.781 * sympy.sin(x[2]) * sympy.cos(
            x[3]) + 0.2363 * sympy.sin(x[2]) + 0.2531 * sympy.sin(x[3]) + 0.5894 * sympy.sin(x[7]) * sympy.cos(x[5]) - 0.8886 * sympy.cos(
            x[1]) * sympy.cos(x[4]) - 0.5934 * sympy.cos(x[7]) + 0.6074
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6074, 'const'), ('mul', 'binary'), (0.6581, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.9752, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.5934, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.2363, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.23, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.2531, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.6322, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.025, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5132, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8921, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0898, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2619, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7644, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9403, 'const'), ('X_6', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.781, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8886, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9663, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5894, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3168, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0347, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_7', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_33(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_33'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.8762 * x[0] * sympy.sin(x[4]) - 0.9777 * x[0] * sympy.cos(x[2]) + 0.3682 * x[0] * sympy.cos(x[5]) + 0.8181 * x[
            1] * x[2] + 0.866 * x[1] * sympy.cos(x[0]) + 0.7005 * x[2] * sympy.sin(x[7]) + 0.565 * x[3] * x[4] + 0.6562 * x[4] * x[
                            5] - 0.2896 * x[4] + 0.8107 * x[5] * sympy.cos(x[1]) - 0.7603 * x[5] * sympy.cos(x[2]) - 0.182 * x[5] + 0.3397 * \
                        x[6] - 0.0711 * x[7] + 0.6265 * sympy.sin(x[0]) - 0.1777 * sympy.sin(x[1]) - 0.617 * sympy.sin(
            x[2]) - 0.5836 * sympy.sin(x[3]) + 0.6641 * sympy.sin(x[7]) * sympy.cos(x[3]) - 0.6515 * sympy.sin(x[7]) * sympy.cos(
            x[4]) + 0.3485
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3485, 'const'), ('mul', 'binary'), (-0.182, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.1777, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.5836, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.617, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.3397, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.0711, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.6265, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.2896, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6562, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3682, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.866, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7603, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7005, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8762, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8181, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6515, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.565, 'const'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8107, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9777, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6641, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_20(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_20'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.178 * x[0] + 0.3037 * x[1] * x[3] + 0.4432 * x[1] * x[6] - 0.8601 * x[1] * x[7] + 0.462 * x[1] + 0.0692 * x[2] * \
                        x[7] - 0.1266 * x[3] * x[5] - 0.0858 * x[3] + 0.5698 * x[4] + 0.6511 * x[5] * sympy.cos(x[4]) - 0.7093 * x[
                            5] - 0.7901 * x[6] * sympy.sin(x[4]) - 0.8896 * x[6] * sympy.cos(x[3]) + 0.9048 * x[7] * sympy.sin(
            x[4]) - 0.0242 * x[7] * sympy.sin(x[5]) - 0.7954 * sympy.sin(x[2]) + 0.0774 * sympy.sin(x[3]) * sympy.cos(
            x[2]) - 0.7924 * sympy.sin(x[6]) - 0.6535 * sympy.cos(x[3]) * sympy.cos(x[7]) + 0.2125 * sympy.cos(x[7]) - 0.4673
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4673, 'const'), ('mul', 'binary'), (0.2125, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.7924, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.462, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.0858, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.7954, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.178, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.5698, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.7093, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1266, 'const'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8601, 'const'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9048, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0242, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6511, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6535, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4432, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0774, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7901, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8896, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3037, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0692, 'const'),
                                            ('X_2', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_14(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_14'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.4111 * x[0] * sympy.sin(x[1]) - 0.2515 * x[0] * sympy.cos(x[2]) - 0.543 * x[1] * sympy.sin(x[4]) - 0.6494 * x[2] * \
                        x[4] - 0.4371 * x[2] * sympy.sin(x[3]) - 0.38 * x[3] * sympy.sin(x[7]) + 0.1924 * x[3] * sympy.cos(x[4]) - 0.5803 * \
                        x[3] - 0.9395 * x[4] * x[6] - 0.4358 * x[6] - 0.5146 * x[7] * sympy.sin(x[6]) + 0.2753 * sympy.sin(
            x[2]) * sympy.cos(x[1]) + 0.5409 * sympy.sin(x[2]) + 0.6841 * sympy.sin(x[4]) + 0.2596 * sympy.sin(x[5]) * sympy.sin(
            x[7]) - 0.088 * sympy.cos(x[0]) + 0.8465 * sympy.cos(x[1]) * sympy.cos(x[3]) - 0.8906 * sympy.cos(x[1]) + 0.7695 * sympy.cos(
            x[5]) + 0.5497 * sympy.cos(x[7]) + 0.8888
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8888, 'const'), ('mul', 'binary'), (-0.088, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.6841, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.5409, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.5803, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.7695, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.5497, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.4358, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.8906, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.543, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4111, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2515, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2753, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.38, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1924, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5146, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2596, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4371, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8465, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9395, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6494, 'const'), ('X_2', 'var'), ('X_4', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_31(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_31'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.2248 * x[0] * sympy.cos(x[4]) + 0.7459 * x[0] * sympy.cos(x[7]) + 0.2327 * x[1] * x[4] + 0.8318 * x[1] - 0.3242 * \
                        x[2] - 0.9121 * x[3] * sympy.sin(x[2]) + 0.3384 * x[3] - 0.9013 * x[4] * x[5] + 0.2209 * x[4] * sympy.sin(
            x[6]) - 0.5861 * x[5] * sympy.cos(x[3]) + 0.9954 * x[6] + 0.3787 * x[7] + 0.5517 * sympy.sin(x[2]) * sympy.sin(
            x[6]) - 0.9807 * sympy.sin(x[4]) + 0.7837 * sympy.sin(x[6]) * sympy.cos(x[1]) + 0.1104 * sympy.sin(x[6]) * sympy.cos(
            x[5]) - 0.2217 * sympy.sin(x[7]) * sympy.cos(x[6]) + 0.6804 * sympy.cos(x[0]) + 0.512 * sympy.cos(x[2]) * sympy.cos(
            x[4]) + 0.2109 * sympy.cos(x[5]) - 0.7687
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7687, 'const'), ('mul', 'binary'), (-0.3242, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.9954, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.2109, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.6804, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.3787, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.8318, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.9807, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.3384, 'const'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1104, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7837, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2248, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2209, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9121, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7459, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2217, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9013, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5861, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2327, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5517, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.512, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_48(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_48'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.6812 * x[0] * x[6] + 0.9479 * x[0] * x[7] + 0.758 * x[1] + 0.7876 * x[2] * x[3] + 0.777 * x[2] * sympy.cos(
            x[4]) + 0.5567 * x[3] * sympy.sin(x[6]) + 0.3054 * x[3] + 0.3263 * x[4] - 0.2034 * x[5] * sympy.sin(x[7]) - 0.0087 * x[
                            5] + 0.9367 * x[6] * x[7] - 0.5454 * x[6] * sympy.sin(x[1]) + 0.3411 * x[6] * sympy.cos(
            x[5]) + 0.9591 * sympy.sin(x[0]) * sympy.sin(x[4]) + 0.1353 * sympy.sin(x[0]) + 0.1123 * sympy.sin(x[1]) * sympy.cos(
            x[0]) + 0.7456 * sympy.sin(x[3]) * sympy.cos(x[5]) + 0.3532 * sympy.cos(x[2]) - 0.4364 * sympy.cos(x[6]) + 0.6028 * sympy.cos(
            x[7]) + 0.8144
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8144, 'const'), ('mul', 'binary'), (0.1353, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.3263, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.6028, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.3054, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.0087, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.3532, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.758, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.4364, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9367, 'const'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9479, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.777, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7876, 'const'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5567, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9591, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7456, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6812, 'const'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5454, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3411, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1123, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2034, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_41(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_41'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.6428 * x[0] * x[2] - 0.6164 * x[0] * x[3] + 0.0543 * x[0] * x[6] - 0.8325 * x[1] * x[5] + 0.6661 * x[
            1] - 0.7949 * x[2] * x[6] + 0.6895 * x[2] - 0.4983 * x[3] * x[4] + 0.1462 * x[3] * sympy.cos(x[6]) + 0.7509 * x[3] - 0.4215 * x[
                            4] * x[7] - 0.0858 * x[4] * sympy.cos(x[6]) - 0.496 * x[5] + 0.4619 * x[7] * sympy.cos(
            x[3]) + 0.1056 * sympy.sin(x[0]) * sympy.cos(x[7]) - 0.6454 * sympy.sin(x[5]) * sympy.cos(x[0]) + 0.413 * sympy.sin(
            x[6]) + 0.4404 * sympy.sin(x[7]) + 0.1914 * sympy.cos(x[0]) + 0.6363 * sympy.cos(x[4]) - 0.6497
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6497, 'const'), ('mul', 'binary'), (0.4404, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.6661, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.496, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.6895, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.7509, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6363, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.413, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.1914, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4619, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0858, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1462, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6454, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8325, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1056, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6164, 'const'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0543, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6428, 'const'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4983, 'const'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7949, 'const'), ('X_2', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4215, 'const'), ('X_4', 'var'),
                                            ('X_7', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_7(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_7'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.9309 * x[0] * x[5] - 0.0939 * x[0] * sympy.cos(x[6]) - 0.2926 * x[0] * sympy.cos(x[7]) + 0.5092 * x[0] + 0.4184 * \
                        x[1] * sympy.sin(x[2]) - 0.8222 * x[1] * sympy.sin(x[7]) + 0.256 * x[1] * sympy.cos(x[6]) - 0.5408 * x[1] + 0.4882 * \
                        x[2] * sympy.sin(x[0]) - 0.3633 * x[2] - 0.8636 * x[3] * x[4] + 0.2556 * x[3] * x[6] + 0.1037 * x[3] + 0.0417 * x[
                            4] * x[7] + 0.9814 * x[4] - 0.2641 * x[6] * sympy.cos(x[7]) + 0.4572 * x[6] - 0.8664 * x[7] * sympy.cos(
            x[3]) - 0.2983 * sympy.cos(x[5]) - 0.8532 * sympy.cos(x[7]) + 0.9698
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.9698, 'const'), ('mul', 'binary'), (-0.8532, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.9814, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.2983, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.3633, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.5092, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.1037, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.4572, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.5408, 'const'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9309, 'const'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4882, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.256, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8636, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8222, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0939, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0417, 'const'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2641, 'const'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2926, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4184, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2556, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8664, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_37(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_37'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.4023 * x[0] * sympy.sin(x[1]) + 0.5026 * x[0] * sympy.cos(x[7]) - 0.668 * x[0] + 0.0781 * x[1] * x[5] - 0.7674 * \
                        x[1] * x[6] + 0.9323 * x[1] * sympy.cos(x[4]) + 0.1751 * x[2] * x[5] - 0.7908 * x[2] + 0.9569 * x[3] * sympy.cos(
            x[2]) + 0.2989 * x[3] * sympy.cos(x[5]) + 0.0846 * x[4] * sympy.sin(x[3]) - 0.6558 * x[4] + 0.681 * x[5] * sympy.sin(
            x[0]) - 0.9298 * sympy.sin(x[1]) + 0.9725 * sympy.sin(x[5]) * sympy.sin(x[7]) - 0.5464 * sympy.sin(x[5]) * sympy.cos(
            x[6]) + 0.1691 * sympy.sin(x[5]) + 0.02 * sympy.sin(x[6]) - 0.8494 * sympy.sin(x[7]) - 0.0506 * sympy.cos(x[3]) - 0.0427
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.0427, 'const'), ('mul', 'binary'), (-0.7908, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.9298, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.8494, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.6558, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.02, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.0506, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.668, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.1691, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5464, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1751, 'const'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0781, 'const'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.681, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7674, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4023, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0846, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9725, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9323, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5026, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2989, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9569, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_3', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_15(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_15'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.4145 * x[0] - 0.0584 * x[1] * x[3] - 0.1325 * x[1] * x[5] - 0.534 * x[1] + 0.6251 * x[2] * sympy.sin(
            x[1]) - 0.1126 * x[2] * sympy.sin(x[6]) + 0.5364 * x[2] * sympy.sin(x[7]) + 0.148 * x[2] * sympy.cos(x[4]) - 0.0971 * x[3] * x[
                            5] - 0.0117 * x[3] * x[6] - 0.8839 * x[3] + 0.9949 * x[4] * x[7] - 0.1066 * x[6] + 0.937 * x[7] * sympy.sin(
            x[1]) - 0.8973 * x[7] - 0.4101 * sympy.sin(x[2]) - 0.403 * sympy.sin(x[4]) * sympy.cos(x[0]) - 0.4112 * sympy.sin(
            x[4]) - 0.4852 * sympy.sin(x[5]) * sympy.cos(x[2]) - 0.4822 * sympy.cos(x[5]) + 0.4866
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.4866, 'const'), ('mul', 'binary'), (-0.8839, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.1066, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.4101, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.4822, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.4112, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.4145, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.8973, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.534, 'const'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0971, 'const'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.148, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9949, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5364, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1126, 'const'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.403, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.937, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0117, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6251, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4852, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0584, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1325, 'const'),
                                            ('X_1', 'var'), ('X_5', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_23(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_23'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.7114 * x[0] * x[7] + 0.1123 * x[0] * sympy.sin(x[2]) - 0.7196 * x[0] * sympy.cos(x[5]) + 0.4291 * x[
            1] * sympy.cos(x[2]) - 0.9206 * x[2] - 0.0209 * x[4] * x[7] + 0.9421 * x[4] * sympy.sin(x[5]) + 0.5218 * x[5] * sympy.sin(
            x[3]) + 0.9271 * x[5] - 0.2413 * x[7] + 0.2801 * sympy.sin(x[0]) * sympy.sin(x[4]) - 0.2231 * sympy.sin(x[1]) * sympy.sin(
            x[3]) + 0.5403 * sympy.sin(x[3]) * sympy.sin(x[4]) - 0.9164 * sympy.sin(x[3]) - 0.7296 * sympy.cos(x[0]) + 0.2488 * sympy.cos(
            x[1]) * sympy.cos(x[5]) + 0.5225 * sympy.cos(x[1]) - 0.8255 * sympy.cos(x[4]) * sympy.cos(x[6]) + 0.5286 * sympy.cos(
            x[4]) + 0.6764 * sympy.cos(x[6]) - 0.079
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.079, 'const'), ('mul', 'binary'), (0.9271, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.7296, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.9206, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.6764, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.2413, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.5286, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.9164, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.5225, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0209, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5403, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7114, 'const'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7196, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5218, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4291, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1123, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9421, 'const'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8255, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2801, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2231, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2488, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_30(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_30'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.7041 * x[0] * sympy.sin(x[1]) - 0.4358 * x[0] * sympy.cos(x[5]) + 0.4578 * x[1] * x[3] + 0.1572 * x[
            2] * sympy.sin(x[4]) + 0.1828 * x[2] * sympy.cos(x[0]) - 0.4083 * x[3] * x[4] + 0.5413 * x[3] * x[7] + 0.21 * x[3] + 0.902 * x[
                            4] + 0.45 * x[6] + 0.3808 * x[7] * sympy.sin(x[0]) + 0.555 * x[7] * sympy.cos(x[4]) + 0.1201 * sympy.sin(
            x[0]) * sympy.sin(x[3]) - 0.8729 * sympy.sin(x[1]) + 0.0085 * sympy.sin(x[3]) * sympy.cos(x[2]) - 0.3554 * sympy.sin(
            x[5]) - 0.8006 * sympy.sin(x[6]) * sympy.cos(x[3]) + 0.2044 * sympy.sin(x[7]) - 0.4135 * sympy.cos(x[0]) + 0.8568 * sympy.cos(
            x[2]) - 0.5461
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.5461, 'const'), ('mul', 'binary'), (0.45, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.902, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.4135, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.21, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.8729, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.8568, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.2044, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.3554, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1828, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3808, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5413, 'const'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1201, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8006, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.555, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7041, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4083, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1572, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4358, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4578, 'const'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0085, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_28(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_28'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.8221 * x[0] * sympy.cos(x[1]) + 0.1116 * x[0] * sympy.cos(x[5]) + 0.0041 * x[1] * sympy.cos(x[4]) - 0.0971 * x[
            1] * sympy.cos(x[6]) - 0.5351 * x[1] + 0.4604 * x[2] * x[3] - 0.0744 * x[2] * sympy.cos(x[4]) - 0.1618 * x[3] * sympy.cos(
            x[5]) + 0.0682 * x[4] * sympy.sin(x[6]) + 0.5913 * x[4] * sympy.sin(x[7]) + 0.9268 * x[4] + 0.5348 * x[6] + 0.1041 * x[
                            7] * sympy.sin(x[3]) + 0.5174 * x[7] - 0.577 * sympy.sin(x[0]) - 0.2623 * sympy.sin(x[2]) - 0.8209 * sympy.sin(
            x[3]) * sympy.cos(x[1]) - 0.4537 * sympy.sin(x[5]) - 0.0064 * sympy.sin(x[6]) * sympy.cos(x[2]) + 0.3276 * sympy.cos(
            x[3]) + 0.3129
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3129, 'const'), ('mul', 'binary'), (0.3276, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.5348, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.2623, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.4537, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.577, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.5174, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.9268, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.5351, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0064, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8221, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0682, 'const'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0971, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5913, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1041, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0041, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1618, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8209, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1116, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0744, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4604, 'const'),
                                            ('X_2', 'var'), ('X_3', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_17(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_17'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.4562 * x[0] * x[7] + 0.8479 * x[2] * sympy.sin(x[1]) - 0.6097 * x[2] * sympy.cos(x[6]) - 0.4512 * x[2] + 0.6354 * \
                        x[3] * sympy.sin(x[2]) - 0.067 * x[3] * sympy.cos(x[5]) + 0.0595 * x[4] * sympy.sin(x[1]) + 0.1373 * x[
                            4] * sympy.cos(x[3]) - 0.4072 * x[5] + 0.2627 * x[6] - 0.5657 * sympy.sin(x[0]) * sympy.sin(
            x[1]) - 0.3002 * sympy.sin(x[1]) * sympy.cos(x[3]) + 0.6803 * sympy.sin(x[1]) * sympy.cos(x[7]) - 0.0504 * sympy.sin(
            x[1]) - 0.2951 * sympy.sin(x[4]) * sympy.sin(x[6]) - 0.2192 * sympy.cos(x[0]) * sympy.cos(x[4]) + 0.1622 * sympy.cos(
            x[0]) + 0.9519 * sympy.cos(x[3]) - 0.718 * sympy.cos(x[4]) - 0.3951 * sympy.cos(x[7]) + 0.142
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.142, 'const'), ('mul', 'binary'), (-0.0504, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.4512, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.1622, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.3951, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.9519, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.718, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.2627, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.4072, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0595, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3002, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6097, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6803, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1373, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8479, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2192, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2951, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.067, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4562, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6354, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5657, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_1', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_43(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_43'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.1983 * x[0] + 0.7106 * x[2] * x[5] - 0.6263 * x[2] - 0.5304 * x[4] * x[5] + 0.1736 * x[4] * sympy.cos(
            x[1]) + 0.7369 * x[4] - 0.1311 * x[5] * sympy.sin(x[3]) + 0.0137 * x[5] - 0.0997 * x[6] * sympy.sin(x[1]) - 0.0832 * x[
                            6] * sympy.cos(x[5]) - 0.0725 * x[7] * sympy.sin(x[1]) + 0.6557 * x[7] * sympy.cos(x[4]) - 0.2283 * x[
                            7] * sympy.cos(x[6]) + 0.8716 * x[7] - 0.5892 * sympy.sin(x[0]) * sympy.sin(x[2]) + 0.3893 * sympy.sin(
            x[3]) + 0.9778 * sympy.sin(x[4]) * sympy.cos(x[6]) - 0.5492 * sympy.sin(x[5]) * sympy.cos(x[7]) - 0.5757 * sympy.cos(
            x[1]) - 0.393 * sympy.cos(x[6]) + 0.5569
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5569, 'const'), ('mul', 'binary'), (0.1983, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.5757, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.8716, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.6263, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.0137, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.7369, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.393, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.3893, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0725, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6557, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5492, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0997, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1736, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7106, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1311, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5304, 'const'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0832, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5892, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2283, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9778, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_2(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_2'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.1213 * x[0] * x[5] + 0.5367 * x[0] * x[6] - 0.255 * x[0] * sympy.sin(x[2]) + 0.8217 * x[0] - 0.6108 * x[1] * x[
            3] + 0.4821 * x[2] * x[6] - 0.7619 * x[2] * sympy.sin(x[4]) - 0.8565 * x[2] * sympy.cos(x[7]) + 0.1538 * x[2] + 0.9386 * x[
                            3] * sympy.sin(x[4]) + 0.7035 * x[3] * sympy.cos(x[6]) + 0.48 * x[4] * sympy.cos(x[6]) - 0.7125 * x[
                            5] * sympy.cos(x[4]) + 0.9182 * x[6] * sympy.sin(x[5]) - 0.7055 * x[6] + 0.7903 * sympy.sin(
            x[1]) + 0.3301 * sympy.sin(x[4]) - 0.8563 * sympy.sin(x[5]) - 0.8319 * sympy.cos(x[3]) + 0.9053 * sympy.cos(x[7]) + 0.8513
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8513, 'const'), ('mul', 'binary'), (-0.8563, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.8319, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.8217, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.7903, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.7055, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.9053, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.3301, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.1538, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9182, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8565, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1213, 'const'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4821, 'const'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7035, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.255, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6108, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.48, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7125, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9386, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5367, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7619, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_4(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_4'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.229 * x[0] * x[3] - 0.0595 * x[0] * x[6] + 0.7661 * x[0] * sympy.cos(x[1]) + 0.2791 * x[0] * sympy.cos(
            x[4]) + 0.0254 * x[0] - 0.7029 * x[1] * x[3] - 0.8571 * x[1] * x[5] - 0.0074 * x[1] * sympy.sin(x[2]) + 0.3041 * x[2] - 0.1725 * \
                        x[3] * x[5] - 0.158 * x[4] * sympy.sin(x[1]) - 0.6454 * x[4] - 0.8572 * x[5] - 0.8411 * x[6] - 0.5529 * x[
                            7] * sympy.sin(x[5]) - 0.6246 * sympy.sin(x[0]) * sympy.cos(x[7]) - 0.4132 * sympy.sin(x[2]) * sympy.sin(
            x[4]) + 0.2489 * sympy.sin(x[7]) + 0.0314 * sympy.cos(x[1]) - 0.4135 * sympy.cos(x[3]) - 0.0282
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.0282, 'const'), ('mul', 'binary'), (0.0314, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.0254, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.6454, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.2489, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.4135, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.3041, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.8411, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.8572, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6246, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1725, 'const'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5529, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8571, 'const'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7661, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4132, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7029, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0074, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2791, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0595, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.158, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.229, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_45(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_45'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.4771 * x[0] * x[5] - 0.1189 * x[0] * sympy.cos(x[2]) - 0.3054 * x[0] + 0.9761 * x[1] * x[4] - 0.4423 * x[2] * x[
            4] - 0.7181 * x[2] * x[6] - 0.3901 * x[2] - 0.9601 * x[3] * sympy.sin(x[4]) - 0.9118 * x[4] + 0.7557 * x[5] * sympy.sin(
            x[3]) - 0.8463 * x[6] * sympy.sin(x[0]) + 0.979 * x[6] * sympy.cos(x[4]) - 0.2642 * x[7] + 0.5433 * sympy.sin(x[3]) * sympy.cos(
            x[6]) + 0.8195 * sympy.sin(x[5]) + 0.099 * sympy.sin(x[6]) + 0.4622 * sympy.sin(x[7]) * sympy.cos(x[4]) - 0.7356 * sympy.cos(
            x[1]) * sympy.cos(x[7]) + 0.9411 * sympy.cos(x[1]) - 0.67 * sympy.cos(x[3]) + 0.9047
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.9047, 'const'), ('mul', 'binary'), (-0.3901, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.67, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.9411, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.9118, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.099, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.8195, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.2642, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.3054, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9601, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7181, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4423, 'const'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7356, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1189, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8463, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9761, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4622, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4771, 'const'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5433, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7557, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.979, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_6', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_49(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_49'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.7854 * x[0] * x[2] - 0.7261 * x[0] * sympy.cos(x[6]) - 0.882 * x[1] * x[3] - 0.4856 * x[1] + 0.2948 * x[2] * x[
            4] + 0.1567 * x[3] * x[4] + 0.8421 * x[3] * x[5] + 0.5902 * x[4] * x[6] + 0.3935 * x[4] * x[7] + 0.9836 * x[4] - 0.324 * x[5] * \
                        x[6] - 0.5754 * x[5] * sympy.sin(x[7]) + 0.753 * x[6] + 0.4612 * x[7] * sympy.cos(x[3]) - 0.7033 * x[
                            7] + 0.4526 * sympy.sin(x[0]) * sympy.cos(x[4]) + 0.9749 * sympy.sin(x[0]) + 0.1975 * sympy.sin(
            x[3]) + 0.7332 * sympy.sin(x[5]) - 0.4149 * sympy.cos(x[2]) + 0.8517
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8517, 'const'), ('mul', 'binary'), (-0.7033, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.9836, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.1975, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.753, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.4149, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.7332, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.4856, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.9749, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3935, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5902, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1567, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7854, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.324, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5754, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4612, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.882, 'const'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4526, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2948, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8421, 'const'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7261, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_11(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_11'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.8617 * x[0] * x[2] + 0.484 * x[0] * x[5] - 0.2175 * x[0] + 0.462 * x[1] * x[2] - 0.3026 * x[1] * x[5] - 0.8315 * \
                        x[1] + 0.3715 * x[2] * sympy.cos(x[6]) + 0.6416 * x[2] - 0.4051 * x[4] * sympy.cos(x[7]) + 0.7289 * x[4] - 0.8431 * \
                        x[5] * sympy.sin(x[6]) + 0.4047 * x[5] + 0.4811 * x[6] * sympy.sin(x[0]) + 0.2154 * x[7] * sympy.cos(
            x[3]) - 0.9629 * x[7] + 0.4493 * sympy.sin(x[1]) * sympy.cos(x[0]) - 0.2833 * sympy.sin(x[2]) * sympy.sin(
            x[3]) - 0.1912 * sympy.sin(x[4]) * sympy.cos(x[1]) - 0.4748 * sympy.cos(x[3]) - 0.9378 * sympy.cos(x[6]) + 0.9259
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.9259, 'const'), ('mul', 'binary'), (-0.8315, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.9629, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.7289, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.4047, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.2175, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.9378, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.4748, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.6416, 'const'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4493, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2154, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2833, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4051, 'const'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3026, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8617, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4811, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8431, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.484, 'const'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.462, 'const'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3715, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1912, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_10(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_10'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.6883 * x[0] * x[2] + 0.6159 * x[0] * sympy.cos(x[4]) - 0.6064 * x[0] + 0.2778 * x[1] * x[5] + 0.8964 * x[
            1] - 0.5559 * x[2] * x[5] - 0.5996 * x[4] * x[7] - 0.1093 * x[4] * sympy.cos(x[2]) + 0.7689 * x[4] * sympy.cos(x[5]) + 0.8386 * \
                        x[5] * sympy.sin(x[0]) + 0.0785 * x[6] * sympy.cos(x[3]) + 0.9364 * x[7] * sympy.sin(x[0]) + 0.5896 * sympy.sin(
            x[1]) * sympy.cos(x[2]) + 0.9692 * sympy.sin(x[3]) + 0.3823 * sympy.sin(x[4]) + 0.7708 * sympy.sin(x[5]) * sympy.sin(
            x[6]) - 0.2607 * sympy.sin(x[5]) - 0.972 * sympy.sin(x[6]) + 0.1249 * sympy.cos(x[2]) + 0.7452 * sympy.cos(x[7]) - 0.8081
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8081, 'const'), ('mul', 'binary'), (0.8964, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.9692, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.972, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.1249, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.3823, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.2607, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.7452, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.6064, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0785, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6883, 'const'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5996, 'const'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5896, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7689, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9364, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6159, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7708, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1093, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5559, 'const'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8386, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2778, 'const'), ('X_1', 'var'),
                                            ('X_5', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_1(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_1'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.2348 * x[0] * sympy.sin(x[2]) - 0.2717 * x[0] + 0.8024 * x[1] * x[2] + 0.9908 * x[1] * x[3] - 0.8918 * x[1] * x[
            5] - 0.9836 * x[4] - 0.2348 * x[5] * sympy.sin(x[0]) + 0.3617 * x[6] * x[7] + 0.2862 * x[6] * sympy.sin(x[0]) + 0.4972 * x[
                            6] * sympy.cos(x[5]) + 0.9169 * x[6] - 0.2391 * x[7] * sympy.sin(x[1]) + 0.9162 * x[7] * sympy.cos(
            x[5]) + 0.3437 * x[7] + 0.052 * sympy.sin(x[2]) * sympy.cos(x[3]) + 0.4808 * sympy.sin(x[3]) + 0.3809 * sympy.sin(
            x[4]) * sympy.cos(x[3]) - 0.3181 * sympy.cos(x[1]) - 0.946 * sympy.cos(x[2]) - 0.5821 * sympy.cos(x[5]) - 0.2309
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2309, 'const'), ('mul', 'binary'), (0.9169, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.5821, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.3181, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.2717, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.946, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.9836, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.3437, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.4808, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2391, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3617, 'const'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2348, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.052, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3809, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9908, 'const'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2348, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8918, 'const'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9162, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8024, 'const'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4972, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2862, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_6', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_40(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_40'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.3123 * x[0] * sympy.sin(x[3]) - 0.2524 * x[1] * sympy.cos(x[3]) + 0.9581 * x[3] * x[5] - 0.6699 * x[
            3] * sympy.cos(x[2]) + 0.3393 * x[4] * x[6] - 0.1816 * x[4] * sympy.cos(x[1]) - 0.3223 * x[4] - 0.2647 * x[5] * sympy.sin(
            x[1]) - 0.5192 * x[5] * sympy.sin(x[7]) - 0.6839 * x[5] - 0.0375 * x[6] - 0.3008 * x[7] - 0.7932 * sympy.sin(x[0]) * sympy.sin(
            x[7]) + 0.0606 * sympy.sin(x[1]) - 0.549 * sympy.sin(x[4]) * sympy.cos(x[5]) - 0.7632 * sympy.sin(x[5]) * sympy.sin(
            x[6]) - 0.8251 * sympy.sin(x[7]) * sympy.cos(x[6]) + 0.1191 * sympy.cos(x[0]) + 0.7175 * sympy.cos(x[2]) - 0.8422 * sympy.cos(
            x[3]) - 0.5415
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.5415, 'const'), ('mul', 'binary'), (0.0606, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.8422, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.3223, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.1191, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.7175, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.3008, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.0375, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.6839, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3393, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2524, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.549, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7632, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6699, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2647, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9581, 'const'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3123, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8251, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7932, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5192, 'const'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1816, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('X_4', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_29(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_29'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.4293 * x[0] * sympy.sin(x[6]) - 0.6432 * x[0] * sympy.cos(x[1]) + 0.7024 * x[0] * sympy.cos(x[5]) + 0.605 * x[
            1] * sympy.cos(x[7]) - 0.5911 * x[3] * sympy.cos(x[2]) + 0.336 * x[3] - 0.4346 * x[4] * x[7] + 0.8895 * x[4] * sympy.sin(
            x[2]) - 0.3048 * x[4] * sympy.sin(x[6]) + 0.1986 * x[5] - 0.5951 * x[6] * sympy.sin(x[1]) + 0.9955 * x[6] * sympy.sin(
            x[3]) - 0.9398 * x[6] * sympy.sin(x[5]) + 0.5323 * x[6] + 0.218 * x[7] - 0.3352 * sympy.sin(x[0]) + 0.0125 * sympy.sin(
            x[1]) - 0.4324 * sympy.cos(x[2]) - 0.6282 * sympy.cos(x[4]) + 0.2093 * sympy.cos(x[6]) * sympy.cos(x[7]) - 0.5241
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.5241, 'const'), ('mul', 'binary'), (0.1986, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.6282, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.4324, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.0125, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.3352, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.5323, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.336, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.218, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6432, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8895, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9955, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4293, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3048, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2093, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7024, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5951, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4346, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.605, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9398, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5911, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_3', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_22(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_22'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.898 * x[0] * x[3] - 0.9503 * x[0] * sympy.cos(x[4]) + 0.2834 * x[0] + 0.238 * x[1] * x[5] - 0.8811 * x[
            1] - 0.7341 * x[2] * sympy.sin(x[4]) + 0.5119 * x[3] * x[7] + 0.7559 * x[3] * sympy.sin(x[2]) + 0.9288 * x[3] + 0.3572 * x[4] * \
                        x[7] - 0.4381 * x[4] - 0.7698 * x[5] * sympy.sin(x[0]) + 0.8551 * x[5] * sympy.sin(x[4]) + 0.7433 * x[
                            6] * sympy.sin(x[4]) - 0.7411 * x[7] + 0.4594 * sympy.sin(x[2]) + 0.084 * sympy.sin(x[6]) * sympy.cos(
            x[2]) + 0.2208 * sympy.sin(x[6]) - 0.2933 * sympy.sin(x[7]) * sympy.cos(x[1]) - 0.6532 * sympy.cos(x[5]) - 0.0327
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.0327, 'const'), ('mul', 'binary'), (-0.6532, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.2208, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.9288, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.2834, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.8811, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.7411, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.4381, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.4594, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7341, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9503, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.898, 'const'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.238, 'const'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5119, 'const'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2933, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7698, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7433, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8551, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3572, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.084, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7559, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_3', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_27(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_27'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.3324 * x[0] * x[4] + 0.2892 * x[1] * x[5] - 0.6192 * x[2] + 0.4456 * x[3] * x[7] + 0.4269 * x[3] * sympy.sin(
            x[1]) - 0.9725 * x[3] + 0.1432 * x[4] * x[5] + 0.6751 * x[4] * sympy.sin(x[1]) + 0.2732 * x[5] * x[6] - 0.7161 * x[5] - 0.0606 * \
                        x[6] + 0.947 * x[7] * sympy.sin(x[6]) + 0.1591 * x[7] - 0.2772 * sympy.sin(x[1]) * sympy.cos(
            x[2]) - 0.1246 * sympy.sin(x[4]) * sympy.sin(x[6]) - 0.002 * sympy.sin(x[7]) * sympy.cos(x[0]) + 0.6097 * sympy.sin(
            x[7]) * sympy.cos(x[5]) + 0.6305 * sympy.cos(x[0]) - 0.6588 * sympy.cos(x[1]) - 0.372 * sympy.cos(x[4]) + 0.7595
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7595, 'const'), ('mul', 'binary'), (0.1591, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.6192, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.6305, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.372, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.0606, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.7161, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.9725, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.6588, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2732, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.947, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3324, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4456, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1432, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2772, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4269, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1246, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.002, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6751, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6097, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2892, 'const'), ('X_1', 'var'), ('X_5', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_34(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_34'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.9048 * x[0] * sympy.sin(x[5]) - 0.1334 * x[0] + 0.5894 * x[1] * sympy.cos(x[3]) - 0.6879 * x[1] + 0.9652 * x[
            2] * sympy.sin(x[7]) + 0.6018 * x[3] * sympy.cos(x[0]) - 0.3301 * x[3] - 0.2258 * x[4] * sympy.sin(x[3]) + 0.4305 * x[
                            5] * sympy.sin(x[2]) + 0.0896 * x[5] * sympy.sin(x[4]) - 0.3087 * x[6] + 0.2193 * sympy.sin(x[0]) * sympy.cos(
            x[1]) + 0.0836 * sympy.sin(x[0]) * sympy.cos(x[6]) - 0.4778 * sympy.sin(x[2]) + 0.3025 * sympy.sin(x[4]) - 0.9751 * sympy.sin(
            x[5]) + 0.1464 * sympy.sin(x[6]) * sympy.cos(x[5]) + 0.5294 * sympy.sin(x[7]) + 0.7453 * sympy.cos(x[0]) * sympy.cos(
            x[2]) - 0.0543 * sympy.cos(x[1]) * sympy.cos(x[4]) - 0.4235
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4235, 'const'), ('mul', 'binary'), (0.3025, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.5294, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.1334, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.3301, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.6879, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.9751, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.3087, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.4778, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2258, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2193, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5894, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1464, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4305, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0896, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7453, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9048, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0836, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6018, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9652, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0543, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_16(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_16'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.5156 * x[0] * x[7] + 0.9197 * x[0] - 0.1251 * x[1] * sympy.cos(x[0]) + 0.2227 * x[1] * sympy.cos(x[4]) + 0.3273 * \
                        x[2] * x[4] - 0.3862 * x[2] * x[6] + 0.442 * x[2] + 0.3194 * x[3] * sympy.sin(x[6]) + 0.4475 * x[5] * x[
                            6] - 0.4705 * x[5] * sympy.sin(x[1]) - 0.0491 * x[5] * sympy.cos(x[2]) - 0.0561 * x[6] - 0.3395 * x[
                            7] * sympy.cos(x[2]) + 0.4068 * x[7] + 0.5109 * sympy.sin(x[1]) * sympy.sin(x[7]) + 0.4796 * sympy.sin(
            x[1]) + 0.7219 * sympy.sin(x[5]) + 0.6775 * sympy.sin(x[6]) * sympy.sin(x[7]) - 0.1791 * sympy.cos(x[3]) - 0.536 * sympy.cos(
            x[4]) + 0.1843
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1843, 'const'), ('mul', 'binary'), (0.9197, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.536, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.1791, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.4068, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.7219, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.442, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.0561, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.4796, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0491, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2227, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5109, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4705, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3194, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3862, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6775, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5156, 'const'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3273, 'const'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3395, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4475, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1251, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_1', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_13(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_13'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.8975 * x[0] * x[4] + 0.2335 * x[0] * sympy.cos(x[1]) - 0.7531 * x[1] - 0.943 * x[2] * x[3] + 0.2387 * x[
            3] * sympy.cos(x[4]) + 0.9599 * x[3] - 0.7287 * x[4] - 0.8228 * x[5] * x[7] - 0.4983 * x[5] + 0.2938 * x[6] * sympy.sin(
            x[1]) - 0.7992 * x[7] + 0.8496 * sympy.sin(x[0]) * sympy.sin(x[5]) - 0.1255 * sympy.sin(x[0]) * sympy.sin(
            x[6]) + 0.6688 * sympy.sin(x[1]) * sympy.cos(x[5]) + 0.972 * sympy.sin(x[2]) * sympy.cos(x[6]) + 0.5573 * sympy.sin(
            x[2]) + 0.2417 * sympy.sin(x[3]) * sympy.cos(x[5]) + 0.5416 * sympy.sin(x[6]) - 0.3718 * sympy.cos(x[0]) + 0.6633 * sympy.cos(
            x[6]) * sympy.cos(x[7]) + 0.1036
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1036, 'const'), ('mul', 'binary'), (0.9599, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.4983, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.7287, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.5573, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.5416, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.3718, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.7531, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.7992, 'const'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2417, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8975, 'const'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2335, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2938, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.943, 'const'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8228, 'const'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1255, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2387, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.972, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6688, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6633, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8496, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_47(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_47'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.0447 * x[0] * x[7] + 0.8346 * x[1] * x[3] - 0.3228 * x[1] * sympy.cos(x[4]) + 0.9412 * x[2] * x[3] + 0.1708 * x[
            2] * sympy.sin(x[7]) + 0.3882 * x[2] + 0.7099 * x[3] + 0.6172 * x[4] * sympy.sin(x[3]) - 0.6374 * x[5] - 0.1991 * x[
                            6] * sympy.cos(x[4]) + 0.9092 * x[6] + 0.1241 * sympy.sin(x[0]) * sympy.cos(x[5]) + 0.1517 * sympy.sin(
            x[0]) + 0.2051 * sympy.sin(x[1]) * sympy.sin(x[2]) + 0.1489 * sympy.sin(x[1]) * sympy.sin(x[7]) + 0.153 * sympy.sin(
            x[1]) + 0.1521 * sympy.sin(x[2]) * sympy.cos(x[4]) - 0.6365 * sympy.sin(x[3]) * sympy.sin(x[7]) - 0.018 * sympy.sin(
            x[7]) - 0.4221 * sympy.cos(x[4]) - 0.3239
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3239, 'const'), ('mul', 'binary'), (0.3882, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.9092, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.018, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.1517, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.7099, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.4221, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.153, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.6374, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1708, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1521, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6365, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6172, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0447, 'const'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3228, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1241, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1489, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9412, 'const'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8346, 'const'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1991, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2051, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_36(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_36'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.7653 * x[0] * x[3] + 0.5412 * x[0] * sympy.sin(x[7]) + 0.2878 * x[0] * sympy.cos(x[2]) + 0.235 * x[1] - 0.6725 * \
                        x[2] * sympy.cos(x[3]) - 0.3975 * x[3] - 0.782 * x[4] + 0.9517 * x[5] * x[6] + 0.7848 * x[5] * sympy.sin(
            x[7]) - 0.9185 * x[5] * sympy.cos(x[4]) + 0.6875 * x[5] + 0.3634 * x[6] * sympy.cos(x[7]) - 0.174 * x[6] - 0.8737 * sympy.sin(
            x[2]) + 0.64 * sympy.sin(x[3]) * sympy.sin(x[4]) + 0.3912 * sympy.sin(x[7]) - 0.2567 * sympy.cos(x[0]) * sympy.cos(
            x[4]) + 0.5423 * sympy.cos(x[0]) + 0.9147 * sympy.cos(x[1]) * sympy.cos(x[2]) + 0.2936 * sympy.cos(x[3]) * sympy.cos(
            x[5]) - 0.6212
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6212, 'const'), ('mul', 'binary'), (-0.8737, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.3975, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6875, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.782, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.235, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.5423, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.174, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.3912, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2878, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2936, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9517, 'const'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9147, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7848, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7653, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2567, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9185, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5412, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3634, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6725, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.64, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_44(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_44'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.0794 * x[0] * sympy.cos(x[1]) + 0.6159 * x[1] * x[2] - 0.5508 * x[1] * x[5] + 0.5814 * x[1] * sympy.sin(
            x[7]) + 0.1308 * x[2] * sympy.sin(x[0]) + 0.4531 * x[2] * sympy.cos(x[7]) + 0.4221 * x[3] - 0.4706 * x[4] * sympy.sin(
            x[7]) + 0.9437 * x[4] * sympy.cos(x[5]) - 0.7133 * x[4] + 0.784 * x[5] * sympy.cos(x[0]) + 0.4561 * x[5] + 0.5391 * sympy.sin(
            x[2]) + 0.7537 * sympy.sin(x[4]) * sympy.cos(x[6]) - 0.1753 * sympy.cos(x[0]) * sympy.cos(x[6]) + 0.2367 * sympy.cos(
            x[0]) + 0.8943 * sympy.cos(x[1]) - 0.9801 * sympy.cos(x[2]) * sympy.cos(x[3]) - 0.0693 * sympy.cos(x[6]) + 0.2396 * sympy.cos(
            x[7]) + 0.9474
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.9474, 'const'), ('mul', 'binary'), (0.4561, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.8943, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.0693, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.4221, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.7133, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.2367, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.5391, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.2396, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6159, 'const'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1753, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4706, 'const'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0794, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.784, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5814, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9801, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4531, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9437, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1308, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7537, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5508, 'const'), ('X_1', 'var'), ('X_5', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_6(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_6'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.6837 * x[0] - 0.8837 * x[1] * x[2] - 0.5143 * x[1] * sympy.sin(x[7]) + 0.1197 * x[1] * sympy.cos(x[0]) - 0.4339 * \
                        x[1] + 0.0717 * x[2] * x[7] - 0.5343 * x[3] * x[5] + 0.2918 * x[4] * sympy.cos(x[5]) - 0.35 * x[5] + 0.1734 * x[
                            6] * sympy.sin(x[2]) - 0.6963 * x[7] + 0.5374 * sympy.sin(x[1]) * sympy.sin(x[6]) + 0.7663 * sympy.sin(
            x[2]) - 0.7015 * sympy.sin(x[3]) * sympy.cos(x[6]) + 0.0821 * sympy.sin(x[3]) - 0.7863 * sympy.sin(x[4]) + 0.7635 * sympy.cos(
            x[0]) * sympy.cos(x[6]) + 0.1298 * sympy.cos(x[3]) * sympy.cos(x[4]) - 0.9813 * sympy.cos(x[5]) * sympy.cos(
            x[6]) - 0.9848 * sympy.cos(x[6]) - 0.8544
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8544, 'const'), ('mul', 'binary'), (0.7663, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.4339, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.35, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.9848, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.0821, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.6963, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.6837, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.7863, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1298, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8837, 'const'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5343, 'const'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7635, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5143, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2918, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1197, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9813, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1734, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5374, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0717, 'const'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7015, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_18(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_18'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.0173 * x[0] + 0.2511 * x[1] * sympy.cos(x[5]) + 0.6553 * x[1] + 0.3012 * x[2] * sympy.sin(x[1]) - 0.8481 * x[
            2] * sympy.sin(x[4]) - 0.0235 * x[2] * sympy.cos(x[3]) - 0.4411 * x[2] + 0.8871 * x[3] * sympy.sin(x[5]) - 0.8322 * x[
                            3] * sympy.sin(x[7]) - 0.3323 * x[3] + 0.0417 * x[4] * sympy.cos(x[5]) - 0.0192 * x[5] * x[7] - 0.2876 * x[
                            5] * sympy.sin(x[0]) + 0.4875 * x[5] * sympy.cos(x[6]) - 0.1811 * x[6] * sympy.cos(x[7]) + 0.4953 * sympy.sin(
            x[4]) - 0.3695 * sympy.sin(x[5]) + 0.9895 * sympy.sin(x[6]) - 0.9456 * sympy.sin(x[7]) - 0.1871 * sympy.cos(x[1]) * sympy.cos(
            x[7]) + 0.0485
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.0485, 'const'), ('mul', 'binary'), (0.9895, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.4953, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.9456, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.0173, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.4411, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.3323, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6553, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.3695, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4875, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1811, 'const'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8481, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0235, 'const'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8322, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1871, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3012, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0192, 'const'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0417, 'const'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2511, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8871, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2876, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_3(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_3'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.517 * x[0] * x[6] + 0.8709 * x[0] * sympy.cos(x[3]) + 0.445 * x[1] * sympy.sin(x[2]) - 0.7785 * x[1] * sympy.cos(
            x[3]) + 0.7564 * x[1] + 0.1987 * x[2] * sympy.cos(x[7]) + 0.6675 * x[2] + 0.5181 * x[3] * x[4] + 0.3387 * x[4] * x[5] + 0.3192 * \
                        x[5] + 0.8468 * x[6] * sympy.cos(x[3]) - 0.7186 * x[6] * sympy.cos(x[5]) - 0.8378 * x[6] - 0.2499 * x[
                            7] * sympy.cos(x[4]) - 0.0502 * sympy.sin(x[0]) - 0.6406 * sympy.sin(x[1]) * sympy.cos(
            x[5]) + 0.6044 * sympy.sin(x[2]) * sympy.cos(x[6]) - 0.067 * sympy.cos(x[3]) + 0.7396 * sympy.cos(x[4]) + 0.7652 * sympy.cos(
            x[7]) - 0.1012
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.1012, 'const'), ('mul', 'binary'), (-0.067, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.0502, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.7652, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.6675, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.7396, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.3192, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.8378, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.7564, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6406, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7785, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3387, 'const'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7186, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8709, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2499, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1987, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5181, 'const'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8468, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6044, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.445, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.517, 'const'), ('X_0', 'var'), ('X_6', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_24(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_24'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.1132 * x[0] * x[3] - 0.8204 * x[0] + 0.4556 * x[1] * sympy.sin(x[2]) - 0.6797 * x[1] * sympy.cos(x[5]) + 0.0496 * \
                        x[2] * x[5] + 0.1041 * x[2] + 0.6161 * x[3] * x[5] + 0.917 * x[3] * sympy.sin(x[6]) + 0.2079 * x[3] + 0.3147 * x[
                            4] * sympy.sin(x[0]) + 0.1142 * x[5] - 0.5225 * x[7] * sympy.cos(x[0]) - 0.8683 * sympy.sin(x[1]) * sympy.cos(
            x[3]) + 0.6743 * sympy.sin(x[1]) * sympy.cos(x[6]) + 0.678 * sympy.sin(x[1]) - 0.9403 * sympy.sin(x[4]) - 0.7012 * sympy.sin(
            x[5]) * sympy.cos(x[0]) + 0.3328 * sympy.sin(x[7]) * sympy.cos(x[6]) + 0.8343 * sympy.cos(x[6]) + 0.6999 * sympy.cos(
            x[7]) + 0.1472
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1472, 'const'), ('mul', 'binary'), (0.1041, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.2079, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.1142, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.8204, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.9403, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.6999, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.678, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.8343, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3328, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6161, 'const'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4556, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1132, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3147, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6797, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7012, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.917, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0496, 'const'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5225, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8683, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6743, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_12(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_12'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.5323 * x[0] * x[1] - 0.5034 * x[0] * x[3] + 0.3937 * x[1] * sympy.sin(x[5]) + 0.0533 * x[2] * sympy.sin(
            x[1]) + 0.5505 * x[2] + 0.4064 * x[4] * x[5] - 0.6477 * x[4] * x[6] + 0.6062 * x[4] - 0.0322 * x[5] * sympy.cos(x[0]) - 0.95 * \
                        x[6] + 0.3486 * x[7] * sympy.sin(x[1]) - 0.1005 * x[7] + 0.2191 * sympy.sin(x[0]) + 0.2203 * sympy.sin(
            x[1]) * sympy.cos(x[6]) + 0.774 * sympy.sin(x[3]) - 0.6719 * sympy.sin(x[5]) - 0.3698 * sympy.sin(x[7]) * sympy.cos(
            x[5]) + 0.2263 * sympy.sin(x[7]) * sympy.cos(x[6]) + 0.9307 * sympy.cos(x[1]) * sympy.cos(x[4]) - 0.578 * sympy.cos(x[1]) + 0.7
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7, 'const'), ('mul', 'binary'), (-0.95, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.578, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.5505, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.6719, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.2191, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.774, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.1005, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.6062, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2263, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4064, 'const'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0322, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5034, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9307, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2203, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6477, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0533, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3486, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5323, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3937, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3698, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_25(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_25'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.3253 * x[0] * x[7] - 0.2726 * x[0] * sympy.sin(x[1]) - 0.7631 * x[0] - 0.8332 * x[1] * x[4] - 0.3785 * x[
            1] - 0.5498 * x[2] * sympy.cos(x[3]) - 0.4275 * x[3] - 0.7997 * x[4] * x[6] + 0.8541 * x[4] * x[7] + 0.1197 * x[4] * sympy.cos(
            x[3]) + 0.2248 * x[5] * sympy.cos(x[1]) - 0.2075 * x[5] * sympy.cos(x[4]) - 0.5759 * x[5] + 0.7614 * x[6] * sympy.sin(
            x[7]) - 0.495 * x[6] + 0.795 * sympy.sin(x[4]) + 0.083 * sympy.sin(x[7]) * sympy.cos(x[5]) - 0.2431 * sympy.cos(
            x[2]) * sympy.cos(x[5]) + 0.6907 * sympy.cos(x[2]) - 0.9001 * sympy.cos(x[7]) - 0.4194
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4194, 'const'), ('mul', 'binary'), (-0.5759, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.9001, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.795, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.7631, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.6907, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.495, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.3785, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.4275, 'const'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8541, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2248, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7997, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.083, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3253, 'const'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5498, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7614, 'const'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2726, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1197, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8332, 'const'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2075, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2431, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_21(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_21'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.01 * x[0] * x[6] + 0.1443 * x[0] * sympy.sin(x[3]) - 0.8468 * x[2] + 0.6942 * x[4] * sympy.sin(x[3]) + 0.2201 * x[
            4] * sympy.sin(x[6]) - 0.0818 * x[5] * x[7] + 0.6879 * x[5] * sympy.sin(x[6]) - 0.2317 * x[5] - 0.9668 * x[6] * sympy.cos(
            x[7]) - 0.7264 * sympy.sin(x[0]) + 0.6633 * sympy.sin(x[4]) - 0.704 * sympy.sin(x[5]) * sympy.cos(x[2]) + 0.1272 * sympy.cos(
            x[0]) * sympy.cos(x[7]) - 0.6134 * sympy.cos(x[1]) * sympy.cos(x[4]) + 0.348 * sympy.cos(x[1]) + 0.2233 * sympy.cos(
            x[3]) * sympy.cos(x[7]) - 0.5919 * sympy.cos(x[3]) - 0.9338 * sympy.cos(x[4]) * sympy.cos(x[7]) - 0.5225 * sympy.cos(
            x[6]) - 0.9715 * sympy.cos(x[7]) - 0.1844
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.1844, 'const'), ('mul', 'binary'), (-0.5225, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.6633, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.8468, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.9715, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.2317, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.5919, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.7264, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.348, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1443, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6942, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0818, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1272, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6879, 'const'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.704, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9668, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.01, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6134, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9338, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2201, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2233, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_26(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_26'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.7279 * x[0] * sympy.cos(x[7]) + 0.9157 * x[0] + 0.6054 * x[1] * x[4] - 0.0876 * x[2] * x[3] + 0.4954 * x[2] * x[
            6] + 0.0766 * x[2] - 0.0891 * x[3] * x[5] + 0.1218 * x[4] * sympy.cos(x[3]) - 0.1444 * x[5] * sympy.cos(x[4]) - 0.6206 * x[6] * \
                        x[7] - 0.6012 * x[6] * sympy.sin(x[4]) - 0.5329 * x[6] * sympy.cos(x[5]) - 0.6966 * sympy.sin(x[0]) * sympy.cos(
            x[3]) - 0.1104 * sympy.sin(x[7]) - 0.8605 * sympy.cos(x[1]) * sympy.cos(x[6]) - 0.7089 * sympy.cos(x[1]) - 0.3356 * sympy.cos(
            x[3]) - 0.099 * sympy.cos(x[4]) + 0.7001 * sympy.cos(x[5]) + 0.9519 * sympy.cos(x[6]) + 0.8859
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8859, 'const'), ('mul', 'binary'), (0.0766, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.1104, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.9519, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.099, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.3356, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.7001, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.9157, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.7089, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5329, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6206, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6012, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4954, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6054, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0876, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6966, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1444, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0891, 'const'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7279, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1218, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8605, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_39(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_39'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.3274 * x[0] * x[7] + 0.1238 * x[0] + 0.1607 * x[1] * sympy.cos(x[5]) - 0.3434 * x[3] * x[5] + 0.7645 * x[
            3] * sympy.sin(x[1]) - 0.9631 * x[3] + 0.8652 * x[4] + 0.7836 * x[7] * sympy.sin(x[3]) - 0.7365 * x[7] * sympy.sin(
            x[5]) - 0.4625 * x[7] + 0.226 * sympy.sin(x[0]) * sympy.cos(x[3]) + 0.8603 * sympy.sin(x[1]) * sympy.sin(
            x[2]) + 0.6048 * sympy.sin(x[1]) + 0.7379 * sympy.sin(x[2]) * sympy.cos(x[5]) - 0.8486 * sympy.sin(x[5]) * sympy.sin(
            x[6]) - 0.6496 * sympy.sin(x[5]) - 0.7007 * sympy.sin(x[6]) + 0.888 * sympy.cos(x[1]) * sympy.cos(x[4]) + 0.4697 * sympy.cos(
            x[2]) - 0.1574 * sympy.cos(x[4]) * sympy.cos(x[6]) + 0.6515
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6515, 'const'), ('mul', 'binary'), (0.6048, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.9631, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.8652, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.7007, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.4625, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.6496, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.1238, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.4697, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8603, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3274, 'const'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.226, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7836, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3434, 'const'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7379, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.888, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7365, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8486, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1574, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7645, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1607, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_19(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_19'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.5876 * x[0] * x[3] + 0.1511 * x[0] * sympy.sin(x[7]) - 0.499 * x[0] - 0.0204 * x[1] * sympy.cos(x[4]) - 0.5741 * \
                        x[2] * x[7] + 0.0204 * x[2] - 0.7693 * x[3] + 0.7266 * x[4] * x[6] - 0.4871 * x[4] * sympy.sin(x[0]) + 0.1758 * x[
                            4] * sympy.cos(x[7]) + 0.3613 * x[4] + 0.2201 * x[5] * x[6] - 0.4257 * x[5] * sympy.sin(x[2]) + 0.0685 * x[
                            6] + 0.7696 * x[7] - 0.6948 * sympy.sin(x[1]) * sympy.cos(x[3]) + 0.7282 * sympy.sin(x[1]) - 0.0765 * sympy.sin(
            x[5]) * sympy.cos(x[1]) + 0.739 * sympy.cos(x[5]) * sympy.cos(x[7]) + 0.6246 * sympy.cos(x[5]) - 0.9839
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9839, 'const'), ('mul', 'binary'), (-0.7693, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.6246, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.3613, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.0685, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.0204, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.499, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.7282, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.7696, 'const'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6948, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5741, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1758, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4257, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1511, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5876, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0765, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4871, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.739, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0204, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7266, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2201, 'const'), ('X_5', 'var'), ('X_6', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_38(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_38'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.6523 * x[0] * sympy.sin(x[5]) + 0.6321 * x[1] - 0.2112 * x[2] * x[5] - 0.9348 * x[2] * sympy.sin(x[3]) - 0.786 * \
                        x[2] * sympy.cos(x[1]) + 0.0054 * x[2] - 0.1173 * x[3] * x[4] + 0.0476 * x[3] + 0.3261 * x[4] + 0.3208 * x[
                            5] * sympy.sin(x[7]) - 0.4571 * x[6] * sympy.sin(x[0]) - 0.0591 * x[6] * sympy.cos(x[3]) - 0.0148 * x[
                            6] + 0.875 * sympy.sin(x[0]) * sympy.sin(x[2]) + 0.7942 * sympy.sin(x[1]) * sympy.sin(
            x[5]) + 0.8516 * sympy.sin(x[3]) * sympy.cos(x[0]) + 0.6941 * sympy.sin(x[5]) - 0.0199 * sympy.sin(x[7]) * sympy.cos(
            x[1]) - 0.8315 * sympy.cos(x[0]) + 0.7435 * sympy.cos(x[7]) - 0.8956
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8956, 'const'), ('mul', 'binary'), (0.3261, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.7435, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.6321, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.0148, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.0054, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.8315, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.0476, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.6941, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2112, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4571, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9348, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7942, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0591, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3208, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6523, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8516, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.875, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1173, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.786, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0199, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_9(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_9'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.5465 * x[0] * sympy.cos(x[3]) - 0.6685 * x[0] - 0.8939 * x[1] * sympy.sin(x[0]) - 0.1214 * x[3] * x[7] - 0.4824 * \
                        x[3] - 0.9961 * x[4] * x[6] - 0.0657 * x[4] * sympy.sin(x[2]) - 0.6408 * x[4] * sympy.cos(x[1]) + 0.8089 * x[
                            4] + 0.8806 * x[5] * sympy.cos(x[4]) - 0.5016 * x[5] - 0.0679 * x[6] * sympy.sin(x[2]) + 0.1362 * x[
                            6] + 0.5724 * x[7] * sympy.cos(x[1]) + 0.3407 * x[7] - 0.713 * sympy.sin(x[0]) * sympy.sin(
            x[4]) + 0.3745 * sympy.sin(x[1]) + 0.9728 * sympy.sin(x[2]) * sympy.cos(x[3]) - 0.8915 * sympy.sin(x[2]) - 0.8401 * sympy.sin(
            x[6]) * sympy.cos(x[7]) + 0.3912
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3912, 'const'), ('mul', 'binary'), (-0.5016, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.3407, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.8089, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.6685, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.8915, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.4824, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.1362, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.3745, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8939, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5465, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8806, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0679, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8401, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9728, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9961, 'const'), ('X_4', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.713, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6408, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5724, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1214, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0657, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_4', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_32(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_32'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.7365 * x[0] - 0.1551 * x[1] * sympy.cos(x[2]) - 0.8894 * x[2] * sympy.cos(x[5]) + 0.8547 * x[3] * sympy.cos(
            x[2]) - 0.8662 * x[3] * sympy.cos(x[7]) + 0.3974 * x[4] * sympy.cos(x[1]) - 0.3445 * x[5] * sympy.sin(x[3]) + 0.6982 * x[
                            5] * sympy.cos(x[0]) - 0.3682 * x[6] * sympy.sin(x[0]) - 0.7256 * x[6] * sympy.sin(x[1]) + 0.2348 * x[
                            6] * sympy.sin(x[7]) - 0.8321 * sympy.sin(x[2]) * sympy.cos(x[4]) - 0.7198 * sympy.sin(x[3]) * sympy.cos(
            x[4]) + 0.1849 * sympy.sin(x[3]) - 0.6587 * sympy.sin(x[5]) - 0.688 * sympy.sin(x[6]) + 0.6031 * sympy.cos(
            x[1]) + 0.785 * sympy.cos(x[2]) + 0.3388 * sympy.cos(x[4]) - 0.5502 * sympy.cos(x[7]) - 0.0588
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.0588, 'const'), ('mul', 'binary'), (0.7365, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.785, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.6587, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.3388, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.5502, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.1849, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.688, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.6031, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8547, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8894, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7256, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6982, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8662, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3974, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7198, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2348, 'const'), ('X_6', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3682, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1551, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3445, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8321, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var')]


@register_eq_class
class sincos_nv8_nt812_prog_5(KnownEquation):
    _eq_name = 'sincos_nv8_nt812_prog_5'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.4509 * x[0] * x[6] - 0.2309 * x[1] * sympy.cos(x[4]) - 0.3714 * x[2] * sympy.cos(x[0]) + 0.1605 * x[
            3] * sympy.cos(x[2]) + 0.5902 * x[4] * sympy.sin(x[0]) + 0.1579 * x[4] * sympy.cos(x[3]) + 0.3891 * x[4] + 0.0709 * x[
                            5] - 0.0648 * x[6] * sympy.cos(x[5]) + 0.9858 * x[6] + 0.2643 * x[7] * sympy.cos(x[2]) - 0.84 * sympy.sin(
            x[0]) + 0.8797 * sympy.sin(x[1]) * sympy.cos(x[5]) + 0.8291 * sympy.sin(x[1]) + 0.9734 * sympy.sin(x[2]) * sympy.sin(
            x[6]) + 0.428 * sympy.sin(x[2]) - 0.7252 * sympy.sin(x[3]) + 0.0823 * sympy.sin(x[4]) * sympy.sin(x[6]) - 0.3829 * sympy.sin(
            x[7]) - 0.2147 * sympy.cos(x[1]) * sympy.cos(x[7]) + 0.0657
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.0657, 'const'), ('mul', 'binary'), (-0.3829, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.9858, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.3891, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.7252, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.8291, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.84, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.0709, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.428, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5902, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2147, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1605, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8797, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1579, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2309, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4509, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2643, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0823, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9734, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0648, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3714, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_2', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_46(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_46'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9469 * x[0] * sympy.sin(x[2]) + 0.2511 * x[0] * sympy.sin(x[6]) + 0.9668 * x[0] * sympy.cos(x[8]) + 0.8642 * x[
            0] / x[7] + 0.9641 * x[1] * x[5] + 0.0561 * x[1] * x[8] + 0.9716 * x[1] * sympy.cos(x[0]) + 0.2219 * x[2] + 0.5623 * x[
                            3] * sympy.cos(x[0]) - 0.8778 * x[3] + 0.8885 * x[4] * sympy.cos(x[6]) - 0.7861 * x[4] + 0.6659 * x[
                            5] * sympy.sin(x[8]) - 0.0656 * x[6] * x[8] + 0.6021 * x[8] - 0.0484 * x[9] - 0.2053 * sympy.sin(
            x[1]) - 0.4525 * sympy.cos(x[2]) * sympy.cos(x[6]) + 0.9861 * sympy.cos(x[6]) * sympy.cos(x[9]) - 0.3918 * sympy.cos(
            x[7]) + 0.6952 - 0.3201 / x[6] - 0.5141 / x[5] + 0.2782 * sympy.cos(x[5]) / x[4] + 0.5723 * x[9] / x[3] + 0.9235 * sympy.cos(
            x[3]) / x[2] + 0.3279 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.6952, 'const'), ('mul', 'binary'), (-0.5141, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.8778, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.3201, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.2053, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.7861, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.3279, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.6021, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.0484, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.3918, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.2219, 'const'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5623, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2511, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8642, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6659, 'const'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9668, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9235, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4525, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9716, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9641, 'const'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9861, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2782, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9469, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8885, 'const'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0561, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0656, 'const'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5723, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_0(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_0'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9262 * x[0] * sympy.sin(x[7]) + 0.4451 * x[0] * sympy.cos(x[8]) + 0.2069 * x[1] * x[6] - 0.1045 * x[
            1] * sympy.cos(x[2]) + 0.6224 * x[1] - 0.5413 * x[2] * x[8] - 0.6599 * x[2] / x[7] + 0.1507 * x[3] * x[9] - 0.6205 * x[
                            3] - 0.1118 * x[4] * sympy.sin(x[8]) + 0.1118 * x[4] * sympy.sin(x[9]) + 0.2031 * x[4] * sympy.cos(
            x[2]) - 0.1501 * x[4] + 0.2329 * x[5] * x[6] - 0.0209 * x[5] * sympy.sin(x[7]) + 0.7274 * x[5] - 0.8305 * x[6] * sympy.cos(
            x[3]) + 0.9265 * x[6] - 0.4466 * x[7] * sympy.sin(x[6]) - 0.3822 * x[7] + 0.6692 * x[8] - 0.4019 * x[9] + 0.1212 * sympy.sin(
            x[2]) - 0.8011 * sympy.sin(x[5]) * sympy.cos(x[9]) - 0.0965 - 0.2697 * x[8] / x[6] - 0.201 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.0965, 'const'), ('mul', 'binary'), (0.7274, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.1212, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.1501, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.4019, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.3822, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.6205, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.201, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.6692, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.9265, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.6224, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4451, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8305, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9262, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2069, 'const'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6599, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5413, 'const'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2329, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2697, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1507, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0209, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8011, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2031, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1118, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1045, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1118, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4466, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_35(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_35'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0526 * x[0] * x[1] + 0.8443 * x[0] * x[7] + 0.1895 * x[0] * sympy.cos(x[2]) - 0.2626 * x[0] + 0.4861 * x[1] * x[
            2] + 0.7052 * x[1] * x[6] - 0.2552 * x[1] + 0.7083 * x[1] / x[9] - 0.5025 * x[2] + 0.6566 * x[3] + 0.6719 * x[3] / x[5] + 0.6 * \
                        x[4] * x[8] + 0.2813 * x[4] * x[9] - 0.9669 * x[6] * sympy.sin(x[9]) + 0.0128 * x[6] + 0.1815 * x[7] + 0.7319 * x[
                            8] * sympy.cos(x[9]) - 0.4282 * x[9] - 0.8971 * sympy.sin(x[0]) * sympy.sin(x[9]) + 0.5222 + 0.1333 / x[
                            8] - 0.0796 * x[7] / x[5] + 0.5546 * sympy.cos(x[8]) / x[5] - 0.0288 / x[5] + 0.6422 * sympy.sin(x[7]) / x[
                            4] - 0.3767 * sympy.cos(x[5]) / x[4] - 0.4936 / x[4]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.5222, 'const'), ('mul', 'binary'), (0.1333, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.2552, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.2626, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.1815, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.0288, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.4936, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.4282, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.5025, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.6566, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.0128, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6422, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9669, 'const'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7083, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6719, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4861, 'const'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2813, 'const'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5546, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7052, 'const'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8443, 'const'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7319, 'const'),
                                            ('X_8', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0796, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0526, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8971, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6, 'const'), ('X_4', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1895, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3767, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_8(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_8'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8214 * x[0] * x[4] + 0.8393 * x[1] * sympy.sin(x[7]) - 0.205 * x[1] - 0.9289 * x[2] + 0.3985 * x[3] * x[
            4] - 0.1512 * x[3] / x[8] + 0.5092 * x[4] * x[5] + 0.9395 * x[5] * sympy.cos(x[2]) - 0.7756 * x[6] - 0.9126 * x[7] * sympy.sin(
            x[0]) + 0.7026 * x[7] * sympy.sin(x[4]) + 0.8069 * x[7] + 0.4032 * x[9] + 0.6115 * sympy.sin(x[0]) * sympy.cos(
            x[5]) + 0.5026 * sympy.sin(x[1]) * sympy.sin(x[4]) + 0.703 * sympy.sin(x[4]) * sympy.sin(x[9]) + 0.3336 * sympy.sin(
            x[4]) + 0.065 * sympy.sin(x[6]) * sympy.sin(x[7]) + 0.0773 * sympy.cos(x[0]) - 0.2581 * sympy.cos(x[5]) + 0.7949 + 0.3226 / x[
                            8] - 0.9549 * sympy.cos(x[8]) / x[7] + 0.3544 / (x[6] * x[9]) - 0.2375 * sympy.cos(x[8]) / x[5] + 0.9483 * x[
                            6] / x[4] + 0.4531 / x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.7949, 'const'), ('mul', 'binary'), (-0.9289, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.205, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.3226, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.4531, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.0773, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.8069, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.3336, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.2581, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.7756, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.4032, 'const'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1512, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3544, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6115, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8214, 'const'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7026, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.065, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.703, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8393, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9549, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3985, 'const'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9483, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5092, 'const'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5026, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9126, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2375, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9395, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_42(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_42'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.1555 * x[0] * x[2] - 0.5226 * x[0] * x[9] - 0.5769 * x[0] + 0.1871 * x[0] / x[8] - 0.0833 * x[2] * x[8] + 0.6026 * \
                        x[3] * sympy.sin(x[5]) - 0.7971 * x[3] * sympy.cos(x[4]) + 0.3994 * x[3] - 0.5986 * x[4] * x[9] + 0.2761 * x[
                            4] * sympy.sin(x[6]) - 0.1178 * x[4] * sympy.cos(x[2]) - 0.4938 * x[6] - 0.1888 * x[8] - 0.1392 * x[
                            9] - 0.5212 * sympy.sin(x[2]) * sympy.cos(x[9]) - 0.1191 * sympy.sin(x[2]) - 0.9041 * sympy.sin(
            x[5]) * sympy.sin(x[8]) - 0.5777 * sympy.cos(x[5]) + 0.6944 * sympy.cos(x[7]) * sympy.cos(x[9]) + 0.5106 + 0.0076 / x[
                            7] - 0.1429 * x[9] / x[6] + 0.0318 / x[4] - 0.3761 * sympy.cos(x[2]) / x[3] - 0.6527 * x[3] / x[
                            1] - 0.6451 * sympy.sin(x[9]) / x[1] - 0.9112 / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.5106, 'const'), ('mul', 'binary'), (0.0318, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.1191, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.3994, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.4938, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.9112, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.5777, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.1392, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.1888, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.5769, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.0076, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5986, 'const'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5212, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1871, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1178, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6451, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6527, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6944, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3761, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2761, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1555, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6026, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1429, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5226, 'const'), ('X_0', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7971, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9041, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0833, 'const'), ('X_2', 'var'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_33(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_33'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.6684 * x[0] * x[2] + 0.2797 * x[1] * x[6] + 0.7875 * x[2] + 0.6812 * x[3] + 0.4342 * x[3] / x[4] - 0.1924 * x[
            4] - 0.8829 * x[5] + 0.2086 * x[6] * x[7] + 0.8558 * x[6] * x[8] + 0.1104 * x[6] + 0.0781 * x[7] + 0.9396 * x[7] / x[
                            9] - 0.9117 * x[8] * sympy.cos(x[3]) + 0.5583 * x[9] * sympy.sin(x[1]) + 0.2769 * x[9] * sympy.sin(
            x[5]) + 0.7728 * x[9] * sympy.sin(x[6]) - 0.8846 * x[9] + 0.3141 * sympy.sin(x[0]) - 0.4288 * sympy.sin(x[1]) * sympy.cos(
            x[8]) - 0.2695 * sympy.cos(x[8]) + 0.4307 - 0.0897 * x[8] / x[7] - 0.104 * x[9] / x[3] - 0.1214 / (x[2] * x[6]) - 0.3367 / x[
                            1] + 0.2299 * x[3] / x[0] + 0.1792 * x[7] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.4307, 'const'), ('mul', 'binary'), (-0.8846, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.8829, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.1104, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.6812, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.1924, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.0781, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.2695, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.3141, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.3367, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.7875, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1792, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1214, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6684, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0897, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2299, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2086, 'const'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5583, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9396, 'const'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7728, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2769, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2797, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4342, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4288, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.104, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8558, 'const'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9117, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_20(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_20'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0028 * x[1] * x[3] + 0.1277 * x[1] * sympy.cos(x[0]) - 0.2668 * x[1] + 0.0106 * x[1] / x[4] - 0.6362 * x[
            3] * sympy.cos(x[8]) + 0.4012 * x[4] * sympy.cos(x[3]) + 0.7523 * x[4] + 0.9833 * x[5] * sympy.cos(x[8]) + 0.5315 * x[
                            5] + 0.3848 * x[6] * sympy.sin(x[7]) + 0.7658 * x[8] - 0.404 * x[9] * sympy.sin(x[3]) - 0.563 * x[
                            9] * sympy.cos(x[0]) + 0.997 * x[9] + 0.4015 * sympy.sin(x[0]) + 0.6695 * sympy.sin(x[4]) * sympy.cos(
            x[2]) - 0.1376 * sympy.sin(x[5]) * sympy.cos(x[4]) - 0.6425 * sympy.sin(x[6]) * sympy.cos(x[1]) - 0.3605 * sympy.sin(
            x[7]) + 0.0653 * sympy.cos(x[1]) * sympy.cos(x[8]) + 0.7126 * sympy.cos(x[2]) - 0.5971 * sympy.cos(
            x[6]) - 0.966 - 0.7646 * sympy.sin(x[2]) / x[9] - 0.9896 * x[9] / x[5] - 0.3591 / x[3] + 0.3282 * sympy.cos(x[2]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.966, 'const'), ('mul', 'binary'), (0.4015, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.7658, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.7523, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.5315, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.7126, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.3591, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.997, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.5971, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.2668, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.3605, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.404, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6695, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0106, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.563, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0028, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3848, 'const'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0653, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3282, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7646, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1277, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6425, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9833, 'const'),
                                            ('X_5', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4012, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9896, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6362, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1376, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_14(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_14'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9448 * x[0] * x[6] - 0.2325 * x[0] + 0.5399 * x[1] * x[9] + 0.9205 * x[2] * x[7] - 0.594 * x[3] * x[4] + 0.3875 * \
                        x[4] * x[9] - 0.6507 * x[4] - 0.9043 * x[5] * x[6] - 0.9431 * x[5] * sympy.cos(x[4]) - 0.2226 * x[6] * sympy.cos(
            x[4]) + 0.4908 * x[8] * sympy.sin(x[7]) + 0.9356 * x[8] - 0.7975 * x[9] * sympy.sin(x[0]) - 0.681 * sympy.sin(
            x[3]) + 0.1211 * sympy.sin(x[5]) + 0.7762 * sympy.sin(x[9]) - 0.3643 * sympy.cos(x[4]) * sympy.cos(x[7]) - 0.4703 * sympy.cos(
            x[7]) - 0.3126 + 0.3001 * sympy.sin(x[1]) / x[8] + 0.5863 * sympy.sin(x[6]) / x[7] - 0.6054 * x[9] / x[6] - 0.7518 / x[
                            6] - 0.0655 / x[2] - 0.6162 / x[1] - 0.4282 * sympy.sin(x[3]) / x[0] - 0.6 / (x[0] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.3126, 'const'), ('mul', 'binary'), (-0.6162, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.0655, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.4703, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.1211, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.2325, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.6507, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.9356, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.7762, 'const'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.7518, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.681, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4282, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9448, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4908, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9431, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9205, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6054, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3875, 'const'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7975, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3643, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5863, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5399, 'const'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3001, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.594, 'const'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2226, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9043, 'const'), ('X_5', 'var'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_31(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_31'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1442 * x[1] * sympy.cos(x[6]) + 0.8029 * x[1] - 0.4569 * x[3] * x[9] - 0.0156 * x[3] * sympy.cos(x[1]) + 0.4975 * \
                        x[3] - 0.9979 * x[4] * x[6] + 0.5119 * x[4] * sympy.sin(x[1]) - 0.1848 * x[4] - 0.3164 * x[5] + 0.1289 * x[
                            7] * sympy.sin(x[8]) - 0.8711 * x[8] * x[9] - 0.2067 * x[8] * sympy.cos(x[2]) - 0.6551 * sympy.sin(
            x[6]) - 0.6958 * sympy.sin(x[7]) + 0.6764 * sympy.sin(x[9]) - 0.7885 * sympy.cos(x[0]) - 0.8133 * sympy.cos(
            x[2]) - 0.7925 * sympy.cos(x[8]) - 0.549 - 0.3485 * x[9] / x[6] + 0.6578 * sympy.sin(x[0]) / x[6] + 0.4663 / (
                                    x[5] * x[8]) - 0.4837 * sympy.cos(x[7]) / x[3] + 0.5272 * x[7] / x[2] - 0.5652 * x[9] / x[
                            1] - 0.6411 / (x[1] * x[2]) - 0.3029 * x[2] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.549, 'const'), ('mul', 'binary'), (-0.7885, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.7925, 'const'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.6958, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.4975, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.6551, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.1848, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.6764, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.3164, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.8029, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.8133, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6578, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9979, 'const'), ('X_4', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1289, 'const'), ('X_7', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2067, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5272, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1442, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3485, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5119, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8711, 'const'), ('X_8', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4663, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0156, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3029, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4569, 'const'), ('X_3', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4837, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6411, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5652, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_48(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_48'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1813 * x[0] * x[1] - 0.9304 * x[0] / x[4] - 0.7576 * x[1] * x[2] - 0.626 * x[1] * x[4] + 0.3737 * x[1] * x[
            5] + 0.4282 * x[2] + 0.3757 * x[4] * x[9] + 0.9937 * x[5] * x[8] + 0.279 * x[5] + 0.3308 * x[6] + 0.4632 * x[7] * x[
                            9] - 0.3753 * x[8] * sympy.cos(x[6]) - 0.6835 * sympy.sin(x[0]) * sympy.cos(x[7]) - 0.2981 * sympy.sin(
            x[1]) - 0.9469 * sympy.sin(x[3]) * sympy.sin(x[7]) - 0.5828 * sympy.sin(x[4]) - 0.8229 * sympy.sin(x[6]) * sympy.cos(
            x[9]) + 0.7169 * sympy.sin(x[7]) * sympy.sin(x[8]) + 0.4722 * sympy.sin(x[9]) * sympy.cos(x[1]) + 0.8578 * sympy.cos(
            x[0]) - 0.2743 * sympy.cos(x[3]) * sympy.cos(x[8]) + 0.5015 * sympy.cos(x[7]) + 0.3222 * sympy.cos(
            x[9]) - 0.9922 - 0.5365 * sympy.cos(x[0]) / x[8] - 0.8703 / x[8] - 0.098 / x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.9922, 'const'), ('mul', 'binary'), (-0.8703, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.098, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.3222, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.5015, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.2981, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.8578, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.4282, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.3308, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.5828, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.279, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3753, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6835, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4632, 'const'),
                                            ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8229, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7576, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.626, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5365, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1813, 'const'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9937, 'const'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2743, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3737, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3757, 'const'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7169, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9469, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4722, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9304, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_41(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_41'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5658 * x[0] * x[9] - 0.5078 * x[0] * sympy.cos(x[7]) - 0.432 * x[1] * x[3] - 0.2162 * x[1] * x[8] + 0.178 * x[
            1] - 0.8363 * x[1] / x[5] - 0.7789 * x[2] * sympy.cos(x[1]) + 0.4355 * x[2] / x[6] - 0.5171 * x[3] * x[9] - 0.209 * x[
                            3] + 0.9594 * x[4] / x[8] + 0.7042 * x[5] + 0.5145 * x[6] * x[9] - 0.3691 * sympy.sin(x[0]) * sympy.sin(
            x[4]) - 0.0526 * sympy.sin(x[0]) * sympy.cos(x[2]) + 0.8994 * sympy.sin(x[0]) - 0.2991 * sympy.sin(x[9]) * sympy.cos(
            x[2]) - 0.8181 * sympy.cos(x[2]) - 0.9483 * sympy.cos(x[4]) * sympy.cos(x[7]) - 0.7193 * sympy.cos(x[8]) + 0.9003 * sympy.cos(
            x[9]) - 0.9255 - 0.7565 / x[7] + 0.9871 / x[6] + 0.0395 * x[6] / x[5] + 0.5704 * sympy.sin(x[1]) / x[4] + 0.2141 / x[4]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.9255, 'const'), ('mul', 'binary'), (0.2141, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.7565, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.8994, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.178, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.209, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.7042, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.9003, 'const'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.8181, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.9871, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.7193, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2162, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9483, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5704, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8363, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7789, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2991, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3691, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5171, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5078, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0526, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.432, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4355, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5658, 'const'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0395, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5145, 'const'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9594, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_7(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_7'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.5732 * x[0] * x[7] - 0.0678 * x[0] * sympy.sin(x[8]) - 0.16 * x[0] - 0.9541 * x[0] / x[2] - 0.8651 * x[1] * x[
            8] + 0.1529 * x[1] - 0.5596 * x[2] * x[4] + 0.104 * x[2] * x[7] - 0.2382 * x[2] * x[8] + 0.6959 * x[3] * x[6] + 0.6548 * x[
                            3] * sympy.sin(x[1]) - 0.2911 * x[3] * sympy.cos(x[9]) + 0.7901 * x[4] * sympy.sin(x[0]) - 0.503 * x[
                            4] - 0.8983 * x[5] * x[9] - 0.0555 * x[7] * sympy.sin(x[3]) - 0.27 * sympy.sin(x[2]) - 0.9611 * sympy.sin(
            x[5]) * sympy.cos(x[7]) - 0.3167 * sympy.sin(x[8]) * sympy.cos(x[7]) - 0.5507 * sympy.cos(x[5]) - 0.962 * sympy.cos(
            x[6]) * sympy.cos(x[8]) - 0.8189 * sympy.cos(x[6]) + 0.8312 * sympy.cos(x[7]) + 0.5669 * sympy.cos(x[8]) + 0.0747 * sympy.cos(
            x[9]) + 0.0023 + 0.4954 / x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.0023, 'const'), ('mul', 'binary'), (0.1529, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.8189, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.16, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.5669, 'const'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.8312, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.5507, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.4954, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.27, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.0747, 'const'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.503, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0555, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6548, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6959, 'const'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5596, 'const'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8651, 'const'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9541, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7901, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0678, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.962, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9611, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8983, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3167, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.104, 'const'), ('X_2', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5732, 'const'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2911, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2382, 'const'), ('X_2', 'var'),
                                            ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_37(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_37'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.2873 * x[0] * x[2] + 0.8467 * x[0] * x[6] + 0.8881 * x[0] - 0.2794 * x[1] * sympy.cos(x[2]) - 0.9935 * x[
            1] * sympy.cos(x[8]) + 0.7917 * x[2] * sympy.cos(x[5]) - 0.7599 * x[2] - 0.0056 * x[3] * x[6] - 0.8668 * x[3] * sympy.sin(
            x[2]) + 0.4592 * x[3] + 0.465 * x[5] * x[7] - 0.2104 * x[5] * x[9] - 0.7086 * x[6] * x[8] + 0.08 * x[6] - 0.8125 * x[
                            7] * sympy.cos(x[0]) - 0.7621 * x[7] * sympy.cos(x[1]) + 0.2904 * x[7] - 0.3322 * x[8] * sympy.sin(
            x[9]) - 0.0245 * x[8] + 0.0677 * x[9] * sympy.sin(x[0]) - 0.7636 * sympy.sin(x[1]) + 0.575 * sympy.sin(
            x[4]) + 0.5109 * sympy.cos(x[5]) - 0.0352 - 0.6249 / x[9] - 0.3487 * x[5] / x[4] + 0.161 * x[8] / x[4]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.0352, 'const'), ('mul', 'binary'), (-0.7636, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.08, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.7599, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.2904, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.575, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.8881, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.0245, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.5109, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.4592, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.6249, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8125, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7917, 'const'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2873, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.465, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7086, 'const'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2794, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3487, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7621, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8467, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2104, 'const'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9935, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3322, 'const'),
                                            ('X_8', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.161, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0677, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8668, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0056, 'const'), ('X_3', 'var'),
                                            ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_15(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_15'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9532 * x[0] * x[1] - 0.8249 * x[0] * sympy.sin(x[4]) + 0.9061 * x[0] - 0.7744 * x[1] * x[4] - 0.6698 * x[
            1] * sympy.sin(x[9]) + 0.5298 * x[1] + 0.8152 * x[2] * x[4] - 0.2346 * x[2] * x[8] - 0.797 * x[2] * sympy.sin(x[1]) + 0.8864 * \
                        x[4] - 0.5351 * x[5] / x[9] - 0.5633 * x[5] / x[6] + 0.9363 * x[6] * sympy.sin(x[3]) - 0.8932 * x[6] - 0.6441 * x[
                            6] / x[9] - 0.642 * x[7] * sympy.sin(x[5]) - 0.2207 * x[8] - 0.8602 * x[9] - 0.8625 * sympy.sin(
            x[3]) - 0.8436 * sympy.cos(x[2]) - 0.7517 * sympy.cos(x[8]) * sympy.cos(x[9]) - 0.7953 - 0.2136 * sympy.sin(x[5]) / x[
                            8] - 0.2747 / x[7] + 0.1924 / x[5] - 0.0991 * sympy.cos(x[4]) / x[3] - 0.8295 * x[3] / x[2]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.7953, 'const'), ('mul', 'binary'), (-0.8932, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.9061, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.2747, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.1924, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.5298, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.8625, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.8436, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.8602, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.8864, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.2207, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9363, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5633, 'const'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7517, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6698, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8152, 'const'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8249, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0991, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8295, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2136, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7744, 'const'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6441, 'const'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2346, 'const'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.797, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9532, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5351, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.642, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('X_7', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_23(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_23'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0432 * x[0] / x[7] + 0.8395 * x[1] * x[5] + 0.8589 * x[1] * x[9] - 0.5712 * x[1] + 0.2084 * x[1] / x[7] + 0.2427 * \
                        x[2] * x[4] + 0.232 * x[2] / x[5] + 0.3144 * x[3] * x[7] + 0.5679 * x[4] * x[5] + 0.5468 * x[5] * x[6] - 0.8705 * x[
                            5] * sympy.sin(x[8]) - 0.8493 * x[5] - 0.9297 * x[8] * sympy.cos(x[3]) + 0.3051 * x[8] - 0.8771 * sympy.sin(
            x[0]) * sympy.sin(x[3]) + 0.7864 * sympy.sin(x[3]) - 0.6266 * sympy.sin(x[4]) + 0.2022 * sympy.sin(x[7]) - 0.5893 * sympy.cos(
            x[0]) - 0.5427 * sympy.cos(x[2]) * sympy.cos(x[6]) + 0.3363 * sympy.cos(x[2]) - 0.2149 * sympy.cos(x[6]) + 0.6264 * sympy.cos(
            x[8]) * sympy.cos(x[9]) + 0.9258 * sympy.cos(x[9]) - 0.1933 - 0.1323 * sympy.cos(x[7]) / x[2] + 0.0947 * sympy.cos(x[5]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.1933, 'const'), ('mul', 'binary'), (0.3363, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.9258, 'const'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.7864, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.3051, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.6266, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.8493, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.2149, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.5712, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.2022, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.5893, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5468, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5427, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2427, 'const'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1323, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2084, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8589, 'const'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.232, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8771, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5679, 'const'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6264, 'const'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3144, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8705, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8395, 'const'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0432, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9297, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0947, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_30(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_30'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9045 * x[0] / x[9] + 0.3701 * x[1] - 0.4632 * x[2] * x[5] - 0.2469 * x[2] * x[6] - 0.85 * x[2] + 0.1094 * x[
            3] * sympy.cos(x[6]) + 0.3976 * x[3] + 0.3336 * x[3] / x[8] + 0.8973 * x[4] * x[7] - 0.2325 * x[4] * x[8] + 0.1364 * x[
                            4] * sympy.cos(x[6]) - 0.8252 * x[5] * sympy.cos(x[6]) - 0.0488 * x[5] / x[7] - 0.678 * x[6] * sympy.cos(
            x[8]) + 0.5837 * x[7] - 0.3607 * sympy.sin(x[5]) + 0.4202 * sympy.sin(x[8]) - 0.3099 * sympy.cos(x[4]) - 0.6187 * sympy.cos(
            x[9]) + 0.2854 - 0.7457 * sympy.sin(x[9]) / x[7] + 0.3363 / x[6] - 0.5068 / (x[2] * x[3]) - 0.9991 * x[6] / x[1] - 0.3142 * x[
                            6] / x[0] + 0.1766 * sympy.cos(x[4]) / x[0] - 0.9679 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.2854, 'const'), ('mul', 'binary'), (0.4202, 'const'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.6187, 'const'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.3099, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.9679, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.5837, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.85, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.3607, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.3976, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.3363, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.3701, 'const'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7457, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8252, 'const'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4632, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9045, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1094, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2325, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1766, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1364, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9991, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3336, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3142, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.678, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8973, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0488, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5068, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2469, 'const'), ('X_2', 'var'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_28(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_28'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.6578 * x[0] * x[5] - 0.4078 * x[0] * sympy.cos(x[2]) + 0.6074 * x[1] * x[4] - 0.4917 * x[1] * sympy.cos(
            x[0]) - 0.7797 * x[2] * sympy.cos(x[4]) + 0.3238 * x[3] * x[7] + 0.0919 * x[4] * sympy.cos(x[9]) + 0.5857 * x[4] - 0.4224 * x[
                            6] - 0.4423 * x[7] * sympy.cos(x[9]) + 0.3827 * x[7] + 0.8603 * x[8] * x[9] + 0.8578 * sympy.sin(
            x[0]) * sympy.sin(x[6]) - 0.6921 * sympy.sin(x[0]) * sympy.cos(x[7]) - 0.4619 * sympy.sin(x[0]) + 0.5733 * sympy.sin(
            x[1]) - 0.9877 * sympy.sin(x[2]) * sympy.sin(x[6]) + 0.3394 * sympy.sin(x[2]) + 0.9689 * sympy.sin(x[3]) - 0.9627 * sympy.sin(
            x[5]) - 0.9187 * sympy.cos(x[9]) - 0.5811 + 0.0351 * sympy.cos(x[6]) / x[9] + 0.0323 / x[8] + 0.4353 * x[9] / x[
                            5] + 0.3015 * sympy.cos(x[7]) / x[4] + 0.7704 * sympy.cos(x[9]) / x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.5811, 'const'), ('mul', 'binary'), (0.9689, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.9187, 'const'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.9627, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.5857, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.0323, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.4619, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.5733, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.3394, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.4224, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.3827, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8603, 'const'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6921, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6074, 'const'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6578, 'const'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4353, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8578, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0919, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3238, 'const'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7797, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4917, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0351, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9877, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3015, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7704, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4078, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4423, 'const'), ('X_7', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_17(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_17'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0614 * x[0] + 0.3537 * x[1] * x[2] - 0.7793 * x[1] * sympy.sin(x[0]) - 0.3837 * x[1] * sympy.sin(x[8]) + 0.4595 * \
                        x[2] * x[4] + 0.8232 * x[2] * sympy.cos(x[8]) + 0.4838 * x[3] * sympy.cos(x[8]) - 0.1723 * x[3] / x[6] - 0.0813 * x[
                            4] * x[9] + 0.362 * x[4] - 0.4064 * x[6] + 0.0646 * x[6] / x[9] - 0.8693 * x[7] * x[8] + 0.9156 * sympy.cos(
            x[2]) - 0.7997 * sympy.cos(x[7]) - 0.8224 * sympy.cos(x[8]) + 0.853 * sympy.cos(x[9]) + 0.99 + 0.053 * x[9] / x[
                            7] + 0.9439 * sympy.sin(x[1]) / x[7] - 0.581 * x[8] / x[6] + 0.5443 / x[5] + 0.4178 * sympy.cos(x[4]) / x[
                            3] - 0.8275 / x[3] + 0.5889 * x[6] / x[2] - 0.5015 / x[1] - 0.7932 * x[5] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.99, 'const'), ('mul', 'binary'), (0.853, 'const'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.5443, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.8275, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.8224, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.7997, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.0614, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.4064, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.9156, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.5015, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.362, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.581, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7932, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4178, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3837, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0646, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.053, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1723, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8693, 'const'),
                                            ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7793, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4595, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0813, 'const'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5889, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3537, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9439, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4838, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8232, 'const'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_43(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_43'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.0426 * x[0] - 0.3146 * x[1] * x[8] - 0.2191 * x[1] * sympy.cos(x[0]) + 0.3212 * x[1] - 0.4771 * x[2] * x[
            3] - 0.0899 * x[2] * x[6] + 0.7877 * x[2] - 0.4705 * x[2] / x[8] - 0.215 * x[3] * sympy.cos(x[0]) + 0.3875 * x[3] - 0.706 * x[
                            3] / x[8] - 0.7994 * x[4] * x[7] - 0.069 * x[4] + 0.5238 * x[5] * x[9] + 0.5702 * x[6] * x[7] + 0.0217 * x[
                            6] * sympy.cos(x[3]) - 0.699 * x[7] * sympy.sin(x[2]) + 0.9972 * x[7] + 0.304 * x[9] + 0.4312 * sympy.sin(
            x[6]) - 0.2868 * sympy.cos(x[5]) - 0.8859 + 0.7579 / x[8] + 0.2837 / (x[7] * x[9]) - 0.6565 * sympy.sin(x[0]) / x[6] + 0.39 * x[
                            4] / x[2] + 0.1414 * x[5] / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.8859, 'const'), ('mul', 'binary'), (0.304, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.9972, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.3875, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.3212, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.069, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.2868, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.7877, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.0426, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.7579, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.4312, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1414, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7994, 'const'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0899, 'const'), ('X_2', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.215, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3146, 'const'),
                                            ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2191, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5238, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2837, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4771, 'const'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4705, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0217, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5702, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6565, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.39, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.699, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.706, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_2(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_2'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1608 * x[1] - 0.2572 * x[1] / x[7] - 0.5428 * x[2] * sympy.sin(x[5]) + 0.4762 * x[2] * sympy.cos(x[4]) - 0.7876 * \
                        x[2] * sympy.cos(x[6]) + 0.0459 * x[2] + 0.3554 * x[2] / x[8] + 0.2254 * x[4] * x[8] + 0.543 * x[4] + 0.5937 * x[
                            5] * sympy.sin(x[0]) - 0.1396 * x[5] * sympy.sin(x[6]) - 0.0298 * x[5] + 0.7372 * x[7] - 0.2724 * x[8] * x[
                            9] - 0.6935 * x[8] - 0.8455 * x[9] * sympy.sin(x[2]) - 0.5102 * x[9] + 0.6202 * sympy.sin(
            x[0]) - 0.2813 * sympy.sin(x[1]) * sympy.sin(x[6]) + 0.4664 * sympy.sin(x[3]) - 0.4235 * sympy.sin(x[6]) + 0.2623 * sympy.sin(
            x[7]) * sympy.cos(x[4]) - 0.9148 - 0.733 * sympy.cos(x[0]) / x[6] - 0.1198 * sympy.cos(x[4]) / x[5] - 0.2641 * x[5] / x[
                            1] + 0.5725 * sympy.cos(x[2]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.9148, 'const'), ('mul', 'binary'), (0.6202, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.4664, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.6935, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.543, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.0298, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.0459, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.4235, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.7372, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.1608, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.5102, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.733, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5937, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4762, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1198, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2254, 'const'), ('X_4', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2813, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2724, 'const'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5428, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5725, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2623, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2641, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8455, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3554, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1396, 'const'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7876, 'const'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2572, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_4(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_4'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4745 * x[0] * x[5] - 0.1594 * x[0] * x[8] - 0.1783 * x[0] / x[4] + 0.3818 * x[1] * sympy.cos(x[0]) + 0.3509 * x[
            1] * sympy.cos(x[7]) - 0.1923 * x[2] / x[6] + 0.3978 * x[3] * x[4] - 0.5795 * x[4] + 0.0559 * x[6] - 0.726 * x[7] * x[
                            8] + 0.5323 * x[8] * x[9] + 0.0104 * x[8] + 0.9076 * x[9] * sympy.sin(x[1]) - 0.0291 * x[
                            9] + 0.6322 * sympy.sin(x[7]) + 0.6383 * sympy.cos(x[2]) + 0.4743 * sympy.cos(
            x[5]) + 0.6939 + 0.0842 * sympy.sin(x[1]) / x[8] - 0.1576 * x[8] / x[5] + 0.4787 * sympy.sin(x[7]) / x[4] + 0.8818 / x[
                            3] - 0.9306 * x[4] / x[2] - 0.0009 * x[5] / x[1] + 0.6537 / x[1] + 0.3663 * x[6] / x[0] + 0.5036 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.6939, 'const'), ('mul', 'binary'), (0.0559, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.6383, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.0291, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.0104, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.6322, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.5795, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.4743, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.6537, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.5036, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.8818, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3978, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4787, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0009, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1923, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.726, 'const'),
                                            ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9076, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1576, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5323, 'const'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0842, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1783, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3818, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1594, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3663, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4745, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3509, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9306, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_45(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_45'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.8376 * x[1] * x[3] + 0.4505 * x[2] * x[4] + 0.7076 * x[2] / x[8] + 0.3197 * x[4] * sympy.cos(x[8]) + 0.8918 * x[
            4] - 0.8994 * x[5] * sympy.cos(x[0]) + 0.5714 * x[5] + 0.9129 * x[7] - 0.6559 * sympy.sin(x[0]) + 0.2019 * sympy.sin(
            x[2]) + 0.3427 * sympy.sin(x[3]) * sympy.cos(x[4]) + 0.9518 * sympy.sin(x[5]) * sympy.cos(x[4]) + 0.5179 * sympy.cos(
            x[9]) + 0.1807 - 0.6638 * sympy.sin(x[6]) / x[8] - 0.9397 / x[8] - 0.2248 * sympy.sin(x[8]) / x[7] - 0.6702 * sympy.sin(x[7]) / \
                        x[6] - 0.9788 / x[6] + 0.5729 * sympy.cos(x[7]) / x[4] - 0.0116 / x[3] + 0.8717 / (x[3] * x[8]) + 0.5647 * x[6] / x[
                            1] + 0.7344 * x[9] / x[1] + 0.8236 * sympy.sin(x[5]) / x[1] - 0.5479 / x[1] - 0.7161 * x[1] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.1807, 'const'), ('mul', 'binary'), (0.5714, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.5179, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.6559, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.2019, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.0116, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.8918, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.9129, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.9397, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.5479, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.9788, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8376, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7344, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8994, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6638, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8717, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8236, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7161, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5729, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4505, 'const'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7076, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2248, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9518, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3197, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5647, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6702, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3427, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_49(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_49'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.5908 * x[0] * x[3] - 0.0491 * x[0] * sympy.sin(x[4]) - 0.6678 * x[0] / x[7] + 0.0488 * x[1] + 0.7367 * x[2] * x[
            5] - 0.3372 * x[3] * x[6] - 0.0904 * x[3] / x[9] + 0.7224 * x[4] * x[8] + 0.5169 * x[4] * sympy.sin(x[3]) + 0.8625 * x[
                            4] * sympy.cos(x[2]) - 0.9038 * x[4] * sympy.cos(x[6]) - 0.322 * x[4] - 0.7769 * x[5] - 0.7786 * x[7] - 0.6767 * \
                        x[7] / x[8] - 0.0422 * x[8] * sympy.sin(x[6]) - 0.538 * x[8] - 0.7743 * x[9] * sympy.cos(x[6]) - 0.9833 * sympy.cos(
            x[2]) + 0.5032 * sympy.cos(x[3]) - 0.1794 * sympy.cos(x[9]) - 0.8173 - 0.4847 * sympy.sin(x[2]) / x[8] + 0.5794 / x[
                            6] + 0.5763 * x[8] / x[5] + 0.6345 * sympy.cos(x[7]) / x[1] + 0.9663 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.8173, 'const'), ('mul', 'binary'), (-0.7769, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.1794, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.322, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.538, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.5794, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.9833, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.5032, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.7786, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.0488, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.9663, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7743, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6678, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8625, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0904, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7367, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4847, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6345, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5908, 'const'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0422, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0491, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3372, 'const'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6767, 'const'),
                                            ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5763, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5169, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7224, 'const'), ('X_4', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9038, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_11(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_11'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9461 * x[0] * x[7] - 0.4717 * x[0] - 0.5724 * x[0] / x[8] + 0.9507 * x[0] / x[2] + 0.028 * x[1] * x[8] + 0.3737 * \
                        x[1] * sympy.sin(x[9]) - 0.5665 * x[2] * x[5] - 0.3753 * x[2] * sympy.sin(x[7]) + 0.1722 * x[2] - 0.8014 * x[5] * x[
                            7] + 0.8327 * x[6] * sympy.sin(x[8]) - 0.4314 * x[7] * sympy.sin(x[4]) + 0.4826 * x[8] * x[
                            9] + 0.4104 * sympy.sin(x[0]) * sympy.sin(x[4]) + 0.5243 * sympy.sin(x[0]) * sympy.cos(
            x[5]) - 0.5631 * sympy.sin(x[5]) + 0.3712 * sympy.sin(x[8]) * sympy.cos(x[5]) - 0.5688 * sympy.cos(x[1]) - 0.7008 * sympy.cos(
            x[4]) - 0.6704 * sympy.cos(x[6]) + 0.3258 - 0.0762 / x[9] - 0.5586 / x[8] - 0.0279 / x[7] + 0.9556 / x[3] - 0.9539 * x[9] / x[
                            2] - 0.9849 * sympy.sin(x[4]) / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.3258, 'const'), ('mul', 'binary'), (-0.4717, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.9556, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.0279, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.5688, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.0762, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.6704, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.7008, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.1722, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.5631, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.5586, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4826, 'const'), ('X_8', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9539, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9461, 'const'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3712, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8014, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4314, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5243, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9507, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.028, 'const'),
                                            ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3737, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5724, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4104, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9849, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8327, 'const'), ('X_6', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5665, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3753, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_10(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_10'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.5678 * x[0] * x[3] + 0.0567 * x[0] * sympy.cos(x[1]) + 0.6818 * x[0] - 0.3708 * x[1] * x[7] - 0.2078 * x[
            2] + 0.5161 * x[3] * x[7] - 0.0282 * x[3] * sympy.cos(x[1]) + 0.0434 * x[3] - 0.082 * x[3] / x[8] + 0.6461 * x[5] * x[
                            7] + 0.9201 * x[6] * x[7] - 0.7802 * x[6] - 0.8776 * x[7] * sympy.sin(x[2]) + 0.1607 * x[
                            7] - 0.5226 * sympy.sin(x[0]) * sympy.sin(x[2]) + 0.761 * sympy.sin(x[1]) - 0.3687 * sympy.sin(
            x[4]) + 0.7406 * sympy.sin(x[5]) + 0.3018 * sympy.sin(x[9]) + 0.0302 + 0.2203 / x[8] - 0.8953 * sympy.cos(x[0]) / x[
                            7] - 0.1088 * x[9] / x[5] - 0.741 * x[5] / x[3] + 0.1985 * sympy.cos(x[3]) / x[2] + 0.0909 * sympy.cos(x[9]) / \
                        x[2] - 0.0473 * x[4] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.0302, 'const'), ('mul', 'binary'), (0.7406, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.0434, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.7802, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.761, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.3687, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.6818, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.2078, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.2203, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.1607, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.3018, 'const'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1088, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5678, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9201, 'const'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8776, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0473, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5226, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1985, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0282, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.082, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.741, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0909, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0567, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5161, 'const'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8953, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3708, 'const'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6461, 'const'),
                                            ('X_5', 'var'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_1(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_1'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.211 * x[0] * sympy.sin(x[4]) - 0.1799 * x[0] * sympy.sin(x[7]) - 0.7292 * x[0] * sympy.cos(x[2]) + 0.9522 * x[
            0] - 0.3734 * x[1] * x[2] - 0.8098 * x[1] + 0.1136 * x[2] - 0.5436 * x[3] * x[8] - 0.0845 * x[3] * sympy.sin(x[6]) + 0.069 * x[
                            3] - 0.59 * x[4] * x[8] + 0.4189 * x[4] / x[9] - 0.1761 * x[6] - 0.3397 * x[7] / x[9] + 0.5961 * x[
                            8] * sympy.sin(x[1]) + 0.8964 * x[9] * sympy.sin(x[2]) + 0.8431 * sympy.sin(x[7]) - 0.3221 * sympy.sin(
            x[9]) - 0.1011 * sympy.cos(x[2]) * sympy.cos(x[7]) - 0.371 * sympy.cos(x[4]) + 0.3052 * sympy.cos(x[5]) - 0.8275 + 0.8896 / x[
                            8] + 0.6239 * x[7] / x[5] + 0.7164 * sympy.sin(x[2]) / x[5] + 0.4509 * sympy.sin(x[9]) / x[5] + 0.7757 * x[4] / \
                        x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.8275, 'const'), ('mul', 'binary'), (-0.8098, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.1136, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.3052, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.3221, 'const'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.8896, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.069, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.8431, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.371, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.9522, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.1761, 'const'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4509, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4189, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3397, 'const'), ('X_7', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6239, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.211, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1011, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7164, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7292, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7757, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5961, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3734, 'const'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5436, 'const'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8964, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1799, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0845, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.59, 'const'), ('X_4', 'var'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_40(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_40'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0166 * x[1] * x[8] - 0.9046 * x[1] * x[9] - 0.4289 * x[1] * sympy.sin(x[3]) + 0.2194 * x[2] * x[3] + 0.7011 * x[
            2] * x[6] - 0.8775 * x[2] * x[9] - 0.7272 * x[2] + 0.4773 * x[3] * x[7] - 0.4531 * x[4] * sympy.sin(x[6]) - 0.4813 * x[
                            4] * sympy.cos(x[1]) + 0.8199 * x[4] * sympy.cos(x[5]) - 0.289 * x[4] + 0.542 * x[5] * sympy.sin(x[6]) + 0.817 * \
                        x[7] + 0.2336 * x[9] - 0.8536 * sympy.sin(x[0]) * sympy.cos(x[8]) + 0.7792 * sympy.sin(x[3]) - 0.7372 * sympy.cos(
            x[0]) + 0.06 * sympy.cos(x[5]) + 0.9228 * sympy.cos(x[6]) - 0.6851 + 0.0929 / x[8] - 0.6559 * sympy.cos(x[4]) / x[
                            7] - 0.6276 * sympy.cos(x[3]) / x[5] - 0.4446 * x[5] / x[1] - 0.354 / x[1] + 0.6409 / (x[1] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.6851, 'const'), ('mul', 'binary'), (-0.354, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.7272, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.0929, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.2336, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.7792, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.289, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.06, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.9228, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.817, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.7372, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6409, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8775, 'const'), ('X_2', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9046, 'const'), ('X_1', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4773, 'const'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7011, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4813, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.542, 'const'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6559, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8536, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4531, 'const'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6276, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2194, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0166, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4446, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8199, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4289, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_29(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_29'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.8591 * x[0] * x[4] - 0.8675 * x[0] * x[9] - 0.5404 * x[0] * sympy.cos(x[8]) + 0.2819 * x[1] * x[2] - 0.3416 * x[
            1] - 0.0427 * x[2] * x[3] - 0.0406 * x[2] * x[8] + 0.3773 * x[2] * x[9] + 0.1727 * x[2] - 0.2878 * x[4] * sympy.sin(
            x[1]) + 0.6224 * x[5] * sympy.sin(x[6]) - 0.177 * x[5] * sympy.cos(x[7]) - 0.3632 * x[6] * sympy.cos(x[3]) + 0.0319 * x[
                            6] - 0.1403 * x[8] * sympy.sin(x[6]) + 0.5527 * x[8] + 0.6925 * x[9] * sympy.sin(x[7]) - 0.3883 * x[
                            9] - 0.3511 * sympy.sin(x[4]) - 0.3293 * sympy.cos(x[3]) + 0.7663 * sympy.cos(x[5]) - 0.277 * sympy.cos(
            x[7]) - 0.149 + 0.6981 * x[5] / x[3] - 0.4837 * x[1] / x[0] - 0.8934 * x[5] / x[0] + 0.9034 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.149, 'const'), ('mul', 'binary'), (-0.3511, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.3883, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.1727, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.5527, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.3293, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.9034, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.7663, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.0319, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.3416, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.277, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6925, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0427, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8591, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5404, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6981, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2819, 'const'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6224, 'const'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0406, 'const'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1403, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2878, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8675, 'const'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4837, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3773, 'const'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.177, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8934, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3632, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_22(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_22'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.0928 * x[0] * sympy.cos(x[3]) - 0.8025 * x[1] * x[8] - 0.9591 * x[1] - 0.3913 * x[2] * x[7] - 0.3388 * x[
            2] - 0.8001 * x[3] * x[6] - 0.62 * x[3] * sympy.sin(x[1]) - 0.7047 * x[3] + 0.8486 * x[4] * x[6] - 0.0143 * x[4] * sympy.cos(
            x[0]) - 0.8287 * x[4] * sympy.cos(x[8]) - 0.5538 * x[5] + 0.4501 * x[6] - 0.0448 * x[7] * sympy.cos(x[8]) + 0.5127 * x[
                            7] + 0.9604 * x[8] - 0.7284 * x[9] * sympy.cos(x[3]) - 0.4284 * x[9] * sympy.cos(x[6]) + 0.0558 * x[
                            9] + 0.7445 * sympy.sin(x[0]) * sympy.sin(x[9]) - 0.0355 * sympy.cos(x[0]) * sympy.cos(
            x[7]) + 0.2891 * sympy.cos(x[5]) * sympy.cos(x[9]) + 0.2958 + 0.2748 * sympy.cos(x[1]) / x[4] + 0.0125 / x[4] + 0.4731 * x[8] / \
                        x[2] + 0.3032 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.2958, 'const'), ('mul', 'binary'), (-0.5538, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.7047, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.9604, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.5127, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.4501, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.3032, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.0558, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.0125, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.9591, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.3388, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0355, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0448, 'const'), ('X_7', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2748, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8486, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4731, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7445, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8001, 'const'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0928, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0143, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2891, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8287, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.62, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3913, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4284, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7284, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8025, 'const'), ('X_1', 'var'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_27(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_27'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9849 * x[0] / x[9] - 0.2705 * x[2] * x[5] + 0.4477 * x[2] * sympy.sin(x[4]) - 0.0514 * x[2] + 0.6956 * x[3] * x[
            4] - 0.6462 * x[3] * x[5] - 0.4426 * x[3] * sympy.cos(x[2]) - 0.3994 * x[3] - 0.2251 * x[4] * sympy.cos(x[7]) - 0.6803 * x[
                            4] + 0.3574 * x[5] + 0.9798 * x[5] / x[8] + 0.1778 * x[6] * x[9] - 0.8919 * x[6] - 0.956 * x[7] - 0.145 * x[
                            8] * sympy.cos(x[1]) - 0.861 * x[9] * sympy.sin(x[1]) - 0.6225 * x[9] * sympy.cos(x[7]) + 0.0388 * sympy.sin(
            x[0]) - 0.7012 * sympy.cos(x[7]) * sympy.cos(x[8]) - 0.0759 - 0.7085 / x[9] + 0.0326 / x[8] + 0.5606 * sympy.cos(x[9]) / x[
                            2] + 0.4951 * x[6] / x[1] + 0.8712 * sympy.sin(x[0]) / x[1] + 0.1182 / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.0759, 'const'), ('mul', 'binary'), (-0.3994, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.0326, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.3574, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.7085, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.8919, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.956, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.6803, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.0514, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.0388, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.1182, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6462, 'const'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2251, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7012, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6956, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2705, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6225, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1778, 'const'), ('X_6', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4426, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5606, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4951, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9849, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.145, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.861, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8712, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4477, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9798, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_34(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_34'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7802 * x[0] * x[1] + 0.8478 * x[0] * sympy.sin(x[5]) + 0.4264 * x[0] + 0.9918 * x[0] / x[4] - 0.783 * x[1] / x[
            3] + 0.4046 * x[2] - 0.2411 * x[2] / x[3] - 0.2915 * x[3] * x[7] + 0.2892 * x[3] * sympy.sin(x[9]) + 0.9989 * x[3] + 0.6398 * x[
                            4] * sympy.cos(x[7]) + 0.4994 * x[4] - 0.2915 * x[5] * x[8] + 0.9081 * x[6] * x[7] + 0.3044 * x[6] * x[
                            8] + 0.0439 * x[6] * sympy.sin(x[5]) - 0.9341 * x[6] + 0.8694 * x[7] - 0.5547 * x[9] + 0.6016 * sympy.sin(
            x[5]) - 0.288 * sympy.cos(x[1]) + 0.54 - 0.9842 / x[8] - 0.0692 * sympy.sin(x[9]) / x[2] + 0.4123 * x[9] / x[1] + 0.0351 * x[
                            3] / x[0] - 0.0768 * x[8] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.54, 'const'), ('mul', 'binary'), (0.4264, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.9341, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.288, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.4994, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.9989, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6016, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.5547, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.4046, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.9842, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.8694, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9081, 'const'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0439, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0351, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4123, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3044, 'const'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2411, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9918, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7802, 'const'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6398, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0768, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2892, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2915, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2915, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0692, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.783, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8478, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_16(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_16'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0366 * x[0] - 0.9711 * x[0] / x[5] - 0.1161 * x[1] * sympy.sin(x[2]) - 0.8907 * x[1] - 0.2384 * x[2] * x[
            5] + 0.1943 * x[2] * sympy.sin(x[0]) - 0.5127 * x[2] * sympy.cos(x[3]) + 0.4106 * x[2] + 0.4108 * x[4] * x[9] - 0.7734 * x[
                            4] * sympy.cos(x[1]) - 0.2112 * x[4] * sympy.cos(x[3]) - 0.5788 * x[4] - 0.2855 * x[6] * sympy.cos(
            x[5]) + 0.3529 * x[6] / x[9] + 0.3358 * x[7] * sympy.sin(x[2]) - 0.4401 * x[7] + 0.7195 * x[8] + 0.3516 * x[9] * sympy.cos(
            x[1]) - 0.5641 * sympy.sin(x[3]) + 0.4032 * sympy.sin(x[4]) * sympy.sin(x[6]) + 0.0231 * sympy.sin(x[4]) * sympy.cos(
            x[8]) - 0.3332 * sympy.cos(x[9]) - 0.8441 + 0.2948 * sympy.sin(x[8]) / x[9] - 0.063 / x[6] - 0.6198 / x[5] - 0.3456 * sympy.cos(
            x[9]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.8441, 'const'), ('mul', 'binary'), (-0.5641, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.4401, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.8907, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.063, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.4106, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.0366, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.6198, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.3332, 'const'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.7195, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.5788, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3516, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7734, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1943, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1161, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3529, 'const'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0231, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3456, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2948, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2112, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2855, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4032, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2384, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4108, 'const'), ('X_4', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5127, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9711, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3358, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_13(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_13'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.6296 * x[1] * sympy.sin(x[2]) - 0.9077 * x[2] * sympy.cos(x[3]) - 0.2457 * x[2] * sympy.cos(x[6]) + 0.249 * x[
            2] + 0.6008 * x[3] * x[6] - 0.0035 * x[5] - 0.7339 * x[6] * sympy.cos(x[7]) - 0.9821 * x[8] * sympy.sin(x[2]) - 0.0597 * x[
                            9] * sympy.cos(x[0]) - 0.4146 * x[9] - 0.8413 * sympy.sin(x[4]) - 0.3672 * sympy.sin(x[6]) + 0.3903 * sympy.sin(
            x[7]) - 0.4942 * sympy.sin(x[8]) + 0.87 * sympy.cos(x[1]) + 0.4817 * sympy.cos(x[4]) * sympy.cos(
            x[8]) - 0.3585 - 0.7403 * sympy.sin(x[1]) / x[7] - 0.7864 * x[5] / x[4] + 0.445 * sympy.cos(x[8]) / x[3] - 0.8954 / x[
                            3] + 0.0089 * sympy.sin(x[7]) / x[2] + 0.2999 * sympy.cos(x[9]) / x[2] - 0.9721 / (
                                    x[1] * x[5]) - 0.6893 * sympy.cos(x[3]) / x[0] - 0.1079 * sympy.cos(x[8]) / x[0] - 0.6902 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.3585, 'const'), ('mul', 'binary'), (0.249, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.0035, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.87, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.4146, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.3903, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.8413, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.4942, 'const'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.6902, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.8954, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.3672, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0089, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6008, 'const'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.445, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7864, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4817, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2999, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6893, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7403, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0597, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9821, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1079, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9077, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6296, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7339, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9721, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2457, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_47(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_47'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4051 * x[0] * x[6] + 0.6354 * x[0] - 0.1277 * x[1] * x[3] - 0.0734 * x[1] * sympy.sin(x[6]) - 0.2737 * x[1] / x[
            8] - 0.0723 * x[2] * sympy.sin(x[6]) - 0.1138 * x[2] + 0.5345 * x[2] / x[7] - 0.188 * x[3] * sympy.sin(x[5]) + 0.2941 * x[3] / \
                        x[6] + 0.9094 * x[4] * sympy.cos(x[6]) - 0.7101 * x[4] * sympy.cos(x[8]) + 0.3038 * x[5] * sympy.cos(
            x[4]) + 0.5733 * x[5] - 0.4013 * x[6] + 0.4058 * x[8] - 0.2219 * x[9] * sympy.cos(x[1]) + 0.154 * x[9] - 0.3284 * sympy.sin(
            x[0]) * sympy.sin(x[1]) + 0.9518 * sympy.sin(x[1]) + 0.1966 * sympy.sin(x[2]) * sympy.cos(x[9]) + 0.0428 * sympy.sin(
            x[3]) + 0.1328 * sympy.sin(x[4]) + 0.9108 * sympy.sin(x[7]) + 0.1618 - 0.5802 * x[8] / x[7] - 0.8188 * x[8] / x[5]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.1618, 'const'), ('mul', 'binary'), (0.6354, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.154, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.0428, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.9108, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.4013, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.1328, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.1138, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.5733, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.4058, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.9518, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7101, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2941, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9094, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0734, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1277, 'const'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.188, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3038, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2737, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5345, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8188, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1966, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4051, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3284, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0723, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2219, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5802, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_36(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_36'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8329 * x[0] * x[8] - 0.8261 * x[0] - 0.4397 * x[1] / x[9] + 0.0908 * x[2] + 0.7311 * x[4] - 0.7121 * x[4] / x[
            5] - 0.7444 * x[5] - 0.0262 * x[6] * sympy.sin(x[3]) - 0.4965 * x[6] * sympy.sin(x[4]) - 0.5413 * x[7] * x[8] - 0.6195 * x[
                            7] * sympy.sin(x[9]) + 0.8486 * x[7] - 0.6417 * x[8] * sympy.cos(x[3]) + 0.5331 * x[8] - 0.4554 * x[
                            9] - 0.2174 * sympy.sin(x[0]) * sympy.sin(x[1]) - 0.1837 * sympy.sin(x[6]) * sympy.cos(
            x[0]) - 0.0493 * sympy.cos(x[1]) * sympy.cos(x[2]) - 0.8102 * sympy.cos(x[1]) - 0.3392 * sympy.cos(x[3]) - 0.1159 * sympy.cos(
            x[6]) + 0.8238 - 0.7578 * sympy.sin(x[5]) / x[8] - 0.0655 * sympy.sin(x[0]) / x[7] + 0.1415 * sympy.sin(x[1]) / x[3] - 0.8579 * \
                        x[4] / x[0] + 0.1041 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.8238, 'const'), ('mul', 'binary'), (-0.8261, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.8102, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.3392, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.7311, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.7444, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.0908, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.1159, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.8486, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.5331, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.4554, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7578, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0262, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5413, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0655, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0493, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8579, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7121, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1837, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6195, 'const'), ('X_7', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1415, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4397, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1041, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8329, 'const'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2174, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6417, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4965, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_44(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_44'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1491 * x[0] * x[7] - 0.6747 * x[0] - 0.5322 * x[0] / x[3] - 0.7741 * x[1] / x[5] - 0.7898 * x[2] * x[
            8] - 0.5817 * x[2] * sympy.sin(x[7]) + 0.4977 * x[3] * x[9] + 0.2975 * x[3] * sympy.sin(x[4]) - 0.6214 * x[5] * x[8] + 0.0904 * \
                        x[6] * sympy.sin(x[4]) + 0.071 * x[6] + 0.185 * x[7] * sympy.sin(x[9]) + 0.7234 * x[7] - 0.0634 * x[8] - 0.8242 * x[
                            9] * sympy.sin(x[5]) + 0.2233 * x[9] * sympy.sin(x[6]) + 0.713 * x[9] + 0.6915 * sympy.sin(
            x[2]) + 0.6313 * sympy.sin(x[5]) * sympy.cos(x[7]) - 0.7253 * sympy.cos(x[1]) + 0.0664 * sympy.cos(x[4]) - 0.6779 * sympy.cos(
            x[5]) + 0.3365 - 0.0143 * sympy.sin(x[2]) / x[3] - 0.2043 / x[3] - 0.2197 * x[1] / x[0] + 0.344 * sympy.cos(x[2]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.3365, 'const'), ('mul', 'binary'), (-0.7253, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.2043, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.6915, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.7234, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.713, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.6779, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.6747, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.0634, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.0664, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.071, 'const'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0143, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6313, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5817, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8242, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7741, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.344, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2975, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1491, 'const'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.185, 'const'),
                                            ('X_7', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4977, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2197, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6214, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0904, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7898, 'const'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2233, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5322, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_6(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_6'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.2485 * x[0] * x[2] - 0.5695 * x[0] - 0.8627 * x[1] * sympy.sin(x[2]) + 0.7131 * x[1] * sympy.cos(x[6]) + 0.9645 * \
                        x[1] - 0.9562 * x[2] * sympy.cos(x[3]) + 0.4021 * x[2] - 0.9039 * x[2] / x[5] + 0.9626 * x[3] + 0.9037 * x[4] * x[
                            5] - 0.106 * x[4] * sympy.cos(x[1]) - 0.8818 * x[5] + 0.7752 * x[6] / x[9] + 0.4503 * x[7] * sympy.sin(
            x[1]) + 0.3384 * x[7] * sympy.cos(x[3]) + 0.0305 * x[7] + 0.3219 * x[8] * sympy.sin(x[4]) - 0.3003 * x[8] - 0.9116 * x[
                            9] - 0.2617 * sympy.sin(x[0]) * sympy.sin(x[3]) - 0.42 * sympy.cos(x[4]) - 0.3025 * sympy.cos(
            x[6]) + 0.3465 - 0.4071 * sympy.cos(x[1]) / x[9] - 0.113 * sympy.cos(x[2]) / x[4] - 0.3256 * sympy.cos(x[0]) / x[
                            1] - 0.6825 * sympy.cos(x[9]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.3465, 'const'), ('mul', 'binary'), (0.9626, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.3025, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.3003, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.9645, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.0305, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.5695, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.4021, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.8818, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.9116, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.42, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3256, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7752, 'const'), ('X_6', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2617, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.106, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8627, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.113, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9562, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7131, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4503, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6825, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4071, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3219, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9037, 'const'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3384, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2485, 'const'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9039, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_18(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_18'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.6143 * x[0] * x[8] - 0.0153 * x[0] * x[9] - 0.4117 * x[1] * x[9] - 0.9602 * x[2] - 0.0424 * x[3] * x[8] - 0.0688 * \
                        x[3] * x[9] - 0.7021 * x[3] + 0.5568 * x[4] * sympy.sin(x[1]) - 0.3245 * x[4] - 0.4207 * x[5] * x[9] + 0.0183 * x[
                            5] * sympy.cos(x[7]) + 0.7267 * x[5] - 0.2795 * x[6] * sympy.sin(x[4]) + 0.3754 * x[6] + 0.4179 * x[7] * x[
                            8] + 0.2496 * x[7] - 0.8882 * x[8] * x[9] - 0.5291 * x[8] * sympy.cos(x[2]) - 0.5968 * x[
                            8] - 0.5565 * sympy.sin(x[0]) * sympy.cos(x[2]) + 0.9833 * sympy.sin(x[0]) + 0.2433 * sympy.sin(
            x[1]) * sympy.cos(x[6]) - 0.1572 * sympy.sin(x[1]) + 0.0221 * sympy.cos(x[9]) + 0.3295 + 0.5707 * sympy.sin(x[1]) / x[
                            7] + 0.4061 * sympy.cos(x[5]) / x[6]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.3295, 'const'), ('mul', 'binary'), (-0.1572, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.7267, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.7021, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.0221, 'const'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.3245, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.9833, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.9602, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.2496, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.3754, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.5968, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0183, 'const'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0688, 'const'), ('X_3', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5565, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0424, 'const'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5707, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5568, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4179, 'const'), ('X_7', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5291, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2433, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6143, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8882, 'const'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2795, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4117, 'const'), ('X_1', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0153, 'const'), ('X_0', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4061, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4207, 'const'),
                                            ('X_5', 'var'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_3(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_3'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.0367 * x[0] * x[1] - 0.7318 * x[0] * x[7] + 0.0928 * x[0] - 0.2569 * x[1] + 0.9247 * x[2] * sympy.sin(
            x[6]) - 0.6676 * x[3] - 0.0202 * x[4] * x[5] - 0.8803 * x[4] * x[6] - 0.1737 * x[4] * sympy.cos(x[0]) + 0.6511 * x[4] + 0.7505 * \
                        x[5] + 0.3689 * x[6] * sympy.cos(x[9]) + 0.3828 * x[6] + 0.799 * x[7] + 0.9248 * sympy.sin(x[3]) * sympy.sin(
            x[8]) + 0.5001 * sympy.sin(x[8]) - 0.4098 * sympy.sin(x[9]) + 0.8671 * sympy.cos(x[1]) * sympy.cos(x[4]) - 0.0014 - 0.2396 * x[
                            9] / x[8] + 0.7925 * sympy.sin(x[8]) / x[6] + 0.3959 * x[9] / x[4] + 0.9241 / x[2] + 0.6855 * x[6] / x[
                            1] + 0.2555 * x[8] / x[1] - 0.2207 * sympy.cos(x[3]) / x[0] - 0.3307 / (x[0] * x[9])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.0014, 'const'), ('mul', 'binary'), (-0.2569, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.6676, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.799, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.0928, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.5001, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.3828, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.9241, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.6511, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.4098, 'const'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.7505, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9247, 'const'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8803, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1737, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9248, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2555, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7925, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0202, 'const'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3689, 'const'),
                                            ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3959, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7318, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0367, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8671, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6855, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2396, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2207, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3307, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_24(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_24'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8448 * x[0] - 0.359 * x[1] * x[7] - 0.7997 * x[1] * sympy.sin(x[0]) + 0.6584 * x[1] / x[4] + 0.1741 * x[2] * x[
            5] - 0.9423 * x[3] * sympy.sin(x[8]) - 0.9685 * x[5] - 0.7102 * x[7] * sympy.cos(x[5]) - 0.1911 * x[7] + 0.3962 * x[
                            8] * sympy.cos(x[1]) + 0.8832 * x[8] - 0.6548 * sympy.sin(x[0]) * sympy.cos(x[6]) - 0.4077 * sympy.sin(
            x[2]) + 0.5395 * sympy.sin(x[3]) * sympy.cos(x[7]) - 0.2363 * sympy.sin(x[3]) - 0.7921 * sympy.cos(x[3]) * sympy.cos(
            x[9]) - 0.8377 * sympy.cos(x[6]) + 0.1563 - 0.8584 / x[9] - 0.7861 * sympy.cos(x[3]) / x[5] + 0.2424 * x[7] / x[4] - 0.8471 / x[
                            4] - 0.0508 * sympy.sin(x[0]) / x[3] - 0.5558 / (x[3] * x[6]) - 0.7144 / x[1] - 0.3166 * x[9] / x[
                            0] - 0.7206 / (x[0] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.1563, 'const'), ('mul', 'binary'), (0.8832, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.7144, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.9685, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.4077, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.2363, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.8471, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.8377, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.8584, 'const'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.1911, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.8448, 'const'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7997, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7861, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1741, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6584, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.359, 'const'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2424, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5395, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7921, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5558, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0508, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6548, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3962, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7206, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7102, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3166, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9423, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_12(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_12'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2985 * x[0] * sympy.cos(x[7]) + 0.6496 * x[1] * x[8] + 0.5642 * x[1] * sympy.sin(x[2]) - 0.746 * x[
            1] * sympy.sin(x[9]) - 0.3608 * x[2] * x[4] + 0.1283 * x[2] - 0.6777 * x[3] * x[8] + 0.4199 * x[3] - 0.876 * x[4] * x[
                            6] - 0.8034 * x[4] - 0.1407 * x[5] * x[7] + 0.5113 * x[6] * sympy.sin(x[9]) - 0.4868 * x[6] / x[7] - 0.4916 * x[
                            7] * sympy.cos(x[4]) - 0.7066 * x[7] - 0.6712 * x[8] + 0.2206 * sympy.sin(x[0]) + 0.6713 * sympy.sin(
            x[1]) - 0.7142 * sympy.sin(x[2]) * sympy.cos(x[5]) + 0.8336 + 0.392 * sympy.cos(x[7]) / x[9] + 0.5557 / x[
                            9] + 0.8246 * sympy.sin(x[8]) / x[6] + 0.7946 / x[6] + 0.255 / x[5] - 0.0249 * sympy.cos(x[0]) / x[4] - 0.4651 * \
                        x[6] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.8336, 'const'), ('mul', 'binary'), (0.4199, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.5557, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.6713, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.7066, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.7946, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.255, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.8034, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.6712, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.1283, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.2206, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4868, 'const'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6496, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6777, 'const'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1407, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7142, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.746, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4651, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8246, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2985, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0249, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.876, 'const'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5642, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4916, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5113, 'const'), ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3608, 'const'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.392, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_25(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_25'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.6775 * x[0] / x[6] + 0.1596 * x[1] / x[7] - 0.7719 * x[2] * sympy.sin(x[6]) + 0.4012 * x[3] + 0.7842 * x[
            6] * sympy.cos(x[4]) + 0.5566 * x[7] * sympy.sin(x[0]) + 0.7545 * x[8] * sympy.cos(x[3]) + 0.2056 * x[9] * sympy.cos(
            x[6]) + 0.3106 * x[9] * sympy.cos(x[8]) + 0.1463 * sympy.sin(x[4]) * sympy.sin(x[9]) + 0.1649 * sympy.sin(x[4]) * sympy.cos(
            x[1]) - 0.4893 * sympy.sin(x[7]) - 0.3197 * sympy.sin(x[9]) + 0.7198 * sympy.cos(x[1]) + 0.3436 * sympy.cos(
            x[2]) - 0.6558 * sympy.cos(x[4]) + 0.2889 * sympy.cos(x[6]) - 0.6371 - 0.9864 / x[8] + 0.9156 * sympy.sin(x[5]) / x[
                            7] + 0.4589 * sympy.sin(x[8]) / x[7] + 0.2798 * sympy.cos(x[4]) / x[7] - 0.3746 / x[5] + 0.9615 * sympy.sin(
            x[5]) / x[4] - 0.4565 * x[4] / x[2] - 0.9146 * sympy.sin(x[4]) / x[0] + 0.1267 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.6371, 'const'), ('mul', 'binary'), (-0.9864, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.2889, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.4012, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.3746, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.1267, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.3436, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.7198, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.3197, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.4893, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.6558, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3106, 'const'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9146, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1596, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9156, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6775, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7545, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1649, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1463, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4565, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2798, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7719, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7842, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2056, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4589, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5566, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9615, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_21(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_21'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7981 * x[0] * x[8] - 0.952 * x[0] * sympy.cos(x[7]) - 0.655 * x[1] * x[4] + 0.9991 * x[2] * sympy.sin(
            x[9]) - 0.3764 * x[3] * sympy.sin(x[4]) + 0.011 * x[3] + 0.298 * x[5] * x[6] + 0.8762 * x[5] * sympy.sin(x[1]) + 0.6606 * x[
                            5] - 0.2428 * x[6] - 0.8808 * x[6] / x[8] - 0.7512 * x[7] * sympy.sin(x[4]) - 0.9982 * x[7] / x[8] - 0.5113 * x[
                            9] * sympy.sin(x[5]) + 0.5413 * x[9] - 0.7667 * sympy.sin(x[1]) - 0.4802 * sympy.sin(x[7]) - 0.5139 * sympy.sin(
            x[8]) * sympy.cos(x[5]) + 0.8157 * sympy.cos(x[2]) + 0.8935 * sympy.cos(x[8]) + 0.2621 + 0.0845 * sympy.sin(x[2]) / x[
                            7] - 0.952 / x[4] - 0.0375 * sympy.sin(x[5]) / x[3] - 0.2206 * sympy.sin(x[5]) / x[0] + 0.0036 / x[
                            0] - 0.655 / (x[0] * x[6])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.2621, 'const'), ('mul', 'binary'), (-0.2428, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.4802, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.011, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6606, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.952, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.7667, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.8157, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.5413, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.0036, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.8935, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0845, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.655, 'const'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3764, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9982, 'const'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5139, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8762, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5113, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8808, 'const'), ('X_6', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2206, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.952, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0375, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7512, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.298, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7981, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9991, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.655, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_26(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_26'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.0272 * x[0] * x[4] - 0.1713 * x[0] * sympy.cos(x[5]) - 0.6771 * x[0] * sympy.cos(x[6]) - 0.7639 * x[
            0] * sympy.cos(x[8]) - 0.6877 * x[0] + 0.9488 * x[1] + 0.7284 * x[2] * x[9] + 0.3292 * x[2] / x[5] - 0.7068 * x[3] * x[
                            6] + 0.1434 * x[4] * sympy.sin(x[6]) - 0.3788 * x[4] + 0.5329 * x[5] * x[7] - 0.5933 * x[5] * sympy.cos(
            x[9]) - 0.5765 * x[5] + 0.068 * x[6] + 0.1347 * x[7] * sympy.cos(x[0]) + 0.9079 * x[8] * sympy.cos(x[5]) - 0.1609 * x[
                            8] - 0.0843 * x[9] - 0.9902 * sympy.sin(x[2]) + 0.1236 * sympy.cos(x[0]) * sympy.cos(x[1]) - 0.6569 * sympy.cos(
            x[1]) * sympy.cos(x[6]) + 0.2988 - 0.8712 / x[7] + 0.7475 / x[3] + 0.8394 * sympy.cos(x[3]) / x[1] - 0.4607 * sympy.cos(x[9]) / \
                        x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.2988, 'const'), ('mul', 'binary'), (-0.8712, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.068, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.7475, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.1609, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.9902, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.0843, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.6877, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.3788, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.5765, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.9488, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1713, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3292, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6771, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1236, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7068, 'const'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0272, 'const'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5933, 'const'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6569, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8394, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7639, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9079, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4607, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5329, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7284, 'const'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1347, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1434, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_39(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_39'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.5069 * x[0] * sympy.sin(x[9]) + 0.351 * x[1] * x[3] - 0.3867 * x[1] * sympy.sin(x[4]) - 0.406 * x[2] * x[
            3] - 0.6579 * x[2] * x[8] - 0.9165 * x[2] * sympy.cos(x[7]) - 0.3144 * x[3] * x[7] - 0.9898 * x[3] * sympy.sin(x[0]) + 0.7119 * \
                        x[3] - 0.3523 * x[4] * x[8] + 0.2117 * x[4] + 0.9233 * x[4] / x[9] - 0.9587 * x[5] * sympy.cos(x[3]) - 0.9771 * x[
                            7] - 0.2323 * sympy.sin(x[0]) + 0.5787 * sympy.sin(x[2]) - 0.744 * sympy.sin(x[6]) * sympy.cos(
            x[4]) + 0.4039 * sympy.sin(x[9]) * sympy.cos(x[1]) + 0.8403 * sympy.cos(x[6]) - 0.9266 + 0.4085 / x[9] - 0.8924 / x[
                            8] + 0.2565 / x[5] - 0.7593 * x[5] / x[2] - 0.6102 * x[6] / x[2] - 0.7288 / x[1] - 0.8008 * x[5] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.9266, 'const'), ('mul', 'binary'), (-0.8924, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.9771, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.5787, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.2323, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.2565, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.7288, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.4085, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.8403, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.7119, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.2117, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9898, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3523, 'const'), ('X_4', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9233, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4039, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9165, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.406, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3144, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.351, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6102, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5069, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9587, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.744, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3867, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8008, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7593, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6579, 'const'),
                                            ('X_2', 'var'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_19(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_19'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.5465 * x[1] * x[6] + 0.1222 * x[1] * sympy.sin(x[0]) - 0.876 * x[1] * sympy.cos(x[9]) + 0.9661 * x[1] + 0.2624 * \
                        x[2] * sympy.cos(x[1]) + 0.8471 * x[2] - 0.9762 * x[3] * x[7] + 0.6486 * x[3] * sympy.sin(x[0]) + 0.013 * x[
                            3] + 0.3401 * x[4] * sympy.cos(x[0]) - 0.7191 * x[4] - 0.0829 * x[5] * x[7] + 0.981 * x[5] * x[9] - 0.7291 * x[
                            5] + 0.0959 * x[7] * x[9] + 0.714 * x[9] - 0.8064 * sympy.sin(x[0]) - 0.5032 * sympy.sin(x[4]) * sympy.sin(
            x[7]) - 0.5819 * sympy.sin(x[4]) * sympy.cos(x[9]) + 0.6418 * sympy.sin(x[6]) * sympy.cos(x[9]) - 0.8009 * sympy.sin(
            x[6]) + 0.7104 * sympy.sin(x[7]) + 0.4851 * sympy.sin(x[8]) - 0.8139 - 0.9798 * x[4] / x[3] + 0.9746 * sympy.cos(x[8]) / x[
                            3] + 0.1821 * x[4] / x[2]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.8139, 'const'), ('mul', 'binary'), (-0.7291, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.8009, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.7191, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.8064, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.8471, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.013, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.9661, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.7104, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.714, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.4851, 'const'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1821, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5032, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2624, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0959, 'const'), ('X_7', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5819, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9746, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6486, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1222, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0829, 'const'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9798, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3401, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5465, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.876, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6418, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.981, 'const'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9762, 'const'), ('X_3', 'var'),
                                            ('X_7', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_38(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_38'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9196 * x[0] * x[4] - 0.395 * x[0] * x[6] - 0.4089 * x[0] * x[8] - 0.7474 * x[1] * sympy.cos(x[6]) + 0.73 * x[
            1] * sympy.cos(x[9]) + 0.4418 * x[1] - 0.6433 * x[2] * sympy.cos(x[1]) - 0.2252 * x[2] + 0.8363 * x[3] * x[7] + 0.9299 * x[3] * \
                        x[8] - 0.9186 * x[3] * sympy.sin(x[2]) - 0.0593 * x[3] - 0.1546 * x[5] * sympy.cos(x[7]) - 0.53 * x[6] * x[
                            8] - 0.7324 * x[7] * sympy.sin(x[9]) - 0.8893 * x[7] - 0.3045 * x[8] - 0.8717 * x[8] / x[9] - 0.9444 * x[
                            9] * sympy.cos(x[0]) - 0.6163 * sympy.sin(x[0]) - 0.5288 * sympy.sin(x[5]) - 0.7302 * sympy.cos(
            x[4]) + 0.6199 * sympy.cos(x[6]) - 0.4205 * sympy.cos(x[9]) - 0.8048 + 0.1857 * sympy.sin(x[1]) / x[7] + 0.0286 * sympy.cos(
            x[9]) / x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.8048, 'const'), ('mul', 'binary'), (0.4418, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.7302, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.6163, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.4205, 'const'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.5288, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.6199, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.0593, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.2252, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.8893, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.3045, 'const'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.73, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9299, 'const'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9444, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1857, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7324, 'const'), ('X_7', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8363, 'const'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4089, 'const'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9196, 'const'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.395, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.53, 'const'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7474, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6433, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8717, 'const'), ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1546, 'const'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9186, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0286, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_9(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_9'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4919 * x[0] * x[2] + 0.8037 * x[0] + 0.4383 * x[1] * sympy.sin(x[5]) + 0.1668 * x[1] * sympy.cos(x[3]) - 0.834 * \
                        x[1] - 0.2801 * x[3] + 0.2413 * x[4] * sympy.sin(x[6]) + 0.7598 * x[4] + 0.0861 * x[5] * sympy.sin(x[8]) + 0.783 * \
                        x[5] * sympy.cos(x[4]) + 0.6674 * x[5] - 0.0254 * x[6] * x[7] - 0.4073 * x[6] * sympy.cos(x[8]) + 0.3687 * x[6] / x[
                            9] + 0.2049 * x[7] * sympy.sin(x[9]) + 0.1468 * x[9] * sympy.sin(x[2]) - 0.3658 * sympy.sin(x[0]) * sympy.cos(
            x[5]) + 0.0742 * sympy.sin(x[2]) - 0.802 * sympy.sin(x[7]) - 0.7463 * sympy.cos(x[1]) * sympy.cos(x[7]) - 0.8439 * sympy.cos(
            x[9]) + 0.5362 + 0.938 / x[8] + 0.6158 / x[6] + 0.5427 * x[8] / x[1] - 0.826 * sympy.cos(x[2]) / x[1] - 0.0632 * x[6] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.5362, 'const'), ('mul', 'binary'), (0.8037, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.2801, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6674, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.802, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.6158, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.7598, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.0742, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.834, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.8439, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.938, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4383, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.826, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0254, 'const'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2413, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5427, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4919, 'const'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1468, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2049, 'const'), ('X_7', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7463, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0632, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3687, 'const'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4073, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1668, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3658, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.783, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0861, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_32(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_32'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8449 * x[0] + 0.9989 * x[1] * x[2] + 0.6571 * x[1] * x[3] - 0.1491 * x[1] + 0.218 * x[2] * x[4] + 0.3019 * x[2] * \
                        x[6] - 0.7053 * x[2] - 0.923 * x[3] * x[7] - 0.7756 * x[3] * sympy.sin(x[6]) + 0.8129 * x[5] * sympy.cos(
            x[0]) + 0.0522 * x[5] * sympy.cos(x[2]) - 0.6986 * x[6] * sympy.sin(x[8]) + 0.5508 * x[7] + 0.5789 * x[8] * sympy.sin(
            x[0]) + 0.7773 * x[8] * sympy.sin(x[2]) + 0.0241 * x[8] - 0.6684 * x[9] * sympy.cos(x[7]) + 0.4764 * sympy.sin(
            x[0]) * sympy.cos(x[1]) - 0.5109 * sympy.sin(x[9]) * sympy.cos(x[1]) + 0.2696 * sympy.sin(x[9]) + 0.4574 * sympy.cos(
            x[5]) - 0.4058 * sympy.cos(x[6]) - 0.168 + 0.4234 / x[4] + 0.4399 / (x[4] * x[6]) - 0.4006 / x[3] + 0.2949 * x[7] / x[2]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.168, 'const'), ('mul', 'binary'), (-0.4058, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.4006, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.5508, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.2696, 'const'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.4234, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.0241, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.4574, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.7053, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.8449, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.1491, 'const'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0522, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8129, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6986, 'const'), ('X_6', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3019, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6684, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9989, 'const'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.923, 'const'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5789, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5109, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7773, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2949, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6571, 'const'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7756, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4399, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4764, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.218, 'const'), ('X_2', 'var'),
                                            ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1016_prog_5(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1016_prog_5'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1494 * x[0] * x[6] - 0.1596 * x[0] * x[7] - 0.2821 * x[0] - 0.8746 * x[2] + 0.3559 * x[2] / x[8] - 0.1644 * x[
            3] + 0.6398 * x[4] * x[6] - 0.3572 * x[7] * sympy.sin(x[4]) + 0.8307 * x[7] * sympy.sin(x[6]) - 0.4703 * x[7] + 0.7095 * x[
                            8] + 0.7343 * sympy.sin(x[0]) * sympy.cos(x[8]) - 0.5475 * sympy.sin(x[1]) * sympy.sin(
            x[3]) - 0.795 * sympy.sin(x[1]) - 0.7311 * sympy.sin(x[2]) * sympy.cos(x[4]) - 0.9935 * sympy.cos(x[1]) * sympy.cos(
            x[5]) + 0.9251 * sympy.cos(x[4]) * sympy.cos(x[8]) + 0.3217 * sympy.cos(x[4]) + 0.4728 + 0.2619 / x[9] + 0.305 * x[9] / x[
                            7] + 0.4967 * sympy.sin(x[9]) / x[6] + 0.844 / x[6] - 0.4825 / x[5] + 0.5396 / (
                                    x[3] * x[7]) - 0.605 * sympy.sin(x[8]) / x[1] + 0.9489 * sympy.cos(x[1]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.4728, 'const'), ('mul', 'binary'), (-0.4825, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.795, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.2821, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.844, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.2619, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.1644, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.8746, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.3217, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.4703, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.7095, 'const'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5475, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1596, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3572, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9489, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9251, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.305, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7311, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9935, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6398, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7343, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3559, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5396, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.605, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1494, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4967, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8307, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_46(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_46'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.1725 * x[1] * x[2] + 0.9942 * x[1] * x[7] - 0.2318 * x[1] / x[5] + 0.2949 * x[4] * x[5] - 0.1107 * x[
            4] - 0.2636 * x[5] / x[6] - 0.2578 + 0.5068 / x[7] - 0.8578 / x[6] + 0.1175 / x[5] - 0.2382 * x[4] / x[3] - 0.707 / x[
                            3] + 0.0074 / (x[3] * x[7]) - 0.6043 * x[4] / x[2] - 0.5165 / x[2] + 0.9473 / x[1] + 0.0331 / (
                                    x[1] * x[4]) + 0.8639 * x[1] / x[0] - 0.4255 * x[7] / x[0] - 0.0639 / x[0] + 0.5145 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2578, 'const'), ('mul', 'binary'), (-0.1107, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.5068, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.1175, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.9473, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.0639, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.8578, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.707, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.5165, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1725, 'const'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9942, 'const'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0074, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2949, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2636, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6043, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2382, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4255, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2318, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0331, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5145, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8639, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_0(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_0'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.1035 * x[0] * x[2] - 0.0873 * x[0] + 0.3978 * x[0] / x[7] - 0.1524 * x[1] - 0.6017 * x[1] / x[6] - 0.6033 * x[
            1] / x[4] - 0.4826 * x[2] - 0.6165 * x[3] / x[5] + 0.7128 * x[5] + 0.7951 * x[5] / x[6] - 0.0149 * x[6] * x[7] - 0.4517 * x[
                            6] + 0.6275 * x[7] + 0.9061 - 0.1505 / x[4] + 0.4238 / x[3] - 0.0068 / (x[3] * x[4]) + 0.404 / (
                                    x[2] * x[4]) - 0.7499 / (x[1] * x[7]) - 0.9517 / (x[0] * x[4]) - 0.6977 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.9061, 'const'), ('mul', 'binary'), (-0.1505, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.4238, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.4826, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.4517, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.7128, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.1524, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.6275, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.0873, 'const'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9517, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7499, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3978, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6977, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7951, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.404, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6033, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0068, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6017, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0149, 'const'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6165, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1035, 'const'),
                                            ('X_0', 'var'), ('X_2', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_35(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_35'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.622 * x[0] * x[2] - 0.6069 * x[1] - 0.0435 * x[2] * x[6] + 0.6773 * x[2] + 0.0125 * x[2] / x[7] - 0.6756 * x[2] / \
                        x[5] + 0.4853 * x[3] / x[4] + 0.1955 * x[5] * x[6] + 0.871 * x[5] - 0.9627 * x[6] - 0.3926 - 0.1544 / x[
                            7] + 0.0183 / (x[5] * x[7]) - 0.5356 / x[4] + 0.9956 / (x[4] * x[6]) - 0.7521 / x[3] - 0.1875 * x[3] / x[
                            2] - 0.9337 * x[5] / x[1] + 0.0527 / (x[1] * x[3]) - 0.8807 * x[3] / x[0] - 0.3014 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3926, 'const'), ('mul', 'binary'), (-0.6069, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.7521, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.6773, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.3014, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.871, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.1544, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.5356, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.9627, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0183, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1955, 'const'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.622, 'const'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1875, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0527, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9956, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0125, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8807, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4853, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6756, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9337, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0435, 'const'), ('X_2', 'var'),
                                            ('X_6', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_8(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_8'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.2304 * x[0] * x[1] + 0.0484 * x[0] * x[5] + 0.2328 * x[0] * x[6] - 0.5027 * x[1] / x[5] - 0.8359 * x[2] * x[
            5] + 0.7608 * x[2] * x[7] - 0.8338 * x[2] + 0.7334 * x[3] + 0.5345 * x[5] / x[6] + 0.1491 - 0.9675 / x[7] + 0.4269 / x[
                            6] + 0.0028 / x[5] - 0.8812 * x[7] / x[4] - 0.4079 / x[4] + 0.0999 * x[3] / x[1] - 0.1703 / x[1] - 0.5277 / (
                                    x[1] * x[6]) + 0.2871 * x[4] / x[0] + 0.5212 / x[0] + 0.5774 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1491, 'const'), ('mul', 'binary'), (-0.4079, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.5212, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.7334, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.9675, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.0028, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.1703, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.8338, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.4269, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2871, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5774, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5277, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8359, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7608, 'const'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8812, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2328, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0999, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0484, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5345, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2304, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5027, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_42(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_42'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.7492 * x[0] * x[7] - 0.219 * x[0] + 0.176 * x[0] / x[4] - 0.9642 * x[1] * x[4] - 0.4986 * x[1] - 0.0005 * x[2] * \
                        x[3] - 0.8939 * x[3] / x[6] - 0.397 * x[5] - 0.0427 * x[6] + 0.5765 - 0.5817 / x[7] - 0.7328 * x[7] / x[
                            6] + 0.2882 * x[7] / x[5] - 0.9892 * x[5] / x[4] - 0.3233 * x[7] / x[4] - 0.1039 / x[4] - 0.6517 / x[
                            3] + 0.0469 * x[5] / x[2] + 0.1343 / x[2] - 0.9132 * x[1] / x[0] + 0.4912 * x[5] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5765, 'const'), ('mul', 'binary'), (-0.0427, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.1039, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.6517, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.397, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.4986, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.219, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.5817, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.1343, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4912, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9892, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3233, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2882, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9642, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0005, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8939, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9132, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7328, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.176, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7492, 'const'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0469, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_33(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_33'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.168 * x[2] / x[7] - 0.0971 * x[2] / x[4] + 0.6975 * x[4] - 0.8915 * x[4] / x[6] + 0.7554 * x[4] / x[5] + 0.6745 * \
                        x[6] + 0.2224 * x[7] - 0.8061 - 0.5082 / x[5] + 0.055 * x[7] / x[4] + 0.7244 / x[3] - 0.9834 / (
                                    x[3] * x[6]) - 0.8232 / x[2] - 0.7133 * x[4] / x[1] - 0.099 * x[5] / x[1] + 0.5958 * x[7] / x[
                            1] - 0.3451 / x[1] + 0.406 / (x[1] * x[3]) + 0.5411 / x[0] - 0.9063 / (x[0] * x[3]) - 0.0534 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8061, 'const'), ('mul', 'binary'), (-0.3451, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.6975, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.8232, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.5082, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.2224, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.6745, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.5411, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.7244, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0971, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9063, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.168, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.099, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0534, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.406, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8915, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7554, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.055, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9834, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7133, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5958, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_7', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_20(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_20'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.226 * x[0] * x[4] - 0.725 * x[0] * x[6] + 0.1997 * x[0] * x[7] - 0.5785 * x[1] - 0.5123 * x[2] * x[3] + 0.9971 * \
                        x[2] * x[4] + 0.6855 * x[2] - 0.2124 * x[3] * x[5] - 0.5257 * x[3] + 0.7705 * x[3] / x[4] + 0.552 * x[4] / x[
                            6] + 0.1241 * x[5] * x[7] + 0.1466 * x[5] + 0.9038 * x[6] / x[7] - 0.23 - 0.9291 / x[7] - 0.3372 / x[
                            6] - 0.1137 / x[4] - 0.8427 / (x[2] * x[5]) + 0.7642 / (x[1] * x[2]) - 0.0935 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.23, 'const'), ('mul', 'binary'), (-0.9291, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.0935, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.5257, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6855, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.1137, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.1466, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.5785, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.3372, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9971, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7642, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1997, 'const'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.725, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8427, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9038, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1241, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.552, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2124, 'const'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7705, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5123, 'const'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.226, 'const'), ('X_0', 'var'),
                                            ('X_4', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_14(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_14'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.4621 * x[0] * x[3] + 0.7138 * x[0] - 0.4102 * x[0] / x[7] + 0.1159 * x[1] / x[7] + 0.0117 * x[2] + 0.6754 * x[
            2] / x[4] - 0.1121 * x[3] - 0.0565 * x[4] - 0.6397 * x[5] - 0.9842 - 0.6671 / x[7] + 0.6776 / x[6] + 0.1067 * x[7] / x[
                            4] - 0.6376 / (x[3] * x[5]) + 0.9829 * x[3] / x[2] - 0.1342 / (x[2] * x[5]) - 0.6536 * x[4] / x[1] + 0.9008 / x[
                            1] - 0.1932 * x[1] / x[0] + 0.7396 * x[4] / x[0] + 0.0281 / (x[0] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9842, 'const'), ('mul', 'binary'), (-0.6671, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.6776, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.9008, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.7138, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.0117, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.1121, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.6397, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.0565, 'const'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6536, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6376, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4621, 'const'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0281, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4102, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6754, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1159, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7396, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9829, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1342, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1932, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1067, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_31(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_31'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.1514 * x[0] * x[6] - 0.9529 * x[0] - 0.8602 * x[0] / x[5] + 0.2258 * x[0] / x[1] + 0.7709 * x[1] / x[2] + 0.8693 * \
                        x[2] * x[4] + 0.4633 * x[2] * x[7] - 0.1196 * x[3] / x[4] - 0.4392 - 0.958 / x[7] - 0.5539 / x[6] + 0.7686 * x[7] / \
                        x[5] - 0.4058 / x[5] + 0.7581 * x[5] / x[4] + 0.7897 / x[4] - 0.9334 / x[3] + 0.4041 / x[2] + 0.8132 * x[3] / x[
                            1] - 0.9982 / x[1] + 0.8601 * x[7] / x[0] + 0.1412 / (x[0] * x[4])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4392, 'const'), ('mul', 'binary'), (-0.9529, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.4058, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.958, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.9982, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.9334, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.7897, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.5539, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.4041, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4633, 'const'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1412, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1196, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8601, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2258, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1514, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8132, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7686, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7709, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7581, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8602, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8693, 'const'),
                                            ('X_2', 'var'), ('X_4', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_48(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_48'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.5405 * x[0] - 0.2498 * x[0] / x[1] - 0.3883 * x[1] * x[2] + 0.5271 * x[1] + 0.848 * x[1] / x[4] + 0.0952 * x[2] * \
                        x[5] + 0.3317 * x[2] - 0.3774 * x[2] / x[7] + 0.3331 * x[2] / x[6] + 0.7089 * x[3] / x[7] - 0.7156 * x[4] - 0.7313 * \
                        x[4] / x[6] + 0.7706 * x[5] / x[7] + 0.6527 * x[6] - 0.5308 * x[7] - 0.0497 + 0.8409 / x[5] - 0.4497 / x[
                            3] + 0.6174 * x[3] / x[2] + 0.544 / (x[2] * x[4]) - 0.1865 * x[4] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.0497, 'const'), ('mul', 'binary'), (0.5271, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.6527, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.7156, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.8409, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.5405, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.4497, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.5308, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.3317, 'const'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7706, 'const'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3331, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0952, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6174, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7313, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1865, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.544, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3883, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.848, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2498, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7089, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3774, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_41(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_41'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.8444 * x[0] + 0.5146 * x[0] / x[1] - 0.6497 * x[1] + 0.1652 * x[1] / x[4] + 0.9478 * x[4] * x[6] - 0.8885 * x[
            5] + 0.593 * x[6] / x[7] - 0.7616 + 0.6071 / x[7] + 0.6066 / x[6] - 0.384 * x[7] / x[4] - 0.2033 / x[4] + 0.668 * x[7] / x[
                            3] + 0.4549 / x[3] - 0.9768 / (x[3] * x[6]) - 0.5462 / x[2] - 0.398 / (x[2] * x[6]) + 0.5572 / (
                                    x[1] * x[6]) - 0.1923 / (x[1] * x[2]) - 0.3903 * x[6] / x[0] + 0.2048 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7616, 'const'), ('mul', 'binary'), (-0.5462, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.8885, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.6066, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.2033, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.6071, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.6497, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.8444, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.4549, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5572, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1652, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.398, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.593, 'const'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.668, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9478, 'const'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.384, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9768, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1923, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5146, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2048, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3903, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_6', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_7(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_7'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.4017 * x[0] + 0.7495 * x[1] * x[4] + 0.817 * x[1] + 0.3659 * x[1] / x[5] + 0.1819 * x[2] * x[6] + 0.9063 * x[3] / \
                        x[5] + 0.6548 * x[4] * x[7] - 0.5161 * x[4] - 0.2502 * x[6] + 0.845 - 0.1201 / x[7] + 0.9728 * x[7] / x[
                            6] - 0.5231 / x[5] - 0.4193 / (x[5] * x[7]) + 0.7378 / (x[5] * x[6]) + 0.8625 * x[6] / x[4] - 0.6821 / x[
                            3] - 0.914 / (x[3] * x[7]) + 0.0863 / x[2] + 0.564 / (x[0] * x[4]) + 0.3644 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.845, 'const'), ('mul', 'binary'), (0.4017, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.2502, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.0863, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.817, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.5161, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.6821, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.1201, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.5231, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8625, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6548, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4193, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3659, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.914, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.564, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7495, 'const'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7378, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1819, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3644, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9063, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9728, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_37(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_37'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.9247 * x[0] * x[5] + 0.1598 * x[0] + 0.309 * x[1] - 0.7418 * x[2] - 0.5704 * x[6] - 0.9327 + 0.326 / x[
            7] + 0.7018 / (x[6] * x[7]) + 0.249 * x[6] / x[5] + 0.0944 * x[7] / x[5] - 0.3175 / x[5] - 0.4257 * x[6] / x[4] + 0.9666 / x[
                            4] + 0.9863 / x[3] + 0.1533 * x[3] / x[2] - 0.6675 * x[4] / x[2] - 0.3138 * x[6] / x[1] + 0.2753 / (
                                    x[1] * x[3]) - 0.2405 / (x[1] * x[2]) + 0.0475 * x[1] / x[0] + 0.4881 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9327, 'const'), ('mul', 'binary'), (0.326, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.5704, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.9863, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.3175, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.9666, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.7418, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.309, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.1598, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0944, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0475, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6675, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2753, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4881, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4257, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2405, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1533, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7018, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9247, 'const'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.249, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3138, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_15(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_15'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.483 * x[0] * x[1] + 0.219 * x[0] * x[6] - 0.2807 * x[0] + 0.5655 * x[2] * x[4] + 0.2731 * x[3] - 0.1866 * x[3] / \
                        x[7] - 0.6058 * x[3] / x[6] - 0.2853 * x[4] - 0.0883 * x[4] / x[7] + 0.4605 * x[5] - 0.7801 * x[
                            6] + 0.2061 + 0.4547 / x[7] + 0.6705 / (x[6] * x[7]) - 0.6797 / (x[3] * x[4]) - 0.7616 / x[2] + 0.7941 / (
                                    x[2] * x[7]) + 0.5515 / (x[2] * x[5]) + 0.8256 / x[1] - 0.2948 / (x[0] * x[7]) + 0.4003 / (x[0] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.2061, 'const'), ('mul', 'binary'), (-0.7801, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.4547, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.2853, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.2731, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.2807, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.8256, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.4605, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.7616, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2948, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6058, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6797, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5655, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6705, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4003, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.483, 'const'),
                                            ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1866, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.219, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5515, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7941, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0883, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_23(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_23'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.0492 * x[0] * x[6] - 0.8656 * x[0] - 0.1056 * x[0] / x[7] + 0.1927 * x[1] * x[2] + 0.7783 * x[1] - 0.4332 * x[2] * \
                        x[6] - 0.0659 * x[2] - 0.0861 * x[2] / x[3] - 0.9144 * x[4] + 0.4743 * x[6] + 0.8821 - 0.8205 / x[7] + 0.665 * x[
                            7] / x[6] - 0.9814 * x[6] / x[5] + 0.7509 / x[5] + 0.953 * x[5] / x[4] + 0.8763 / (x[4] * x[6]) + 0.2464 * x[
                            5] / x[3] + 0.2936 / x[3] + 0.1355 / (x[2] * x[4]) - 0.9787 / (x[0] * x[4])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8821, 'const'), ('mul', 'binary'), (-0.0659, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.8656, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.8205, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.4743, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.7509, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.9144, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.7783, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.2936, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2464, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0492, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9787, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1056, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0861, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8763, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.665, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4332, 'const'), ('X_2', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1927, 'const'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1355, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.953, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9814, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_30(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_30'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.476 * x[0] / x[6] + 0.4135 * x[1] + 0.7611 * x[2] * x[4] - 0.575 * x[4] * x[7] + 0.2207 * x[4] - 0.2215 * x[4] / \
                        x[5] + 0.964 + 0.7338 / x[7] + 0.0454 / x[6] - 0.1502 / x[5] + 0.7763 / (x[5] * x[6]) + 0.6679 / x[3] + 0.2139 / (
                                    x[3] * x[7]) + 0.6764 * x[3] / x[2] - 0.4298 * x[5] / x[2] + 0.1856 * x[7] / x[2] + 0.2528 / x[
                            2] - 0.0205 * x[4] / x[1] + 0.9491 / (x[1] * x[2]) - 0.5782 * x[5] / x[0] - 0.6495 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.964, 'const'), ('mul', 'binary'), (-0.6495, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.4135, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.1502, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.6679, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.0454, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.2207, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.7338, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.2528, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.575, 'const'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0205, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7611, 'const'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9491, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.476, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6764, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1856, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4298, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7763, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2215, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2139, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5782, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_5', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_28(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_28'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.1123 * x[0] * x[5] - 0.5728 * x[0] - 0.7497 * x[1] * x[2] + 0.4354 * x[1] * x[5] + 0.7069 * x[1] - 0.545 * x[1] / \
                        x[6] - 0.7803 * x[2] * x[3] - 0.9695 * x[3] - 0.3768 * x[4] - 0.6242 * x[6] / x[7] + 0.6272 * x[
                            7] - 0.7083 - 0.3088 / x[6] + 0.7034 * x[7] / x[5] + 0.7178 / x[5] - 0.6582 * x[7] / x[2] + 0.6684 / x[
                            2] + 0.7056 * x[3] / x[1] - 0.9662 * x[4] / x[1] + 0.9961 * x[2] / x[0] + 0.5281 * x[3] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7083, 'const'), ('mul', 'binary'), (0.7178, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.7069, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.3768, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.5728, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.9695, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6272, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.6684, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.3088, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9961, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6242, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7803, 'const'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6582, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5281, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7034, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7497, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.545, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7056, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4354, 'const'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9662, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1123, 'const'), ('X_0', 'var'),
                                            ('X_5', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_17(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_17'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.4911 * x[0] * x[1] - 0.3271 * x[0] * x[6] - 0.652 * x[0] - 0.047 * x[0] / x[4] + 0.3711 * x[2] * x[7] - 0.5579 * \
                        x[3] * x[5] - 0.5185 * x[3] - 0.9207 * x[4] * x[6] + 0.9391 * x[4] + 0.6423 * x[5] - 0.6111 * x[
                            7] + 0.5835 - 0.4264 / x[6] - 0.0055 / (x[4] * x[7]) + 0.3697 * x[6] / x[3] + 0.4017 * x[6] / x[2] + 0.0966 / x[
                            2] + 0.3915 / (x[2] * x[3]) - 0.6492 * x[3] / x[1] + 0.4892 / x[1] - 0.9601 / (x[0] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5835, 'const'), ('mul', 'binary'), (-0.6111, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.4892, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.9391, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.0966, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.652, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.6423, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.5185, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.4264, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4911, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3711, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0055, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9601, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3697, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6492, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4017, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.047, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3271, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9207, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5579, 'const'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3915, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_43(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_43'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.0211 * x[0] * x[7] - 0.5341 * x[0] + 0.8697 * x[0] / x[2] + 0.9336 * x[1] / x[7] + 0.9943 * x[1] / x[4] - 0.1261 * \
                        x[2] + 0.0103 * x[3] + 0.024 * x[3] / x[4] + 0.7683 * x[4] * x[7] - 0.9099 * x[5] + 0.9171 * x[5] / x[6] + 0.3208 * \
                        x[7] - 0.0171 - 0.1178 / x[6] - 0.4381 * x[7] / x[5] + 0.0497 / x[4] - 0.7744 / (x[3] * x[6]) + 0.4249 * x[5] / x[
                            2] - 0.7929 * x[7] / x[2] - 0.6635 / x[1] + 0.8658 / (x[0] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.0171, 'const'), ('mul', 'binary'), (-0.1261, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.5341, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.0103, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.1178, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.3208, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.0497, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.9099, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.6635, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8697, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4381, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7683, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7929, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7744, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9336, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9943, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4249, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9171, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0211, 'const'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8658, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.024, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_2(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_2'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.7147 * x[0] * x[6] + 0.5215 * x[0] * x[7] - 0.9919 * x[1] + 0.7758 * x[2] - 0.359 * x[2] / x[6] + 0.275 * x[
            3] - 0.4319 * x[3] / x[4] - 0.1012 * x[5] + 0.7297 - 0.0629 / x[7] - 0.7187 / x[6] - 0.3901 * x[7] / x[5] - 0.1184 / x[
                            4] + 0.1613 / (x[4] * x[5]) + 0.013 / (x[3] * x[6]) + 0.1225 * x[5] / x[2] - 0.2872 * x[7] / x[2] - 0.5319 / (
                                    x[1] * x[4]) - 0.1651 / (x[1] * x[3]) + 0.2778 / x[0] - 0.99 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7297, 'const'), ('mul', 'binary'), (-0.0629, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.275, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.2778, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.7187, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.1012, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.1184, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.7758, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.9919, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2872, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5319, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5215, 'const'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1613, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3901, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.359, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7147, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1651, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1225, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4319, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.013, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.99, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_4(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_4'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.4253 * x[0] / x[5] + 0.3808 * x[0] / x[4] + 0.8961 * x[1] / x[4] - 0.5698 * x[2] / x[6] - 0.8772 * x[2] / x[
            4] - 0.7255 * x[4] + 0.0479 * x[5] + 0.3993 * x[7] - 0.665 - 0.54 * x[7] / x[6] - 0.5558 / x[6] + 0.8267 / (
                                    x[5] * x[6]) + 0.5158 / (x[4] * x[7]) + 0.5633 / x[3] + 0.1083 / (x[3] * x[7]) - 0.4471 / (
                                    x[3] * x[4]) + 0.5229 * x[3] / x[2] + 0.0564 / x[2] + 0.9363 / x[1] + 0.999 / x[0] + 0.6144 / (
                                    x[0] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.665, 'const'), ('mul', 'binary'), (-0.7255, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.0479, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.5633, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.0564, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.9363, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.3993, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.999, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.5558, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4471, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5229, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5698, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5158, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8961, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1083, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8267, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8772, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6144, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4253, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.54, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3808, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_45(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_45'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.0921 * x[0] * x[1] + 0.493 * x[0] * x[7] - 0.2873 * x[1] + 0.5356 * x[2] * x[3] - 0.8653 * x[2] - 0.6386 * x[
            3] - 0.5855 * x[3] / x[6] - 0.7727 * x[5] / x[6] + 0.6001 + 0.3458 / x[7] - 0.1204 / x[6] - 0.1014 / x[5] - 0.503 * x[7] / x[
                            4] + 0.1707 / x[4] + 0.9387 / (x[3] * x[4]) + 0.7763 * x[5] / x[2] - 0.8448 * x[7] / x[2] - 0.0545 / (
                                    x[2] * x[6]) - 0.0217 / (x[1] * x[2]) + 0.7741 * x[5] / x[0] - 0.9242 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6001, 'const'), ('mul', 'binary'), (0.3458, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.9242, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.1707, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.6386, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.2873, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.1014, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.8653, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.1204, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7741, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9387, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0217, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7763, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7727, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.503, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5356, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5855, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.493, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0545, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8448, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0921, 'const'),
                                            ('X_0', 'var'), ('X_1', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_49(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_49'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.7998 * x[0] + 0.0363 * x[0] / x[5] + 0.1532 * x[2] + 0.5571 * x[2] / x[5] - 0.9854 * x[3] - 0.3754 * x[3] / x[
            5] - 0.3031 * x[5] * x[6] - 0.2797 * x[5] + 0.5574 - 0.859 / x[7] + 0.0143 / x[6] + 0.9814 / (x[5] * x[7]) + 0.6111 / x[
                            4] + 0.2278 / (x[3] * x[4]) - 0.0075 * x[3] / x[2] - 0.3414 * x[4] / x[1] + 0.9564 * x[5] / x[1] + 0.4945 / x[
                            1] + 0.2779 / (x[1] * x[2]) + 0.5532 * x[1] / x[0] + 0.5533 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5574, 'const'), ('mul', 'binary'), (-0.9854, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.4945, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.1532, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.0143, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.859, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.2797, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.6111, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.7998, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3031, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2779, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0363, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5533, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0075, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3414, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3754, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9564, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5571, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5532, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9814, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2278, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_11(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_11'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.0728 * x[1] - 0.7488 * x[1] / x[5] + 0.5771 * x[2] - 0.7808 * x[3] - 0.8705 * x[3] / x[4] - 0.6182 * x[4] * x[
            5] - 0.5894 * x[4] * x[7] - 0.2903 * x[4] - 0.0457 * x[5] + 0.332 * x[7] - 0.174 - 0.8103 / x[6] - 0.4884 * x[6] / x[
                            5] - 0.0235 * x[6] / x[4] + 0.1335 / (x[3] * x[7]) - 0.0449 / (x[2] * x[7]) + 0.4819 / (x[2] * x[6]) + 0.6253 * \
                        x[4] / x[1] + 0.8699 / (x[1] * x[2]) + 0.6354 / x[0] + 0.3209 / (x[0] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.174, 'const'), ('mul', 'binary'), (-0.0457, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.6354, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.332, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.2903, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.0728, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.8103, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.5771, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.7808, 'const'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8705, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3209, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5894, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8699, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7488, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1335, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6182, 'const'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4884, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4819, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0449, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6253, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0235, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_6', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_10(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_10'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.3944 * x[0] / x[3] - 0.1375 * x[2] * x[3] + 0.9446 * x[2] * x[4] - 0.9348 * x[2] / x[5] + 0.6299 * x[4] - 0.9378 * \
                        x[5] + 0.779 * x[7] - 0.2234 + 0.9239 / x[6] - 0.3648 / (x[6] * x[7]) + 0.2626 * x[5] / x[4] - 0.2335 * x[7] / x[
                            4] - 0.4221 / x[3] - 0.7602 / x[2] - 0.2091 / (x[2] * x[7]) + 0.5484 / x[1] - 0.4769 / (
                                    x[1] * x[4]) - 0.5353 / (x[1] * x[3]) + 0.5664 / x[0] - 0.1321 / (x[0] * x[7]) + 0.0939 / (x[0] * x[4])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2234, 'const'), ('mul', 'binary'), (-0.7602, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.9378, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.6299, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.5484, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.5664, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.9239, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.779, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.4221, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2335, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2091, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9446, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2626, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5353, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1375, 'const'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3648, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4769, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9348, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0939, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3944, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1321, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_1(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_1'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.5999 * x[0] * x[2] + 0.335 * x[0] / x[7] - 0.6403 * x[0] / x[5] + 0.3059 * x[1] * x[2] - 0.0332 * x[1] * x[
            3] + 0.9391 * x[1] / x[5] + 0.5976 * x[2] * x[3] + 0.2739 * x[2] + 0.8311 * x[3] - 0.4893 * x[4] / x[6] - 0.9757 * x[
                            6] + 0.2422 - 0.2295 / x[7] - 0.4286 / x[5] + 0.9972 / x[4] + 0.0749 / (x[4] * x[5]) + 0.9196 / (
                                    x[3] * x[4]) + 0.8558 / x[1] + 0.6613 / (x[1] * x[6]) + 0.9981 / x[0] + 0.658 / (x[0] * x[6])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.2422, 'const'), ('mul', 'binary'), (0.2739, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.8558, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.2295, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.4286, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.9972, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.8311, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.9757, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.9981, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9391, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3059, 'const'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6403, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5976, 'const'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0332, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4893, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6613, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0749, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.658, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.335, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5999, 'const'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9196, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_40(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_40'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.5484 * x[0] + 0.2971 * x[0] / x[6] + 0.7209 * x[1] - 0.4854 * x[2] - 0.1251 * x[3] * x[6] + 0.7092 * x[
            5] - 0.9309 * x[6] * x[7] - 0.1332 * x[6] - 0.9815 + 0.0369 / x[7] + 0.0192 / (x[5] * x[7]) - 0.3813 / (x[5] * x[6]) + 0.4892 / \
                        x[4] + 0.6291 / (x[4] * x[7]) - 0.0012 / x[3] + 0.7523 * x[5] / x[2] - 0.8327 / (x[2] * x[3]) - 0.5598 * x[4] / x[
                            1] - 0.3309 / (x[1] * x[6]) + 0.9709 / (x[0] * x[4]) + 0.1288 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9815, 'const'), ('mul', 'binary'), (0.5484, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.4892, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.0369, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.1332, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.7209, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.0012, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.4854, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.7092, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9709, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1251, 'const'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1288, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9309, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8327, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5598, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0192, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3309, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2971, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6291, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3813, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7523, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_29(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_29'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.1285 * x[0] * x[2] - 0.0502 * x[0] + 0.6953 * x[0] / x[3] - 0.906 * x[1] * x[4] - 0.3227 * x[1] - 0.9082 * x[2] * \
                        x[7] + 0.5282 * x[3] - 0.8726 * x[5] * x[6] + 0.3329 * x[5] * x[7] - 0.7288 * x[6] * x[7] - 0.7832 * x[
                            7] + 0.8766 + 0.6253 / x[6] + 0.1642 / x[5] + 0.8721 / x[4] - 0.978 / (x[3] * x[7]) + 0.9789 / (
                                    x[3] * x[4]) + 0.9073 / x[2] + 0.1305 / (x[2] * x[6]) + 0.0633 / (x[1] * x[3]) - 0.7843 / (x[0] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8766, 'const'), ('mul', 'binary'), (0.8721, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.0502, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.1642, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.6253, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.3227, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.9073, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.5282, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.7832, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7288, 'const'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1285, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9789, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.978, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8726, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6953, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1305, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0633, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.906, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7843, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9082, 'const'), ('X_2', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3329, 'const'), ('X_5', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_22(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_22'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.1704 * x[0] * x[4] - 0.1535 * x[0] * x[5] + 0.956 * x[0] + 0.4815 * x[1] * x[7] - 0.7399 * x[2] * x[7] - 0.0782 * \
                        x[2] + 0.1609 * x[4] / x[6] + 0.2056 * x[4] / x[5] - 0.2299 * x[5] + 0.2994 * x[7] - 0.4532 - 0.835 / x[
                            6] - 0.582 / (x[6] * x[7]) + 0.2558 * x[6] / x[5] + 0.3825 / x[4] - 0.8962 / x[3] + 0.8392 / (
                                    x[3] * x[6]) - 0.7296 / (x[2] * x[3]) + 0.1587 * x[5] / x[1] - 0.1187 / x[1] - 0.9792 / (x[1] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4532, 'const'), ('mul', 'binary'), (-0.0782, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.956, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.3825, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.8962, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.2299, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.2994, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.835, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.1187, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1587, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2558, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4815, 'const'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.582, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9792, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7399, 'const'), ('X_2', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8392, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1609, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1535, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7296, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1704, 'const'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2056, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_27(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_27'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.61 * x[0] * x[6] - 0.9726 * x[0] - 0.1592 * x[1] * x[7] - 0.6338 * x[1] / x[4] + 0.3351 * x[1] / x[3] - 0.833 * x[
            3] - 0.0317 * x[3] / x[7] - 0.795 * x[3] / x[5] - 0.0751 * x[4] + 0.0873 * x[5] + 0.6013 * x[6] - 0.3179 * x[
                            7] - 0.5138 + 0.5264 * x[7] / x[6] + 0.1538 * x[7] / x[5] + 0.9575 * x[7] / x[4] - 0.3543 / x[2] - 0.5393 / x[
                            1] - 0.5509 / (x[1] * x[5]) + 0.1788 / (x[0] * x[4]) + 0.3184 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.5138, 'const'), ('mul', 'binary'), (-0.3179, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.6013, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.0751, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.3543, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.0873, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.5393, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.9726, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.833, 'const'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5264, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6338, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3184, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1592, 'const'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.61, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9575, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5509, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.795, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3351, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1788, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1538, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0317, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_34(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_34'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.2186 * x[0] * x[4] + 0.8245 * x[0] * x[6] - 0.6693 * x[1] * x[5] + 0.3129 * x[1] - 0.4263 * x[1] / x[
            4] - 0.8707 * x[1] / x[2] + 0.6713 * x[2] - 0.2693 * x[2] / x[4] - 0.516 * x[4] + 0.6067 * x[5] / x[6] - 0.7214 * x[
                            7] - 0.0911 + 0.6402 / x[6] - 0.5744 / (x[6] * x[7]) - 0.9882 / x[5] + 0.8972 / (x[4] * x[5]) + 0.9161 * x[7] / \
                        x[3] + 0.1778 / x[3] + 0.0238 / (x[2] * x[7]) - 0.6145 * x[3] / x[1] + 0.4574 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.0911, 'const'), ('mul', 'binary'), (0.4574, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.516, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.1778, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.9882, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.3129, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.6402, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.6713, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.7214, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6145, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6693, 'const'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8707, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2186, 'const'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5744, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6067, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8245, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2693, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9161, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4263, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0238, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8972, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_16(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_16'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.5255 * x[0] * x[2] - 0.3735 * x[0] * x[3] - 0.6608 * x[0] + 0.7417 * x[0] / x[7] + 0.4385 * x[0] / x[
            5] - 0.3185 * x[0] / x[1] - 0.9136 * x[1] - 0.1911 * x[2] * x[3] - 0.4409 * x[2] + 0.7799 * x[2] / x[6] - 0.2465 * x[2] / x[
                            4] + 0.9117 * x[3] / x[5] + 0.3359 * x[4] - 0.2603 * x[5] + 0.3063 * x[6] + 0.6949 - 0.5595 / x[7] - 0.4908 * x[
                            7] / x[6] + 0.499 / x[3] + 0.7134 / (x[2] * x[7]) + 0.005 / (x[1] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6949, 'const'), ('mul', 'binary'), (-0.4409, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.3359, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.6608, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.3063, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.5595, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.9136, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.2603, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.499, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4908, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1911, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7417, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7799, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.005, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7134, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3185, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3735, 'const'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2465, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5255, 'const'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4385, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9117, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_13(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_13'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.9745 * x[0] * x[7] + 0.3239 * x[0] / x[5] - 0.1522 * x[1] * x[4] + 0.1458 * x[2] * x[5] + 0.1055 * x[2] / x[
            3] - 0.5869 * x[4] * x[6] + 0.7467 * x[5] - 0.4699 * x[7] + 0.1901 - 0.3934 / x[6] + 0.8419 * x[7] / x[4] - 0.722 / x[
                            4] - 0.6346 / x[3] - 0.5198 / (x[3] * x[6]) + 0.9308 / x[2] - 0.0213 / (x[2] * x[4]) + 0.3808 / x[
                            1] + 0.1338 / (x[1] * x[6]) - 0.4526 / (x[1] * x[3]) + 0.2465 / x[0] + 0.8006 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1901, 'const'), ('mul', 'binary'), (0.2465, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.7467, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.722, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.3808, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.4699, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.6346, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.9308, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.3934, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1522, 'const'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5869, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1055, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1338, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9745, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4526, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1458, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5198, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8006, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8419, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3239, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0213, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_47(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_47'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.4317 * x[0] - 0.7225 * x[1] - 0.9392 * x[1] / x[4] + 0.0837 * x[2] * x[5] - 0.3359 * x[2] * x[7] - 0.6881 * x[
            3] / x[5] + 0.208 * x[4] - 0.1377 * x[4] / x[6] + 0.0355 * x[5] - 0.3501 * x[6] * x[7] - 0.7362 * x[6] - 0.6383 * x[
                            7] - 0.5489 - 0.94 * x[5] / x[4] + 0.1071 / x[3] - 0.7705 / (x[3] * x[6]) + 0.4126 / x[2] + 0.6358 / (
                                    x[1] * x[3]) - 0.0729 / (x[0] * x[7]) + 0.6238 / (x[0] * x[5]) + 0.5681 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.5489, 'const'), ('mul', 'binary'), (0.1071, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.4126, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.4317, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.7225, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.7362, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.0355, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.6383, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.208, 'const'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3501, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6358, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6238, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0729, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0837, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7705, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9392, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1377, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5681, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6881, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3359, 'const'), ('X_2', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.94, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_36(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_36'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.9052 * x[0] * x[2] - 0.6972 * x[0] - 0.3236 * x[0] / x[1] + 0.3315 * x[1] / x[5] + 0.2475 * x[
            3] + 0.215 - 0.2673 / x[7] + 0.9479 / x[6] + 0.1395 * x[7] / x[5] - 0.861 / x[5] - 0.899 * x[6] / x[4] - 0.5721 / x[
                            4] - 0.9975 / (x[4] * x[7]) - 0.0138 / (x[4] * x[5]) - 0.1122 / (x[3] * x[4]) - 0.9004 * x[4] / x[2] - 0.761 / \
                        x[2] - 0.2357 / x[1] + 0.7524 / (x[1] * x[4]) + 0.5986 * x[7] / x[0] + 0.6192 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.215, 'const'), ('mul', 'binary'), (0.9479, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.761, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.2357, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.2673, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.5721, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.6972, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.861, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.2475, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9004, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0138, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9975, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3315, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1395, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7524, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1122, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.899, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6192, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5986, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3236, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9052, 'const'),
                                            ('X_0', 'var'), ('X_2', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_44(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_44'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.5754 * x[0] * x[3] - 0.3198 * x[0] / x[4] + 0.6724 * x[1] * x[3] - 0.9182 * x[1] * x[7] + 0.9483 * x[1] - 0.2086 * \
                        x[2] - 0.5091 * x[2] / x[3] - 0.9275 * x[4] - 0.2323 * x[4] / x[5] - 0.8856 * x[5] - 0.5243 * x[5] / x[6] - 0.2731 * \
                        x[6] - 0.0495 * x[7] + 0.6558 - 0.0318 / x[3] - 0.1942 / (x[3] * x[4]) + 0.0067 * x[4] / x[2] - 0.3715 * x[5] / x[
                            2] - 0.4586 * x[2] / x[0] - 0.4069 / x[0] + 0.6789 / (x[0] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6558, 'const'), ('mul', 'binary'), (-0.0318, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.9483, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.4069, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.2086, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.0495, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.2731, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.9275, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.8856, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0067, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1942, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4586, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6724, 'const'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3715, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3198, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5243, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6789, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5754, 'const'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9182, 'const'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2323, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5091, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_6(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_6'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.9899 * x[0] - 0.4201 * x[1] * x[4] - 0.4985 * x[1] + 0.0007 * x[1] / x[5] + 0.0772 * x[3] / x[7] - 0.5072 * x[
            4] - 0.8671 * x[5] / x[7] - 0.7342 * x[6] - 0.9913 - 0.657 / x[7] + 0.0498 * x[7] / x[6] + 0.6662 / x[5] + 0.6138 / (
                                    x[5] * x[6]) + 0.8688 / x[3] - 0.9916 / (x[3] * x[6]) - 0.7446 * x[5] / x[2] + 0.5671 / x[
                            2] - 0.1109 / (x[1] * x[6]) - 0.5442 / (x[1] * x[2]) - 0.5208 * x[2] / x[0] - 0.0721 / (x[0] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9913, 'const'), ('mul', 'binary'), (-0.4985, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.5072, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.6662, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.8688, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.9899, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.657, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.7342, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.5671, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0721, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9916, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8671, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1109, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0007, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7446, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5442, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0772, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6138, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0498, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5208, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4201, 'const'), ('X_1', 'var'), ('X_4', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_18(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_18'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.8577 * x[0] * x[6] - 0.5735 * x[0] / x[2] - 0.1709 * x[1] - 0.2118 * x[2] * x[5] + 0.5281 * x[2] * x[7] + 0.013 * \
                        x[2] - 0.707 * x[2] / x[6] + 0.5685 * x[3] / x[4] + 0.567 * x[4] + 0.3368 * x[5] - 0.0677 * x[6] - 0.745 - 0.895 / \
                        x[7] + 0.0623 / (x[4] * x[6]) + 0.0711 / x[3] + 0.0113 / (x[3] * x[7]) + 0.2913 * x[2] / x[1] - 0.7398 * x[7] / x[
                            0] + 0.4261 / x[0] - 0.7052 / (x[0] * x[3]) + 0.0447 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.745, 'const'), ('mul', 'binary'), (-0.0677, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.0711, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.895, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.3368, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.567, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.4261, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.1709, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.013, 'const'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0113, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7398, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5685, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0623, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5735, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0447, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8577, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.707, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2118, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2913, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5281, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7052, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_3(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_3'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.3749 * x[0] * x[3] - 0.2494 * x[0] - 0.0409 * x[0] / x[7] - 0.0254 * x[0] / x[6] - 0.0498 * x[0] / x[4] - 0.784 * \
                        x[1] * x[4] - 0.1787 * x[1] + 0.9018 * x[2] + 0.9774 * x[3] / x[7] + 0.6279 * x[4] / x[7] + 0.8239 * x[
                            7] - 0.063 + 0.9828 / x[6] + 0.5674 / x[5] + 0.4985 / (x[5] * x[7]) - 0.3367 / (x[5] * x[6]) + 0.1524 / x[
                            4] - 0.7412 / (x[4] * x[5]) - 0.6947 / x[3] + 0.0764 / (x[1] * x[7]) + 0.9412 / (x[1] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.063, 'const'), ('mul', 'binary'), (0.5674, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.2494, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.9828, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.8239, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.1787, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.9018, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.1524, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.6947, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3749, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7412, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.784, 'const'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6279, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0764, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0409, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9774, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4985, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3367, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9412, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0498, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0254, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_24(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_24'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.0752 * x[0] * x[4] - 0.8143 * x[0] * x[5] - 0.8614 * x[0] - 0.6913 * x[1] - 0.8489 * x[3] - 0.0488 * x[3] / x[
            6] + 0.0962 * x[3] / x[5] + 0.9357 * x[5] - 0.6068 - 0.9496 / x[7] - 0.6562 / x[6] + 0.7872 * x[6] / x[5] + 0.2262 * x[7] / x[
                            5] - 0.9967 / x[4] + 0.0772 / (x[4] * x[6]) - 0.7611 / (x[3] * x[7]) + 0.3034 / x[2] + 0.6029 / (
                                    x[2] * x[4]) - 0.1177 * x[3] / x[1] + 0.0488 * x[7] / x[1] - 0.9266 * x[3] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6068, 'const'), ('mul', 'binary'), (0.9357, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.6913, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.9967, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.8614, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.9496, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.3034, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.8489, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.6562, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0488, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6029, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2262, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7872, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0772, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1177, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7611, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9266, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8143, 'const'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0488, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0752, 'const'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0962, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_12(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_12'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.8843 * x[0] / x[5] - 0.5793 * x[0] / x[2] + 0.4281 * x[1] * x[5] - 0.1144 * x[1] - 0.4492 * x[3] * x[4] - 0.791 * \
                        x[3] * x[5] + 0.0155 * x[4] + 0.2671 * x[4] / x[6] + 0.0673 * x[5] * x[7] - 0.7861 * x[5] / x[6] + 0.7588 + 0.3633 / \
                        x[7] + 0.2094 / x[6] + 0.0574 / x[5] - 0.8978 / (x[4] * x[7]) - 0.0354 / x[3] + 0.2884 / (x[3] * x[7]) - 0.9216 / x[
                            2] + 0.1617 / (x[1] * x[7]) - 0.2973 / x[0] + 0.3783 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7588, 'const'), ('mul', 'binary'), (0.0155, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.2973, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.0574, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.0354, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.9216, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.1144, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.3633, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.2094, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7861, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2671, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5793, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1617, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8978, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2884, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0673, 'const'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4492, 'const'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3783, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8843, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4281, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.791, 'const'), ('X_3', 'var'), ('X_5', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_25(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_25'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.1602 * x[0] * x[4] + 0.2461 * x[0] * x[6] - 0.1509 * x[1] / x[7] + 0.5234 * x[3] * x[4] + 0.0532 * x[4] + 0.56 * \
                        x[5] - 0.4475 + 0.6255 / x[7] - 0.9022 / x[6] - 0.6503 / (x[5] * x[6]) + 0.8443 * x[5] / x[3] + 0.9317 * x[6] / x[
                            3] - 0.1183 / x[3] - 0.5144 * x[4] / x[2] - 0.1699 / x[2] - 0.456 * x[6] / x[1] + 0.4997 / x[1] - 0.4816 / (
                                    x[1] * x[5]) + 0.2926 / (x[1] * x[4]) + 0.7758 * x[3] / x[0] + 0.4846 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4475, 'const'), ('mul', 'binary'), (0.6255, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.9022, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.4997, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.0532, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.1699, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.4846, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.1183, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.56, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6503, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7758, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2461, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5144, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1509, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2926, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9317, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.456, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8443, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4816, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1602, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5234, 'const'), ('X_3', 'var'), ('X_4', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_21(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_21'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.7352 * x[0] / x[6] + 0.915 * x[1] * x[2] + 0.373 * x[1] * x[6] - 0.7599 * x[2] * x[3] - 0.9253 * x[2] - 0.5096 * \
                        x[2] / x[4] + 0.8682 * x[3] * x[4] + 0.2662 * x[3] + 0.1101 * x[3] / x[5] + 0.4888 * x[4] - 0.8575 * x[5] * x[
                            6] + 0.7476 * x[5] - 0.0774 * x[6] - 0.655 * x[7] - 0.9094 + 0.5399 / (x[3] * x[7]) + 0.1718 / (
                                    x[2] * x[7]) - 0.8514 / (x[2] * x[6]) - 0.4427 / x[1] - 0.8331 / (x[1] * x[5]) - 0.7494 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9094, 'const'), ('mul', 'binary'), (-0.7494, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.0774, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.4427, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.2662, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.9253, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.655, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.7476, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.4888, 'const'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7599, 'const'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8682, 'const'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8514, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7352, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8575, 'const'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8331, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5096, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.915, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5399, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1101, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.373, 'const'), ('X_1', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1718, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_26(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_26'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.0554 * x[0] / x[2] - 0.4422 * x[3] * x[7] - 0.7205 * x[3] / x[6] - 0.6557 * x[4] - 0.1363 * x[6] * x[7] - 0.6159 * \
                        x[6] - 0.1658 * x[7] - 0.313 + 0.3184 / x[5] - 0.7259 * x[5] / x[4] - 0.2376 / (x[4] * x[6]) + 0.7484 / x[
                            3] - 0.5132 / (x[3] * x[4]) + 0.9462 / x[2] + 0.7896 / (x[2] * x[3]) - 0.97 * x[5] / x[1] - 0.8857 / x[
                            1] - 0.4238 / x[0] - 0.4864 / (x[0] * x[6]) - 0.376 / (x[0] * x[4]) - 0.2178 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.313, 'const'), ('mul', 'binary'), (0.9462, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.3184, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.7484, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.6557, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.8857, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.6159, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.1658, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.4238, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4422, 'const'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1363, 'const'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7205, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.97, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4864, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5132, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7259, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2178, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2376, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0554, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.376, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7896, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_39(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_39'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.5831 * x[0] * x[5] - 0.2773 * x[1] * x[5] - 0.123 * x[2] * x[3] - 0.1955 * x[2] * x[4] + 0.1009 * x[2] / x[
            6] - 0.7299 * x[3] - 0.9417 * x[3] / x[6] + 0.7472 * x[4] / x[6] - 0.188 * x[5] - 0.0738 * x[7] - 0.469 + 0.1889 / x[
                            6] + 0.4274 / (x[5] * x[6]) + 0.07 / x[4] + 0.0296 * x[7] / x[3] - 0.9483 / x[2] + 0.5179 / x[1] - 0.9841 * x[
                            1] / x[0] + 0.9973 / x[0] + 0.4956 / (x[0] * x[7]) + 0.4098 / (x[0] * x[4])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.469, 'const'), ('mul', 'binary'), (-0.9483, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.5179, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.07, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.0738, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.188, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.9973, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.1889, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.7299, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2773, 'const'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.123, 'const'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9417, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4956, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4274, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1009, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9841, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7472, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5831, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0296, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1955, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4098, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_19(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_19'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.5549 * x[0] / x[2] - 0.1693 * x[1] / x[7] + 0.8683 * x[2] / x[6] + 0.0582 * x[2] / x[4] - 0.8744 * x[3] * x[
            4] - 0.5331 * x[3] - 0.5669 * x[3] / x[6] + 0.793 * x[6] + 0.775 * x[7] - 0.9978 + 0.6941 * x[6] / x[5] - 0.9902 * x[7] / x[
                            5] - 0.4421 / x[5] - 0.6583 / x[4] + 0.9961 * x[7] / x[3] - 0.0213 / x[2] + 0.2106 / x[1] + 0.5035 / (
                                    x[1] * x[3]) - 0.795 * x[1] / x[0] - 0.0692 * x[6] / x[0] - 0.6766 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9978, 'const'), ('mul', 'binary'), (0.2106, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.4421, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.0213, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.6766, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.775, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.793, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.6583, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.5331, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5035, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8744, 'const'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6941, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1693, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0582, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9961, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.795, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9902, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5549, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5669, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8683, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0692, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_6', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_38(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_38'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.5981 * x[0] * x[2] - 0.8659 * x[2] - 0.0524 * x[3] * x[7] - 0.7412 * x[3] + 0.8458 * x[3] / x[6] - 0.437 * x[
            4] - 0.8874 * x[4] / x[5] - 0.4556 * x[5] * x[7] + 0.0514 * x[5] + 0.1051 * x[6] + 0.8395 * x[7] + 0.3539 + 0.5844 * x[6] / x[
                            4] + 0.0253 / x[1] + 0.9879 / (x[1] * x[4]) - 0.1719 / (x[1] * x[2]) - 0.4896 * x[5] / x[0] + 0.8549 * x[6] / x[
                            0] + 0.1333 / x[0] + 0.3267 / (x[0] * x[7]) - 0.4683 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3539, 'const'), ('mul', 'binary'), (0.1333, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.7412, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.8659, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.8395, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.0253, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.0514, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.437, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.1051, 'const'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5844, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0524, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3267, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8549, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9879, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8458, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5981, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4896, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4683, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1719, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8874, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4556, 'const'), ('X_5', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_9(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_9'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.0294 * x[0] + 0.5482 * x[0] / x[6] + 0.2771 * x[1] + 0.466 * x[2] * x[5] + 0.1462 * x[2] * x[7] - 0.2192 * x[
            2] + 0.4633 * x[3] - 0.312 * x[4] + 0.2884 * x[5] * x[7] - 0.9962 * x[5] / x[6] - 0.4616 * x[6] + 0.1084 * x[
                            7] - 0.3966 + 0.7155 / x[5] - 0.7487 * x[6] / x[4] + 0.6561 / (x[3] * x[6]) - 0.2382 / (x[3] * x[5]) + 0.7899 * \
                        x[3] / x[1] + 0.7787 * x[7] / x[1] - 0.5572 / (x[0] * x[7]) - 0.2935 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3966, 'const'), ('mul', 'binary'), (0.0294, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.2192, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.7155, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.2771, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.4633, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.4616, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.312, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.1084, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9962, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1462, 'const'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7787, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6561, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7487, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2382, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5572, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7899, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2884, 'const'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5482, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.466, 'const'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2935, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_32(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_32'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.3766 * x[0] * x[2] + 0.1242 * x[0] - 0.0302 * x[0] / x[6] + 0.3715 * x[0] / x[1] + 0.6268 * x[1] * x[2] + 0.8723 * \
                        x[1] - 0.6702 * x[2] * x[7] + 0.2198 * x[2] - 0.1144 * x[5] - 0.6723 * x[5] / x[6] + 0.7663 * x[6] + 0.0087 * x[6] / \
                        x[7] - 0.9885 + 0.5489 / x[7] - 0.5409 / x[4] - 0.6897 / x[3] - 0.697 / (x[3] * x[5]) - 0.0596 / (
                                    x[3] * x[4]) + 0.2796 * x[5] / x[1] + 0.2568 / (x[1] * x[7]) - 0.1927 * x[4] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9885, 'const'), ('mul', 'binary'), (0.7663, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.1144, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.5489, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.8723, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.1242, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.6897, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.2198, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.5409, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1927, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0302, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6723, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6268, 'const'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2796, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6702, 'const'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.697, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2568, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3766, 'const'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3715, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0596, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0087, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class inv_nv8_nt812_prog_5(KnownEquation):
    _eq_name = 'inv_nv8_nt812_prog_5'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.9488 * x[0] + 0.7575 * x[0] / x[4] - 0.456 * x[2] * x[5] + 0.5938 * x[2] * x[6] + 0.3155 * x[2] + 0.9698 * x[3] * \
                        x[4] - 0.5607 * x[3] - 0.5755 * x[3] / x[6] + 0.0967 * x[4] / x[7] - 0.2859 - 0.2225 / x[7] - 0.1019 / x[
                            6] - 0.9157 / (x[6] * x[7]) - 0.0481 / x[5] - 0.7646 / (x[5] * x[6]) - 0.8547 / x[4] - 0.8516 * x[5] / x[
                            3] + 0.7842 * x[3] / x[1] + 0.6011 / x[1] - 0.7037 / (x[1] * x[2]) - 0.7965 * x[2] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2859, 'const'), ('mul', 'binary'), (-0.9488, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.0481, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.1019, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.2225, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.5607, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.3155, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.6011, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.8547, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7646, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9698, 'const'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7575, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5938, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9157, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7037, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8516, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7965, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.456, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0967, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7842, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5755, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_46(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_46'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2169 * x[0] * x[5] + 0.7848 * x[0] / x[6] + 0.9583 * x[1] * x[8] + 0.1294 * x[2] - 0.2829 * x[3] + 0.5123 * x[
            5] * x[9] - 0.5208 * x[6] + 0.9861 * x[6] / x[7] + 0.8794 * x[7] - 0.2688 * x[7] / x[8] + 0.9329 * x[8] / x[9] + 0.2552 * x[
                            9] - 0.6273 - 0.3265 / x[8] + 0.3277 * x[9] / x[7] - 0.5612 * x[9] / x[6] - 0.8324 / x[5] + 0.5973 / (
                                    x[5] * x[8]) - 0.4186 / x[4] + 0.4218 * x[9] / x[3] - 0.4007 / (x[2] * x[9]) - 0.7091 * x[4] / x[
                            1] + 0.3453 * x[6] / x[1] + 0.513 / x[1] - 0.2909 * x[3] / x[0] + 0.0055 * x[9] / x[0] + 0.5916 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.6273, 'const'), ('mul', 'binary'), (0.8794, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.1294, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.3265, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.8324, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.5916, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.2829, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.5208, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.513, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.4186, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.2552, 'const'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3277, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5123, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5612, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7091, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9861, 'const'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7848, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4007, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9583, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3453, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4218, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9329, 'const'), ('X_8', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2909, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2688, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0055, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5973, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2169, 'const'),
                                            ('X_0', 'var'), ('X_5', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_0(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_0'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.1412 * x[0] - 0.2403 * x[1] - 0.6732 * x[1] / x[4] + 0.6792 * x[2] * x[5] - 0.8166 * x[2] * x[9] + 0.9734 * x[
            2] + 0.0242 * x[3] * x[9] + 0.31 * x[4] * x[5] - 0.7238 * x[4] * x[9] - 0.2136 * x[4] + 0.2985 * x[4] / x[7] + 0.3239 * x[5] * \
                        x[8] - 0.037 * x[7] / x[8] + 0.3741 * x[8] + 0.829 + 0.4808 / x[9] - 0.0899 / x[7] + 0.8295 / x[6] - 0.9642 / x[
                            5] + 0.1133 / x[3] - 0.3576 / (x[3] * x[8]) - 0.7597 / (x[3] * x[6]) - 0.7976 / (x[3] * x[5]) - 0.4108 / (
                                    x[1] * x[9]) + 0.2127 / (x[1] * x[2]) + 0.4986 / (x[0] * x[3]) - 0.5419 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.829, 'const'), ('mul', 'binary'), (-0.0899, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.2136, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.9642, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.8295, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.4808, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.9734, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.2403, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.3741, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.1412, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.1133, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5419, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3239, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4986, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.037, 'const'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4108, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.31, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2985, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3576, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7238, 'const'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8166, 'const'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7976, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6732, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6792, 'const'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2127, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0242, 'const'),
                                            ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7597, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_35(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_35'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5031 * x[0] * x[4] - 0.7373 * x[1] * x[8] + 0.9037 * x[1] + 0.6264 * x[2] * x[5] + 0.4297 * x[2] + 0.095 * x[2] / \
                        x[7] - 0.0082 * x[3] * x[4] - 0.6143 * x[4] / x[8] - 0.2508 * x[6] + 0.102 * x[8] + 0.4933 + 0.2742 / x[
                            9] + 0.2146 / x[7] + 0.0821 * x[8] / x[6] + 0.4051 / (x[6] * x[9]) + 0.5331 * x[6] / x[5] + 0.0318 / x[
                            5] + 0.9345 / (x[5] * x[8]) - 0.7843 * x[9] / x[4] + 0.0481 / x[4] - 0.4936 * x[8] / x[3] + 0.0956 / x[
                            3] - 0.1644 / (x[2] * x[6]) + 0.4298 / (x[1] * x[6]) - 0.0998 / (x[1] * x[3]) + 0.9969 / x[0] + 0.3433 / (
                                    x[0] * x[6])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.4933, 'const'), ('mul', 'binary'), (0.0318, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.2508, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.4297, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.2146, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.0481, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.0956, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.9037, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.102, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.9969, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.2742, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7843, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7373, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6143, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0082, 'const'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4936, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0998, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3433, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.095, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9345, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4051, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5331, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1644, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0821, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5031, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4298, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6264, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_8(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_8'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.3784 * x[0] * x[2] - 0.4747 * x[0] * x[3] - 0.6985 * x[0] * x[5] - 0.3508 * x[0] * x[8] + 0.5425 * x[
            3] + 0.1036 * x[4] * x[7] - 0.3385 * x[4] - 0.4905 * x[5] + 0.5039 * x[7] * x[8] + 0.6504 * x[9] + 0.4281 + 0.25 / x[
                            8] + 0.0227 / (x[8] * x[9]) + 0.33 * x[9] / x[7] + 0.7031 / x[7] + 0.0241 * x[7] / x[6] + 0.2389 / x[
                            6] - 0.153 / (x[5] * x[9]) - 0.005 / (x[5] * x[6]) - 0.1479 / (x[4] * x[8]) + 0.2168 / (x[3] * x[4]) + 0.5682 * \
                        x[6] / x[2] - 0.2947 / x[2] - 0.6641 * x[8] / x[1] + 0.5533 / x[1] - 0.1689 / x[0] - 0.768 / (x[0] * x[9])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.4281, 'const'), ('mul', 'binary'), (0.7031, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.2947, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.25, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.2389, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.4905, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.1689, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.3385, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.5425, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.5533, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.6504, 'const'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3508, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.33, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4747, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2168, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0227, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.768, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3784, 'const'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.005, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1479, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5039, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1036, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6985, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6641, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.153, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5682, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0241, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_42(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_42'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.1808 * x[0] - 0.4199 * x[1] / x[3] - 0.3142 * x[2] * x[7] + 0.5828 * x[2] / x[9] - 0.5482 * x[3] * x[6] - 0.6585 * \
                        x[3] - 0.7493 * x[3] / x[5] - 0.3633 * x[4] * x[7] - 0.2842 * x[4] / x[8] + 0.7914 * x[5] * x[7] - 0.6143 * x[6] * \
                        x[7] - 0.55 * x[6] - 0.5661 * x[7] * x[9] + 0.7451 * x[7] - 0.9918 - 0.7398 / x[9] - 0.0738 / x[8] + 0.3273 * x[6] / \
                        x[5] - 0.391 / x[5] + 0.8489 / (x[5] * x[9]) - 0.7625 / x[4] + 0.0319 / (x[4] * x[5]) + 0.3917 / (
                                    x[3] * x[4]) + 0.1415 / x[2] + 0.5506 / x[1] - 0.8418 / (x[1] * x[4]) + 0.1461 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.9918, 'const'), ('mul', 'binary'), (0.7451, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.55, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.1808, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.0738, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.7625, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.391, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.6585, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.5506, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.1415, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.7398, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7493, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3633, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3273, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8489, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0319, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5482, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1461, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8418, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3917, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7914, 'const'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2842, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3142, 'const'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5828, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5661, 'const'),
                                            ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4199, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6143, 'const'), ('X_6', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_33(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_33'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4166 * x[0] * x[5] + 0.9969 * x[0] / x[8] + 0.3617 * x[1] / x[9] + 0.1533 * x[1] / x[6] + 0.734 * x[2] * x[
            4] + 0.7586 * x[2] * x[8] + 0.572 * x[3] + 0.3521 * x[4] * x[5] + 0.2268 * x[4] / x[6] - 0.5459 * x[8] + 0.664 * x[
                            9] + 0.2967 + 0.0153 / x[7] - 0.4603 / x[6] - 0.893 / (x[6] * x[8]) + 0.5878 * x[8] / x[5] - 0.9668 / x[
                            5] + 0.5855 / x[4] - 0.3189 / (x[4] * x[7]) - 0.6444 / x[2] - 0.2663 / x[1] + 0.2725 / (
                                    x[1] * x[4]) + 0.5141 / (x[1] * x[3]) + 0.8213 * x[2] / x[0] - 0.6619 * x[4] / x[0] - 0.3533 / x[
                            0] + 0.7863 / (x[0] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.2967, 'const'), ('mul', 'binary'), (0.572, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.4603, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.6444, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.3533, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.2663, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.9668, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.5459, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.664, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.0153, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.5855, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2725, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2268, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3617, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1533, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8213, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6619, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7863, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3521, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3189, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4166, 'const'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9969, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5141, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5878, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.734, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.893, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7586, 'const'), ('X_2', 'var'),
                                            ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_20(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_20'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7029 * x[0] * x[1] - 0.2662 * x[0] * x[2] - 0.9543 * x[0] - 0.4368 * x[0] / x[6] - 0.8453 * x[0] / x[
            5] - 0.4003 * x[1] * x[4] - 0.9768 * x[1] - 0.7917 * x[1] / x[8] - 0.8999 * x[2] / x[9] - 0.7004 * x[3] * x[9] + 0.3516 * x[
                            3] + 0.1498 * x[4] + 0.6335 * x[5] * x[7] - 0.6305 * x[6] + 0.9967 * x[6] / x[9] + 0.1256 * x[7] + 0.3312 * x[
                            8] - 0.182 * x[9] + 0.1044 - 0.9982 / x[5] - 0.3282 / (x[5] * x[6]) + 0.4126 * x[9] / x[4] + 0.8766 * x[8] / x[
                            3] + 0.1027 / (x[3] * x[4]) + 0.4692 * x[4] / x[2] + 0.4376 / x[2] + 0.2338 / (x[0] * x[4])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.1044, 'const'), ('mul', 'binary'), (-0.9982, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.4376, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.6305, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.9543, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.9768, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.182, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.3516, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.1498, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.3312, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.1256, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3282, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7004, 'const'), ('X_3', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6335, 'const'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7029, 'const'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8766, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1027, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7917, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9967, 'const'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2338, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4692, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8453, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4126, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4368, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2662, 'const'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4003, 'const'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8999, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_14(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_14'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7388 * x[0] * x[3] + 0.4585 * x[0] + 0.1572 * x[0] / x[7] - 0.5457 * x[1] / x[7] + 0.6663 * x[2] * x[5] + 0.789 * \
                        x[2] / x[6] - 0.4927 * x[4] + 0.0838 * x[5] / x[9] + 0.6411 * x[5] / x[7] + 0.6769 * x[6] + 0.3955 * x[7] / x[
                            9] - 0.9245 * x[8] * x[9] + 0.1534 * x[8] - 0.9131 - 0.0011 / x[9] - 0.8223 / x[7] - 0.0448 / (
                                    x[6] * x[9]) - 0.8183 / (x[6] * x[7]) + 0.7027 / x[5] - 0.1283 * x[5] / x[3] - 0.0535 / x[
                            3] + 0.9879 / (x[3] * x[8]) + 0.8286 / (x[3] * x[6]) - 0.357 / x[2] + 0.0608 / (x[2] * x[7]) - 0.2658 / x[
                            1] - 0.0236 * x[2] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.9131, 'const'), ('mul', 'binary'), (-0.0011, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.357, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.8223, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.0535, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.4585, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.1534, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.7027, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.4927, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.6769, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.2658, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1572, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0448, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9245, 'const'), ('X_8', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0608, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5457, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.789, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8183, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8286, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6411, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0838, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7388, 'const'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9879, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3955, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1283, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0236, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6663, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_31(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_31'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8164 * x[0] * x[7] + 0.7859 * x[1] * x[9] - 0.3669 * x[1] + 0.0288 * x[2] * x[6] - 0.1991 * x[2] / x[3] + 0.4661 * \
                        x[4] + 0.4408 * x[4] / x[6] + 0.8232 * x[5] * x[8] - 0.959 * x[6] - 0.774 * x[7] - 0.9296 - 0.7397 / x[9] + 0.2762 / \
                        x[8] + 0.3577 * x[9] / x[6] - 0.0238 * x[6] / x[5] + 0.6787 / x[5] - 0.3308 * x[5] / x[3] + 0.4279 / x[
                            3] - 0.2787 / (x[3] * x[9]) + 0.0515 / x[2] - 0.9149 / (x[2] * x[7]) - 0.5724 / (x[2] * x[5]) + 0.5209 * x[5] / \
                        x[1] - 0.2588 / (x[1] * x[7]) - 0.545 / (x[1] * x[3]) + 0.2512 / x[0] - 0.3177 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.9296, 'const'), ('mul', 'binary'), (-0.774, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.3669, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.2512, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.2762, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.4279, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.7397, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.0515, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.6787, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.4661, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.959, 'const'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3308, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0238, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1991, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2787, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3177, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.545, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7859, 'const'),
                                            ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2588, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5724, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8164, 'const'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9149, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4408, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5209, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0288, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8232, 'const'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3577, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_48(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_48'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0547 * x[0] * x[1] + 0.1193 * x[0] * x[3] + 0.2971 * x[0] / x[8] - 0.208 * x[1] * x[2] - 0.7973 * x[1] * x[
            3] + 0.019 * x[1] * x[4] - 0.1729 * x[1] * x[5] - 0.4223 * x[1] * x[8] + 0.1033 * x[2] * x[8] - 0.2474 * x[2] + 0.4686 * x[
                            3] - 0.1921 * x[4] + 0.0487 * x[5] + 0.2172 * x[7] * x[8] + 0.5179 * x[7] - 0.6676 + 0.5228 / x[9] - 0.5652 / x[
                            8] - 0.4387 / x[6] - 0.3095 * x[8] / x[5] - 0.0368 * x[9] / x[5] + 0.2957 / (x[4] * x[9]) + 0.0346 / (
                                    x[4] * x[5]) - 0.519 * x[7] / x[3] - 0.3636 / x[1] + 0.8988 / x[0] - 0.2845 / (x[0] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.6676, 'const'), ('mul', 'binary'), (0.8988, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.4387, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.4686, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.3636, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.5228, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.5179, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.0487, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.2474, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.5652, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.1921, 'const'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1193, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.019, 'const'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2957, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0547, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2971, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0368, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4223, 'const'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1033, 'const'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.519, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3095, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2845, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2172, 'const'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7973, 'const'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0346, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1729, 'const'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.208, 'const'),
                                            ('X_1', 'var'), ('X_2', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_41(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_41'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.0051 * x[0] - 0.0902 * x[1] * x[2] - 0.592 * x[1] * x[3] - 0.5877 * x[3] * x[5] - 0.2258 * x[3] - 0.1996 * x[3] / \
                        x[7] - 0.1592 * x[4] * x[5] - 0.0002 * x[4] / x[8] + 0.8432 * x[5] - 0.1377 * x[8] + 0.2169 + 0.9955 / x[
                            9] - 0.8793 / x[7] + 0.5918 / (x[7] * x[9]) - 0.3101 * x[7] / x[6] + 0.427 / x[6] - 0.8389 / (
                                    x[5] * x[9]) - 0.2308 / x[4] + 0.0157 / (x[4] * x[6]) - 0.1459 * x[8] / x[3] + 0.8132 * x[4] / x[
                            2] - 0.6192 / x[2] - 0.4271 / (x[2] * x[6]) - 0.0651 / x[1] - 0.5169 / (x[1] * x[7]) + 0.0737 / (
                                    x[1] * x[4]) - 0.5833 * x[7] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.2169, 'const'), ('mul', 'binary'), (-0.2308, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.6192, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.9955, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.1377, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.2258, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.0051, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.427, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.0651, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.8793, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.8432, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5877, 'const'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5918, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1592, 'const'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1996, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8132, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0002, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1459, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0737, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.592, 'const'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0157, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0902, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4271, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3101, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5833, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8389, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5169, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_7(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_7'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.268 * x[0] * x[9] - 0.7218 * x[0] - 0.4176 * x[1] * x[5] + 0.677 * x[1] + 0.2282 * x[2] * x[5] + 0.059 * x[2] / \
                        x[8] + 0.1601 * x[3] / x[4] - 0.4121 * x[4] * x[5] + 0.5259 * x[4] * x[7] + 0.5403 * x[4] + 0.986 * x[
                            9] - 0.7712 - 0.8892 / x[8] - 0.5339 / x[7] + 0.5038 * x[9] / x[6] - 0.0901 / x[6] + 0.4589 / (
                                    x[6] * x[8]) + 0.6178 / x[5] - 0.0008 / (x[5] * x[7]) - 0.5668 / (x[4] * x[8]) + 0.9884 / x[3] - 0.262 / \
                        x[2] + 0.0113 * x[4] / x[1] - 0.4619 * x[6] / x[1] - 0.6992 / (x[1] * x[7]) - 0.5787 / (x[1] * x[3]) - 0.6027 * x[
                            3] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.7712, 'const'), ('mul', 'binary'), (0.986, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.677, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.9884, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.8892, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.5403, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.5339, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.0901, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.262, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.6178, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.7218, 'const'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.268, 'const'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4619, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4121, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5668, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6992, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1601, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4176, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0113, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5259, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2282, 'const'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5038, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5787, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.059, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4589, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6027, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0008, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_37(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_37'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0348 * x[0] * x[1] + 0.1191 * x[0] * x[4] + 0.9916 * x[0] - 0.1649 * x[1] * x[5] + 0.6791 * x[1] - 0.4443 * x[
            2] - 0.969 * x[3] / x[8] + 0.1925 * x[5] * x[7] + 0.3724 * x[5] / x[6] - 0.0454 * x[6] * x[9] - 0.8066 * x[6] / x[7] + 0.7408 * \
                        x[9] - 0.2928 + 0.9876 * x[9] / x[8] + 0.2533 / x[8] + 0.4683 * x[8] / x[7] - 0.5066 / x[7] - 0.449 / x[
                            6] - 0.8079 / x[5] + 0.7967 / (x[5] * x[9]) - 0.7589 / x[4] - 0.4914 * x[7] / x[3] - 0.1993 / x[3] + 0.282 * x[
                            8] / x[2] + 0.9329 / (x[2] * x[6]) + 0.5772 * x[2] / x[1] + 0.0943 * x[9] / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.2928, 'const'), ('mul', 'binary'), (0.7408, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.6791, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.2533, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.1993, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.9916, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.8079, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.4443, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.5066, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.449, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.7589, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1925, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9329, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7967, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8066, 'const'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1649, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0454, 'const'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0348, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9876, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0943, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3724, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.969, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1191, 'const'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.282, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5772, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4683, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4914, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_15(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_15'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4996 * x[0] - 0.3688 * x[1] * x[6] + 0.2928 * x[1] / x[4] + 0.78 * x[2] + 0.4563 * x[3] * x[6] + 0.7808 * x[4] / \
                        x[9] - 0.3294 * x[6] * x[8] - 0.3028 * x[6] - 0.3819 * x[7] - 0.7275 * x[7] / x[9] - 0.8611 * x[
                            8] - 0.6042 + 0.0782 / x[9] - 0.8384 / (x[6] * x[7]) - 0.0875 / x[5] - 0.7637 / x[4] + 0.0199 / (
                                    x[4] * x[5]) + 0.0309 / x[3] + 0.587 / (x[3] * x[7]) + 0.1639 * x[4] / x[2] + 0.213 / (
                                    x[2] * x[9]) + 0.9051 * x[8] / x[1] - 0.832 / x[1] + 0.5941 / (x[1] * x[3]) - 0.9005 * x[4] / x[
                            0] + 0.7768 * x[5] / x[0] - 0.8175 * x[8] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.6042, 'const'), ('mul', 'binary'), (-0.832, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.0782, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.3028, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.8611, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.3819, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.0875, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.0309, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.78, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.7637, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.4996, 'const'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3294, 'const'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9005, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7275, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3688, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.213, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8384, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0199, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8175, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5941, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2928, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1639, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4563, 'const'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7768, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.587, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7808, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9051, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_23(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_23'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.0585 * x[0] / x[2] - 0.4914 * x[1] - 0.4144 * x[1] / x[2] + 0.9085 * x[2] * x[5] - 0.5353 * x[3] / x[
            6] + 0.6066 * x[4] * x[5] + 0.0804 * x[4] - 0.9997 * x[5] + 0.6801 * x[5] / x[6] - 0.0785 * x[9] - 0.0111 - 0.2893 / x[
                            8] - 0.3962 / x[7] + 0.7292 / x[6] + 0.1069 / (x[6] * x[8]) - 0.0478 * x[9] / x[5] + 0.4128 * x[9] / x[
                            4] - 0.2481 * x[5] / x[3] - 0.3752 / x[3] - 0.0027 / x[2] + 0.5074 / (x[2] * x[3]) - 0.8296 / (
                                    x[1] * x[9]) + 0.3253 / (x[1] * x[6]) + 0.2511 / (x[1] * x[4]) - 0.0362 * x[4] / x[0] + 0.8357 * x[5] / \
                        x[0] + 0.6061 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.0111, 'const'), ('mul', 'binary'), (-0.3752, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.3962, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.4914, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.0027, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.9997, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.7292, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.0804, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.6061, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.0785, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.2893, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6066, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8357, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2481, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0478, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0585, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4144, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8296, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9085, 'const'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0362, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3253, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5353, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1069, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2511, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5074, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4128, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6801, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_30(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_30'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8337 * x[0] * x[1] + 0.6386 * x[0] + 0.5091 * x[0] / x[5] + 0.4276 * x[0] / x[2] - 0.7895 * x[1] - 0.0729 * x[2] * \
                        x[6] - 0.7985 * x[2] - 0.2367 * x[2] / x[9] - 0.7369 * x[3] + 0.8863 * x[4] - 0.6795 * x[5] - 0.0528 * x[5] / x[
                            6] + 0.7047 * x[6] * x[7] + 0.9514 * x[7] - 0.9681 * x[8] + 0.2177 * x[9] - 0.128 + 0.5177 * x[9] / x[
                            7] - 0.7199 / (x[7] * x[8]) - 0.6626 / x[6] - 0.6244 / (x[5] * x[8]) + 0.708 * x[9] / x[4] - 0.7484 * x[9] / x[
                            3] + 0.7697 / (x[3] * x[7]) + 0.0584 * x[8] / x[1] - 0.326 / (x[1] * x[5]) + 0.8823 * x[8] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.128, 'const'), ('mul', 'binary'), (0.6386, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.9681, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.7369, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.2177, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.7985, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.8863, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.6626, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.7895, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.6795, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.9514, 'const'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.708, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8823, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6244, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.326, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2367, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0584, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7199, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7697, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5091, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0528, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5177, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7047, 'const'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0729, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8337, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7484, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4276, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_28(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_28'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9558 * x[0] - 0.9946 * x[0] / x[2] + 0.3039 * x[2] / x[6] + 0.4435 * x[3] * x[7] - 0.4382 * x[3] * x[
            8] + 0.5536 * x[3] + 0.6447 * x[3] / x[5] - 0.3703 * x[4] + 0.198 * x[5] * x[8] + 0.6995 * x[6] * x[7] + 0.2481 * x[
                            6] - 0.9688 * x[8] + 0.8381 * x[9] + 0.1421 + 0.0013 / x[7] + 0.4142 / (x[7] * x[9]) + 0.2409 * x[7] / x[
                            5] + 0.0867 / x[5] - 0.0815 * x[7] / x[4] + 0.8495 * x[8] / x[4] + 0.1452 * x[6] / x[3] + 0.6342 / x[
                            2] - 0.0313 / (x[2] * x[3]) - 0.6838 / x[1] + 0.0176 / (x[1] * x[4]) + 0.6863 * x[3] / x[0] + 0.1095 / (
                                    x[0] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.1421, 'const'), ('mul', 'binary'), (0.5536, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.3703, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.9558, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.6342, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.0867, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.6838, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.9688, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.2481, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.8381, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.0013, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0815, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6995, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4142, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4435, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1452, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.198, 'const'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0176, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6863, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0313, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3039, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4382, 'const'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2409, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6447, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9946, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8495, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1095, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_17(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_17'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4215 * x[0] * x[1] - 0.9005 * x[0] / x[5] + 0.8326 * x[1] * x[7] - 0.4272 * x[1] * x[9] + 0.4015 * x[
            1] - 0.5737 * x[2] * x[5] + 0.4869 * x[3] * x[6] - 0.168 * x[3] - 0.6725 * x[3] / x[5] - 0.7418 * x[4] * x[8] - 0.8551 * x[
                            4] + 0.2575 * x[5] + 0.4333 * x[7] - 0.107 * x[9] - 0.9195 + 0.3879 / x[8] + 0.7916 / x[6] - 0.3373 / (
                                    x[6] * x[7]) + 0.5351 / (x[5] * x[9]) - 0.9021 / (x[5] * x[7]) + 0.7955 / (x[3] * x[4]) - 0.0181 / x[
                            2] - 0.3312 / (x[2] * x[4]) - 0.5804 * x[2] / x[1] - 0.221 * x[4] / x[1] - 0.1708 * x[8] / x[0] - 0.0309 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.9195, 'const'), ('mul', 'binary'), (-0.0309, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.107, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.4015, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.0181, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.4333, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.168, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.2575, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.7916, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.3879, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.8551, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.221, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4869, 'const'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7418, 'const'),
                                            ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5351, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1708, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4215, 'const'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4272, 'const'), ('X_1', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3312, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8326, 'const'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3373, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5804, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5737, 'const'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6725, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9005, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9021, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7955, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_43(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_43'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4543 * x[0] * x[1] + 0.9354 * x[1] + 0.6538 * x[1] / x[2] + 0.0844 * x[2] * x[9] + 0.1789 * x[2] + 0.4543 * x[
            3] * x[6] + 0.0339 * x[3] / x[9] - 0.9269 * x[4] / x[8] - 0.4917 * x[5] * x[9] - 0.132 * x[6] * x[8] - 0.3715 * x[6] * x[
                            9] + 0.9364 * x[6] + 0.6368 * x[8] + 0.4982 + 0.8827 / x[9] + 0.1712 / x[7] - 0.0884 / (x[6] * x[7]) + 0.6974 / \
                        x[5] + 0.613 / x[4] + 0.3672 / x[3] + 0.8646 / (x[3] * x[8]) - 0.5295 * x[6] / x[2] + 0.9669 * x[7] / x[
                            1] - 0.8263 / (x[1] * x[5]) + 0.9672 * x[4] / x[0] - 0.2711 / x[0] + 0.7344 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.4982, 'const'), ('mul', 'binary'), (0.9364, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.8827, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.6368, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.1789, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.9354, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.3672, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.6974, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.2711, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.1712, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.613, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8646, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0884, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4543, 'const'),
                                            ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0339, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8263, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7344, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9669, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9672, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4917, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4543, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5295, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9269, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6538, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3715, 'const'),
                                            ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.132, 'const'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0844, 'const'),
                                            ('X_2', 'var'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_2(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_2'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.2342 * x[0] * x[7] + 0.9498 * x[0] + 0.7305 * x[0] / x[5] - 0.1404 * x[1] * x[9] - 0.0285 * x[1] / x[2] + 0.3873 * \
                        x[2] * x[8] - 0.8548 * x[2] * x[9] + 0.1302 * x[2] + 0.1113 * x[3] * x[7] + 0.4581 * x[3] + 0.587 * x[4] * x[
                            8] - 0.7623 * x[5] + 0.739 * x[8] + 0.6358 - 0.6282 / x[9] - 0.0242 / (x[8] * x[9]) + 0.1259 / x[7] + 0.4932 / \
                        x[6] + 0.5613 * x[9] / x[5] + 0.3396 / (x[5] * x[7]) + 0.3538 * x[5] / x[4] - 0.4368 / x[4] - 0.905 * x[4] / x[
                            2] - 0.94 * x[6] / x[1] - 0.0057 / x[1] + 0.5899 * x[4] / x[0] - 0.8879 / (x[0] * x[6])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.6358, 'const'), ('mul', 'binary'), (0.1302, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.9498, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.6282, 'const'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.4368, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.7623, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.0057, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.1259, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.4581, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.739, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.4932, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7305, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.94, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2342, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.587, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5899, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0285, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1113, 'const'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3538, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5613, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8548, 'const'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0242, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8879, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1404, 'const'),
                                            ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.905, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3396, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3873, 'const'), ('X_2', 'var'), ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_4(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_4'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.996 * x[0] * x[2] + 0.5705 * x[0] * x[9] - 0.5531 * x[0] + 0.3863 * x[1] - 0.0505 * x[2] + 0.7503 * x[3] * x[
            6] + 0.3049 * x[4] * x[8] + 0.6043 * x[6] + 0.8666 * x[7] / x[8] + 0.3133 + 0.0578 / x[9] - 0.7621 / x[8] - 0.5999 / x[
                            7] - 0.6611 * x[8] / x[6] - 0.176 * x[6] / x[5] + 0.4118 / x[5] - 0.9393 / (x[5] * x[8]) + 0.1731 / (
                                    x[5] * x[7]) + 0.5946 / x[4] + 0.4768 / x[3] + 0.5835 / (x[3] * x[9]) - 0.4114 * x[4] / x[2] + 0.3734 * \
                        x[5] / x[2] - 0.5018 * x[7] / x[2] - 0.8672 / (x[1] * x[7]) - 0.6633 / (x[1] * x[5]) - 0.7846 / (x[1] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.3133, 'const'), ('mul', 'binary'), (0.5946, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.0578, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.7621, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.6043, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.3863, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.5999, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.4118, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.4768, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.0505, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.5531, 'const'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5835, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7503, 'const'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6633, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4114, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5705, 'const'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.996, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.176, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5018, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7846, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8666, 'const'),
                                            ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8672, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3734, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3049, 'const'), ('X_4', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6611, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1731, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9393, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_45(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_45'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.156 * x[0] - 0.563 * x[0] / x[2] - 0.5488 * x[1] * x[3] + 0.5082 * x[1] - 0.146 * x[1] / x[7] - 0.68 * x[2] * x[
            4] - 0.8552 * x[2] * x[5] + 0.5407 * x[2] - 0.6631 * x[3] * x[5] - 0.1514 * x[3] + 0.3643 * x[4] - 0.5081 * x[4] / x[
                            7] - 0.4762 * x[9] - 0.1919 + 0.4344 / x[8] - 0.1433 / x[7] - 0.16 / x[6] + 0.4508 / (x[6] * x[7]) - 0.7767 / x[
                            5] + 0.0982 / (x[5] * x[9]) - 0.128 / (x[4] * x[9]) - 0.9481 / (x[4] * x[8]) - 0.356 * x[8] / x[3] + 0.8219 / (
                                    x[1] * x[9]) + 0.3994 * x[3] / x[0] + 0.4831 * x[4] / x[0] + 0.3448 * x[8] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.1919, 'const'), ('mul', 'binary'), (0.5082, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.4344, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.1433, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.3643, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.1514, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.7767, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.156, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.4762, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.5407, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.16, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0982, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5488, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.563, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6631, 'const'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5081, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3994, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.68, 'const'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4508, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.146, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3448, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.128, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9481, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4831, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8552, 'const'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.356, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8219, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_49(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_49'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4091 * x[0] * x[1] + 0.2808 * x[0] / x[3] - 0.9535 * x[1] / x[8] + 0.9687 * x[1] / x[3] - 0.781 * x[2] + 0.1982 * \
                        x[2] / x[8] + 0.4791 * x[3] * x[7] - 0.0883 * x[3] + 0.2104 * x[3] / x[8] - 0.1447 * x[4] * x[7] + 0.379 * x[6] * x[
                            7] - 0.9986 * x[6] * x[9] + 0.1233 * x[7] - 0.6834 - 0.8593 / x[9] - 0.5462 / x[8] + 0.6249 / x[6] + 0.219 / x[
                            5] + 0.6495 / x[4] - 0.6861 / (x[4] * x[8]) + 0.7311 * x[6] / x[3] + 0.6503 / (x[3] * x[5]) + 0.316 * x[9] / x[
                            2] + 0.1935 / x[1] + 0.0402 / x[0] + 0.2155 / (x[0] * x[4]) - 0.4289 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.6834, 'const'), ('mul', 'binary'), (0.6495, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.781, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.0883, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.8593, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.6249, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.0402, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.5462, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.219, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.1233, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.1935, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4289, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2808, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9535, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2155, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1982, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6861, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1447, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9687, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9986, 'const'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.379, 'const'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6503, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7311, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.316, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2104, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4791, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4091, 'const'), ('X_0', 'var'), ('X_1', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_11(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_11'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.2149 * x[0] * x[4] - 0.867 * x[1] * x[5] - 0.5923 * x[1] - 0.5654 * x[1] / x[9] + 0.0902 * x[1] / x[4] - 0.5905 * \
                        x[2] * x[6] + 0.223 * x[2] * x[7] - 0.7655 * x[2] + 0.5157 * x[3] + 0.957 * x[3] / x[8] + 0.0579 * x[3] / x[
                            4] + 0.2183 * x[4] - 0.2793 * x[5] * x[7] - 0.4922 * x[6] * x[8] - 0.9695 * x[8] - 0.547 + 0.0868 / x[
                            9] - 0.6725 / x[7] + 0.0339 / x[6] - 0.3578 / x[5] + 0.1723 / (x[4] * x[8]) - 0.7604 / (
                                    x[3] * x[6]) - 0.7938 / (x[2] * x[4]) - 0.0794 * x[8] / x[1] - 0.1959 * x[2] / x[0] + 0.2316 / x[
                            0] + 0.7912 / (x[0] * x[9])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.547, 'const'), ('mul', 'binary'), (0.2316, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.5923, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.3578, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.9695, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.0339, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.2183, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.6725, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.7655, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.5157, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.0868, 'const'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7912, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4922, 'const'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5905, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.867, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0579, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0794, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2149, 'const'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1723, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.223, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5654, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2793, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1959, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.957, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0902, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7938, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7604, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_10(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_10'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.978 * x[0] - 0.2178 * x[0] / x[7] + 0.8423 * x[1] * x[2] - 0.4935 * x[1] / x[9] + 0.8194 * x[2] + 0.103 * x[
            4] - 0.1869 * x[5] + 0.7205 * x[5] / x[9] - 0.6176 * x[6] + 0.7651 * x[7] * x[8] + 0.3841 * x[7] / x[9] - 0.5854 - 0.002 / x[
                            9] - 0.9807 / x[8] + 0.7072 / x[7] - 0.2457 * x[8] / x[5] - 0.6181 * x[5] / x[4] - 0.4908 * x[7] / x[
                            4] + 0.6547 / (x[4] * x[6]) - 0.5391 * x[6] / x[3] + 0.1072 / x[3] + 0.8346 / (x[3] * x[4]) - 0.8311 * x[4] / x[
                            2] - 0.9585 * x[8] / x[2] - 0.7004 * x[3] / x[1] + 0.5523 / x[1] - 0.6549 * x[4] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.5854, 'const'), ('mul', 'binary'), (0.8194, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.6176, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.7072, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.103, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.5523, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.1869, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.978, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.002, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.1072, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.9807, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7651, 'const'),
                                            ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2457, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4935, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2178, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7205, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4908, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6547, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8423, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8311, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9585, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6549, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6181, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7004, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8346, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3841, 'const'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5391, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_1(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_1'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.5747 * x[0] / x[3] - 0.7912 * x[1] * x[3] - 0.3867 * x[1] + 0.0454 * x[1] / x[9] + 0.9357 * x[1] / x[
            6] + 0.6937 * x[1] / x[4] + 0.7786 * x[2] * x[8] + 0.1151 * x[2] + 0.4143 * x[3] * x[6] + 0.7133 * x[3] - 0.9919 * x[4] * x[
                            6] - 0.85 * x[4] - 0.6787 * x[5] * x[6] - 0.8059 * x[5] / x[7] + 0.9863 * x[9] - 0.4735 + 0.9383 * x[9] / x[
                            8] + 0.8217 / x[8] - 0.0724 / x[7] - 0.6285 / x[6] + 0.2572 / x[5] + 0.8658 * x[5] / x[4] + 0.2009 / (
                                    x[4] * x[7]) + 0.9802 / (x[2] * x[9]) + 0.6831 * x[2] / x[0] - 0.3191 / x[0] - 0.6802 / (x[0] * x[9])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.4735, 'const'), ('mul', 'binary'), (-0.0724, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.3191, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.1151, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.3867, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.7133, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.6285, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.8217, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.9863, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.85, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.2572, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6831, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7912, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4143, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9802, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0454, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9383, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6787, 'const'),
                                            ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6937, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8059, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9919, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6802, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2009, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7786, 'const'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5747, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8658, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9357, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_40(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_40'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2276 * x[1] * x[2] + 0.7161 * x[2] * x[7] + 0.6003 * x[2] * x[9] + 0.2271 * x[2] - 0.688 * x[3] * x[7] + 0.6454 * \
                        x[3] * x[8] + 0.463 * x[3] + 0.701 * x[4] - 0.8114 * x[6] / x[8] - 0.1236 * x[6] / x[7] - 0.9186 * x[
                            7] + 0.9482 - 0.7411 / x[9] + 0.459 / x[8] + 0.9976 / x[6] + 0.6283 / (x[6] * x[9]) + 0.3699 * x[7] / x[
                            5] - 0.3879 / x[5] + 0.4845 / (x[5] * x[9]) + 0.5776 * x[6] / x[3] - 0.7744 / (x[2] * x[6]) - 0.3137 * x[6] / x[
                            1] - 0.9922 * x[9] / x[1] + 0.6372 / x[1] - 0.9898 / (x[1] * x[3]) + 0.5027 * x[4] / x[0] + 0.0838 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.9482, 'const'), ('mul', 'binary'), (0.459, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.3879, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.7411, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.9186, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.6372, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.701, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.463, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.2271, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.9976, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.0838, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3699, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6283, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6003, 'const'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.688, 'const'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5027, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7161, 'const'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9922, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7744, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1236, 'const'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3137, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9898, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8114, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5776, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4845, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6454, 'const'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2276, 'const'), ('X_1', 'var'), ('X_2', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_29(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_29'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.493 * x[0] * x[2] + 0.2891 * x[0] + 0.246 * x[0] / x[9] + 0.0987 * x[1] * x[4] - 0.87 * x[1] + 0.0355 * x[1] / x[
            7] - 0.0334 * x[2] * x[4] + 0.619 * x[2] / x[8] + 0.5643 * x[3] * x[9] + 0.3936 * x[3] + 0.1324 * x[4] / x[9] - 0.5131 * x[5] * \
                        x[8] + 0.0445 * x[5] - 0.739 * x[5] / x[9] + 0.3795 * x[6] * x[7] - 0.1545 * x[7] + 0.8248 * x[
                            9] - 0.3903 + 0.8262 / x[8] - 0.2835 * x[9] / x[7] + 0.5465 / x[6] + 0.7513 / x[4] + 0.6947 / (
                                    x[4] * x[7]) + 0.9899 * x[3] / x[2] + 0.1348 / x[2] - 0.5026 * x[6] / x[1] - 0.6876 / (x[0] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.3903, 'const'), ('mul', 'binary'), (-0.1545, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.1348, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.3936, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.2891, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.87, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.7513, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.0445, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.5465, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.8248, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.8262, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5131, 'const'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5026, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6876, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0355, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.493, 'const'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.739, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3795, 'const'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6947, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5643, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9899, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.619, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0987, 'const'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2835, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1324, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0334, 'const'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.246, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_22(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_22'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.976 * x[0] / x[9] - 0.3106 * x[0] / x[5] + 0.1673 * x[1] - 0.045 * x[1] / x[3] - 0.481 * x[3] - 0.9607 * x[
            4] + 0.621 * x[4] / x[6] + 0.3838 * x[4] / x[5] + 0.5951 * x[5] * x[9] - 0.2496 * x[5] - 0.3071 * x[6] * x[8] - 0.3849 * x[
                            9] + 0.7913 + 0.942 / x[8] - 0.01 / x[7] + 0.599 / x[6] + 0.3806 * x[6] / x[5] + 0.0093 * x[7] / x[
                            5] - 0.2162 / (x[4] * x[9]) + 0.8236 / (x[4] * x[7]) - 0.256 * x[7] / x[3] - 0.4901 / x[2] - 0.5195 / (
                                    x[1] * x[7]) + 0.9355 / (x[1] * x[5]) - 0.6404 * x[1] / x[0] + 0.8832 * x[4] / x[0] + 0.8136 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.7913, 'const'), ('mul', 'binary'), (0.942, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.2496, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.599, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.1673, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.01, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.9607, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.8136, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.3849, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.481, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.4901, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3071, 'const'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.976, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2162, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3838, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.621, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3806, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8236, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5951, 'const'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8832, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0093, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6404, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3106, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.045, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.256, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9355, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5195, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_27(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_27'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7043 * x[0] / x[6] - 0.3713 * x[0] / x[2] + 0.6145 * x[0] / x[1] + 0.0744 * x[1] - 0.1108 * x[3] / x[
            4] - 0.6987 * x[4] / x[9] + 0.3242 * x[5] - 0.8214 * x[5] / x[6] + 0.356 * x[6] + 0.8237 * x[7] + 0.728 * x[7] / x[
                            9] + 0.0973 + 0.0425 / x[9] - 0.9865 / x[8] + 0.9149 * x[6] / x[4] + 0.3323 / x[4] + 0.0253 / (
                                    x[4] * x[5]) - 0.2653 * x[9] / x[3] + 0.2125 / x[3] + 0.3851 / (x[3] * x[6]) - 0.9684 * x[6] / x[
                            2] - 0.4458 * x[7] / x[2] + 0.2777 / x[2] + 0.7867 / (x[2] * x[9]) - 0.1707 / (x[1] * x[8]) - 0.6831 / (
                                    x[1] * x[4]) + 0.8818 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.0973, 'const'), ('mul', 'binary'), (0.2125, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.3242, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.3323, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.8818, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.9865, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.0744, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.0425, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.356, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.2777, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.8237, 'const'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7867, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6987, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3851, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4458, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3713, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8214, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2653, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9149, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6831, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7043, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6145, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0253, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.728, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1108, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1707, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9684, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_34(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_34'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9088 * x[0] * x[1] + 0.1508 * x[0] * x[2] + 0.1073 * x[1] - 0.2767 * x[3] / x[8] + 0.4401 * x[4] / x[
            5] + 0.3072 * x[5] * x[7] + 0.7239 * x[5] * x[9] + 0.1224 * x[5] - 0.3011 * x[6] + 0.8511 * x[7] * x[8] - 0.3198 * x[
                            7] + 0.5977 - 0.386 / x[9] + 0.3037 * x[9] / x[8] + 0.9049 / x[8] - 0.38 / (x[6] * x[8]) + 0.1213 / x[
                            4] + 0.5033 * x[5] / x[3] - 0.4623 / x[3] - 0.5439 / (x[3] * x[7]) - 0.8368 * x[4] / x[2] - 0.0575 / x[
                            2] - 0.6475 * x[2] / x[1] - 0.586 / (x[1] * x[5]) + 0.2728 / (x[1] * x[4]) + 0.3422 / x[0] + 0.1518 / (
                                    x[0] * x[8])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.5977, 'const'), ('mul', 'binary'), (0.1224, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.3198, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.386, 'const'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.3011, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.3422, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.0575, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.1073, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.1213, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.9049, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.4623, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.38, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.586, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4401, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3072, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1518, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2728, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8511, 'const'),
                                            ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8368, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7239, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6475, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5439, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2767, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5033, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9088, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1508, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3037, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_16(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_16'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.466 * x[0] * x[3] - 0.5846 * x[0] + 0.2199 * x[1] * x[3] + 0.8431 * x[1] / x[4] + 0.1122 * x[2] + 0.7614 * x[3] * \
                        x[9] + 0.2537 * x[3] / x[5] + 0.0619 * x[4] * x[6] + 0.9403 * x[4] / x[5] + 0.4651 * x[5] / x[8] + 0.9387 * x[6] / \
                        x[8] - 0.5735 * x[7] * x[8] + 0.4773 * x[9] - 0.3798 + 0.7127 * x[9] / x[8] - 0.836 / x[8] - 0.4031 / x[
                            7] - 0.0404 / x[6] + 0.2053 / x[5] + 0.4417 / x[4] - 0.3592 / (x[4] * x[9]) + 0.8488 / x[3] - 0.7161 * x[6] / x[
                            2] - 0.0624 / (x[2] * x[9]) - 0.76 * x[5] / x[1] + 0.873 / x[1] + 0.7036 * x[2] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.3798, 'const'), ('mul', 'binary'), (-0.0404, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.4031, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.873, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.8488, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.836, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.4773, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.1122, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.5846, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.2053, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.4417, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7036, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.466, 'const'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2199, 'const'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0624, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9387, 'const'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7127, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3592, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0619, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.76, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7161, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8431, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5735, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7614, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9403, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2537, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4651, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_13(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_13'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.543 * x[0] * x[7] + 0.3916 * x[0] / x[2] - 0.808 * x[1] * x[8] + 0.769 * x[1] - 0.1001 * x[1] / x[7] + 0.692 * x[
            1] / x[6] + 0.1231 * x[1] / x[4] - 0.3101 * x[2] - 0.2404 * x[2] / x[7] - 0.7789 * x[3] + 0.3956 * x[4] + 0.3574 * x[5] * x[
                            7] + 0.4292 * x[5] + 0.3164 * x[6] * x[7] - 0.767 * x[6] + 0.4718 * x[8] + 0.4358 + 0.5133 / x[9] + 0.8076 / x[
                            7] + 0.6442 / (x[7] * x[9]) + 0.3578 / (x[7] * x[8]) - 0.1884 * x[9] / x[4] + 0.4995 / (
                                    x[4] * x[7]) - 0.7587 / (x[3] * x[6]) + 0.8639 / (x[2] * x[4]) - 0.6159 / (x[1] * x[3]) - 0.8091 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.4358, 'const'), ('mul', 'binary'), (-0.8091, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.4292, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.3956, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.767, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.3101, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.8076, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.5133, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.7789, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.769, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.4718, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.543, 'const'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2404, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8639, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.808, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3916, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3574, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1884, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4995, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.692, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3164, 'const'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7587, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6159, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6442, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1231, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1001, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3578, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_47(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_47'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.3156 * x[0] * x[5] + 0.1839 * x[1] * x[4] - 0.902 * x[1] / x[6] + 0.502 * x[1] / x[2] + 0.3259 * x[2] * x[
            7] + 0.0993 * x[2] / x[8] + 0.7825 * x[3] / x[7] + 0.818 * x[4] * x[8] - 0.709 * x[5] - 0.7298 * x[6] + 0.0862 * x[
                            7] + 0.5505 - 0.8039 / x[9] + 0.9572 / x[8] + 0.5567 / (x[6] * x[7]) - 0.7671 * x[9] / x[5] - 0.6333 / x[
                            4] - 0.6694 * x[6] / x[3] + 0.1619 / x[3] + 0.8646 / x[2] + 0.3575 / (x[2] * x[4]) + 0.6321 / x[1] - 0.2031 / (
                                    x[1] * x[7]) + 0.003 * x[1] / x[0] - 0.749 / x[0] - 0.4901 / (x[0] * x[9]) - 0.729 / (x[0] * x[8])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.5505, 'const'), ('mul', 'binary'), (-0.709, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.7298, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.0862, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.8039, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.8646, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.749, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.9572, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.6321, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.6333, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.1619, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2031, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7671, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.003, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.729, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.902, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.818, 'const'), ('X_4', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3259, 'const'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.502, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3575, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5567, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4901, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6694, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7825, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1839, 'const'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3156, 'const'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0993, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_36(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_36'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7208 * x[0] * x[7] + 0.5478 * x[0] * x[9] + 0.1286 * x[2] * x[3] + 0.1246 * x[3] + 0.3945 * x[4] * x[5] - 0.609 * \
                        x[4] * x[6] - 0.0091 * x[4] + 0.0396 * x[4] / x[8] - 0.1745 * x[7] + 0.3735 * x[8] + 0.9117 * x[
                            9] + 0.2371 + 0.7653 / (x[7] * x[9]) - 0.7118 / x[6] + 0.5974 / (x[6] * x[8]) + 0.0295 / x[5] - 0.4647 / (
                                    x[4] * x[7]) + 0.5734 / (x[3] * x[8]) + 0.1771 * x[9] / x[2] - 0.931 / x[2] + 0.5134 * x[4] / x[
                            1] - 0.4607 * x[5] / x[1] - 0.9905 * x[9] / x[1] - 0.1194 / x[1] + 0.6115 / (x[1] * x[7]) + 0.2032 * x[6] / x[
                            0] - 0.2731 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.2371, 'const'), ('mul', 'binary'), (0.0295, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.931, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.2731, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.1745, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.3735, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.1246, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.0091, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.1194, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.7118, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.9117, 'const'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5478, 'const'),
                                            ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2032, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1286, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7208, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6115, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4607, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5134, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7653, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3945, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5734, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.609, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0396, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4647, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5974, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1771, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9905, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_44(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_44'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2026 * x[0] * x[6] - 0.1923 * x[0] + 0.9744 * x[0] / x[8] + 0.7519 * x[1] + 0.8001 * x[1] / x[9] + 0.653 * x[1] / \
                        x[3] + 0.5705 * x[3] - 0.3051 * x[3] / x[8] + 0.1264 * x[5] * x[7] - 0.0165 * x[5] + 0.9622 * x[5] / x[9] - 0.0547 * \
                        x[8] - 0.5398 * x[8] / x[9] + 0.9414 * x[9] - 0.6838 - 0.7732 / x[7] - 0.5131 / (x[7] * x[8]) - 0.4031 / x[
                            6] - 0.5012 / (x[6] * x[9]) - 0.7666 * x[7] / x[4] + 0.6379 * x[9] / x[4] - 0.2725 / x[4] + 0.7482 * x[6] / x[
                            3] + 0.8887 / x[2] + 0.2575 / (x[2] * x[3]) - 0.3101 * x[8] / x[1] - 0.9279 / (x[0] * x[9])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.6838, 'const'), ('mul', 'binary'), (-0.1923, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.4031, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.9414, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.0165, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.8887, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.7519, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.5705, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.2725, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.7732, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.0547, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9622, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9279, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1264, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2026, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5398, 'const'), ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9744, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3101, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8001, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.653, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5012, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6379, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3051, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5131, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7666, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2575, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7482, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_6(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_6'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.5725 * x[0] * x[4] - 0.4138 * x[1] * x[2] + 0.1639 * x[1] * x[5] + 0.135 * x[1] / x[7] - 0.0858 * x[2] * x[
            6] + 0.5059 * x[2] - 0.2384 * x[2] / x[4] + 0.104 * x[3] - 0.6131 * x[4] * x[5] - 0.7858 * x[5] - 0.4037 * x[5] / x[
                            8] + 0.9077 * x[6] / x[8] - 0.5265 * x[7] + 0.9757 + 0.8688 / x[9] + 0.029 * x[9] / x[8] - 0.193 / x[
                            8] + 0.2646 / x[6] + 0.9116 / x[4] - 0.0385 * x[5] / x[2] - 0.5332 / (x[2] * x[3]) - 0.4615 * x[4] / x[
                            1] + 0.2768 / x[1] - 0.0853 / (x[1] * x[6]) - 0.3565 * x[8] / x[0] - 0.4546 / x[0] + 0.2437 / (x[0] * x[9])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.9757, 'const'), ('mul', 'binary'), (0.8688, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.4546, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.9116, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.193, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.2646, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.2768, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.5265, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.7858, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.5059, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.104, 'const'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9077, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5725, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2384, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0385, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6131, 'const'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.135, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4138, 'const'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3565, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.029, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1639, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0858, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4037, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0853, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5332, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2437, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4615, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_4', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_18(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_18'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.3163 * x[0] * x[1] - 0.8087 * x[0] * x[6] - 0.1216 * x[1] + 0.5209 * x[2] * x[8] + 0.0392 * x[3] - 0.1775 * x[
            3] / x[6] - 0.0991 * x[6] + 0.4972 * x[8] + 0.3909 - 0.3969 / x[9] + 0.9443 * x[9] / x[7] + 0.3118 / x[7] - 0.2907 * x[8] / x[
                            6] + 0.8706 * x[6] / x[5] - 0.3112 / x[5] + 0.8242 / (x[5] * x[7]) - 0.749 * x[8] / x[4] - 0.1912 * x[9] / x[
                            4] - 0.6056 / x[4] + 0.1031 / (x[4] * x[5]) - 0.9925 * x[4] / x[3] - 0.0805 * x[5] / x[2] + 0.9466 / x[
                            2] - 0.5729 / (x[1] * x[7]) - 0.8246 / (x[1] * x[2]) - 0.4318 / x[0] - 0.137 / (x[0] * x[9])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.3909, 'const'), ('mul', 'binary'), (-0.3969, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.9466, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.6056, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.3118, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.4318, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.1216, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.0392, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.3112, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.4972, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.0991, 'const'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9443, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2907, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1912, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.137, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1031, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0805, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5209, 'const'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3163, 'const'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.749, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8706, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1775, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9925, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8242, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8087, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8246, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5729, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_3(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_3'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9405 * x[0] * x[7] + 0.3022 * x[1] * x[5] + 0.2829 * x[1] / x[6] + 0.3123 * x[1] / x[4] + 0.0076 * x[2] + 0.8923 * \
                        x[2] / x[3] - 0.7725 * x[3] - 0.8094 * x[4] / x[6] + 0.874 * x[6] - 0.0116 * x[6] / x[7] - 0.2561 * x[
                            7] + 0.2095 - 0.5351 / x[9] + 0.4535 / x[8] - 0.2765 * x[9] / x[7] - 0.2253 / x[5] + 0.7602 / (
                                    x[5] * x[9]) - 0.9898 / x[4] - 0.5517 / (x[4] * x[8]) + 0.0191 * x[4] / x[3] + 0.2328 * x[5] / x[
                            3] - 0.1657 / (x[3] * x[9]) + 0.1908 * x[2] / x[1] - 0.7696 * x[8] / x[1] + 0.3218 / x[1] - 0.2301 / (
                                    x[1] * x[9]) - 0.4106 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.2095, 'const'), ('mul', 'binary'), (-0.7725, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.874, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.9898, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.3218, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.2561, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.5351, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.4106, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.2253, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.0076, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.4535, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7602, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2829, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3022, 'const'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0116, 'const'), ('X_6', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8923, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5517, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0191, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2765, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2328, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3123, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2301, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1908, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1657, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9405, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8094, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7696, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_24(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_24'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.3662 * x[0] / x[7] + 0.6287 * x[0] / x[1] - 0.9411 * x[1] * x[3] + 0.7479 * x[1] * x[5] + 0.2721 * x[2] / x[
            7] - 0.1284 * x[4] / x[7] + 0.206 * x[6] * x[7] + 0.1968 * x[6] - 0.3387 * x[6] / x[9] - 0.0943 + 0.2314 / x[9] - 0.9379 / x[
                            8] - 0.5418 * x[8] / x[7] + 0.6781 * x[9] / x[7] + 0.9479 / x[7] - 0.4698 / x[5] + 0.7967 * x[5] / x[
                            4] - 0.7557 / x[4] - 0.0721 / x[3] - 0.1443 * x[3] / x[2] - 0.1484 * x[5] / x[2] - 0.5281 / x[2] + 0.739 / x[
                            1] - 0.6561 / (x[1] * x[9]) + 0.5238 / (x[1] * x[4]) - 0.6824 / x[0] - 0.8195 / (x[0] * x[8])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.0943, 'const'), ('mul', 'binary'), (-0.7557, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.5281, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.739, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.9379, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.6824, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.0721, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.4698, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.9479, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.2314, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.1968, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3387, 'const'), ('X_6', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2721, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1284, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9411, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7479, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5418, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3662, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7967, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5238, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1484, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6287, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8195, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6781, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6561, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1443, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.206, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_12(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_12'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8966 * x[0] + 0.1501 * x[0] / x[5] + 0.0664 * x[1] / x[5] + 0.2508 * x[3] + 0.0106 * x[3] / x[6] - 0.3725 * x[3] / \
                        x[5] + 0.5791 * x[5] - 0.0987 * x[6] - 0.3646 * x[6] / x[9] - 0.8918 * x[8] + 0.9754 * x[9] + 0.4306 - 0.1482 / x[
                            7] - 0.4204 / (x[7] * x[9]) + 0.6348 / (x[7] * x[8]) - 0.0924 * x[8] / x[6] - 0.3861 * x[6] / x[5] + 0.9593 * x[
                            8] / x[5] - 0.5683 / x[4] - 0.2571 / (x[3] * x[9]) - 0.6989 * x[4] / x[2] + 0.6889 * x[7] / x[2] + 0.5659 * x[
                            8] / x[2] + 0.8017 / x[2] + 0.6764 / x[1] - 0.8766 * x[1] / x[0] + 0.3451 * x[4] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.4306, 'const'), ('mul', 'binary'), (-0.1482, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.6764, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.5683, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.8966, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.8017, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.0987, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.5791, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.2508, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.9754, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.8918, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4204, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3646, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5659, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3451, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3725, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3861, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0106, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9593, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0924, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6989, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1501, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2571, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8766, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0664, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6348, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6889, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_25(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_25'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.3248 * x[0] * x[8] - 0.0116 * x[0] - 0.2966 * x[1] * x[3] - 0.3208 * x[2] + 0.8631 * x[3] * x[9] + 0.3585 * x[
            3] + 0.801 * x[3] / x[4] + 0.6638 * x[4] / x[5] + 0.2636 * x[5] * x[9] + 0.0412 * x[6] - 0.3869 * x[6] / x[7] - 0.6081 * x[
                            7] + 0.2414 * x[8] - 0.5646 * x[9] - 0.9592 + 0.4068 * x[9] / x[8] - 0.9845 / x[5] - 0.115 / (
                                    x[5] * x[8]) + 0.1191 / x[4] + 0.85 / (x[4] * x[9]) + 0.5777 * x[5] / x[2] + 0.5047 / x[1] + 0.5607 / (
                                    x[1] * x[9]) + 0.9635 / (x[1] * x[4]) - 0.6473 * x[4] / x[0] + 0.2138 / (x[0] * x[7]) + 0.3087 / (
                                    x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.9592, 'const'), ('mul', 'binary'), (-0.9845, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.6081, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.3585, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.1191, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.5646, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.2414, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.3208, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.5047, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.0116, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.0412, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4068, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3869, 'const'), ('X_6', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5607, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8631, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.801, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2636, 'const'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2966, 'const'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5777, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.115, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9635, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.85, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2138, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3248, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6638, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3087, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6473, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_21(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_21'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1095 * x[0] * x[6] + 0.0585 * x[0] + 0.6189 * x[0] / x[7] + 0.9421 * x[0] / x[4] - 0.4451 * x[0] / x[
            3] - 0.0267 * x[2] * x[3] + 0.016 * x[2] * x[9] + 0.096 * x[3] * x[4] + 0.8924 * x[3] - 0.3317 * x[3] / x[6] + 0.9673 * x[
                            5] + 0.399 * x[7] + 0.7916 * x[8] - 0.2373 + 0.0805 / x[9] - 0.963 / (x[8] * x[9]) + 0.9456 / x[6] - 0.9754 / (
                                    x[6] * x[7]) - 0.9302 * x[7] / x[5] + 0.0476 / x[4] + 0.7487 / (x[4] * x[9]) + 0.5118 / (
                                    x[4] * x[8]) - 0.5361 / (x[3] * x[5]) - 0.7334 / x[2] - 0.1674 / (x[2] * x[4]) - 0.3931 / x[
                            1] - 0.2723 / (x[1] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.2373, 'const'), ('mul', 'binary'), (0.399, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.3931, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.0476, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.8924, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.7916, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.7334, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.9673, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.0805, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.0585, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.9456, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5118, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5361, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.963, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4451, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9421, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1674, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.096, 'const'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1095, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7487, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0267, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2723, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.016, 'const'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3317, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9302, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9754, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6189, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_26(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_26'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1859 * x[0] * x[6] - 0.2126 * x[0] - 0.5686 * x[2] * x[3] + 0.402 * x[2] - 0.2107 * x[3] / x[9] - 0.3894 * x[4] * \
                        x[5] + 0.3129 * x[6] * x[7] - 0.0812 * x[7] * x[9] - 0.2798 * x[7] + 0.159 - 0.334 / x[9] - 0.155 / x[8] + 0.9201 * \
                        x[9] / x[6] - 0.9354 / x[6] - 0.1959 * x[7] / x[5] + 0.2128 / x[5] - 0.1013 * x[7] / x[4] + 0.3746 / x[4] + 0.0495 * \
                        x[8] / x[3] + 0.0248 / x[3] - 0.2592 / (x[3] * x[5]) - 0.8092 / (x[2] * x[9]) + 0.7723 / (x[2] * x[5]) - 0.1729 * x[
                            5] / x[1] + 0.5275 / x[1] - 0.6213 / (x[0] * x[9]) - 0.7499 / (x[0] * x[8])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.159, 'const'), ('mul', 'binary'), (0.3746, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.0248, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.334, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.2128, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.2126, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.155, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.2798, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.5275, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.402, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.9354, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5686, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6213, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1013, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1729, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2107, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3894, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3129, 'const'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1959, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7723, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0812, 'const'),
                                            ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7499, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0495, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8092, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9201, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1859, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2592, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_39(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_39'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4616 * x[0] * x[6] + 0.6573 * x[0] + 0.0722 * x[1] / x[5] - 0.8832 * x[2] * x[4] + 0.0445 * x[2] - 0.0531 * x[
            2] / x[7] - 0.2345 * x[3] * x[6] + 0.4105 * x[3] - 0.4029 * x[4] + 0.6797 * x[5] / x[9] + 0.2881 * x[5] / x[8] + 0.4808 * x[
                            6] - 0.8694 * x[7] + 0.2534 * x[8] + 0.7272 - 0.204 / x[9] - 0.6711 * x[6] / x[5] + 0.3691 / x[5] - 0.4697 * x[
                            5] / x[4] - 0.0003 / (x[4] * x[9]) - 0.761 / (x[2] * x[9]) + 0.0796 / (x[2] * x[8]) + 0.4228 / x[1] + 0.2107 / (
                                    x[1] * x[9]) - 0.1973 / (x[1] * x[6]) + 0.0436 * x[3] / x[0] + 0.5554 * x[8] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.7272, 'const'), ('mul', 'binary'), (0.4105, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.8694, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.6573, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.4808, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.2534, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.4029, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.4228, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.204, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.3691, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.0445, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0531, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5554, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6797, 'const'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8832, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0003, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0722, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2107, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1973, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2345, 'const'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4616, 'const'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2881, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6711, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.761, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0796, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4697, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0436, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_3', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_19(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_19'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.1508 * x[0] * x[4] + 0.8727 * x[0] * x[6] - 0.7515 * x[0] - 0.5793 * x[1] * x[6] + 0.8891 * x[1] / x[4] - 0.4735 * \
                        x[2] + 0.7846 * x[2] / x[9] + 0.6516 * x[3] * x[8] + 0.4909 * x[3] + 0.6856 * x[4] / x[7] + 0.3533 * x[5] - 0.2118 * \
                        x[5] / x[7] - 0.8018 * x[6] + 0.0961 * x[6] / x[7] + 0.3221 * x[7] + 0.5436 - 0.6632 / x[9] - 0.3392 / x[
                            8] - 0.4536 * x[9] / x[5] + 0.6434 / x[4] - 0.3346 / (x[4] * x[6]) - 0.4672 / (x[3] * x[9]) + 0.6952 * x[5] / x[
                            2] + 0.0799 / x[1] - 0.7933 / (x[1] * x[8]) + 0.2954 * x[7] / x[0] - 0.2616 * x[8] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.5436, 'const'), ('mul', 'binary'), (0.3533, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.8018, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.6632, 'const'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.3221, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.4909, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6434, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.4735, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.0799, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.3392, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.7515, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1508, 'const'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8727, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6516, 'const'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4672, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2954, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6856, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6952, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2616, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4536, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0961, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7846, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8891, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7933, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5793, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2118, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3346, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_38(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_38'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5052 * x[0] * x[2] + 0.3377 * x[0] * x[3] - 0.3329 * x[0] * x[5] - 0.214 * x[0] + 0.1939 * x[1] * x[7] - 0.2282 * \
                        x[1] * x[9] + 0.4157 * x[1] + 0.9029 * x[2] * x[6] + 0.8391 * x[2] + 0.7355 * x[2] / x[5] + 0.0353 * x[2] / x[
                            4] - 0.5653 * x[3] + 0.0434 * x[4] + 0.1364 * x[4] / x[5] - 0.9294 * x[5] * x[6] + 0.3074 * x[5] - 0.2066 * x[
                            6] + 0.0223 * x[7] * x[9] + 0.7492 * x[7] - 0.7489 * x[7] / x[8] - 0.3414 * x[8] + 0.0856 + 0.5506 / x[
                            9] - 0.2819 * x[9] / x[8] + 0.5223 * x[9] / x[5] - 0.9056 / (x[4] * x[6]) - 0.6798 * x[5] / x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.0856, 'const'), ('mul', 'binary'), (-0.2066, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.214, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.3074, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.4157, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.3414, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.8391, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.0434, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.7492, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.5506, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.5653, 'const'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1939, 'const'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6798, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7489, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3377, 'const'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9294, 'const'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5052, 'const'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9029, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7355, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2819, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2282, 'const'),
                                            ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3329, 'const'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0353, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9056, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5223, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1364, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0223, 'const'),
                                            ('X_7', 'var'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_9(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_9'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.0047 * x[0] * x[3] - 0.7125 * x[0] / x[6] + 0.0488 * x[0] / x[1] - 0.4183 * x[2] * x[5] + 0.5439 * x[2] * x[
            7] - 0.9407 * x[3] - 0.3441 * x[3] / x[9] + 0.1279 * x[4] + 0.0719 * x[4] / x[5] + 0.1558 * x[5] * x[6] + 0.3868 * x[5] / x[
                            8] + 0.5956 * x[7] - 0.7958 * x[8] + 0.6829 * x[9] + 0.8079 + 0.9401 / x[6] + 0.9494 / x[5] - 0.7859 * x[8] / x[
                            4] - 0.9433 * x[5] / x[3] + 0.5116 / (x[3] * x[4]) - 0.3223 / x[2] + 0.2069 * x[4] / x[1] - 0.1737 / x[
                            1] + 0.9101 / (x[1] * x[5]) - 0.2713 / (x[1] * x[3]) + 0.0902 / x[0] + 0.5648 / (x[0] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.8079, 'const'), ('mul', 'binary'), (0.9494, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.9407, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.3223, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.6829, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.9401, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.0902, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.1279, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.7958, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.5956, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.1737, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4183, 'const'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7859, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5648, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0719, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2713, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7125, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3441, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5116, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9101, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0047, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5439, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2069, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9433, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3868, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1558, 'const'),
                                            ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0488, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_32(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_32'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4335 * x[1] * x[2] + 0.6806 * x[1] / x[8] + 0.0274 * x[2] / x[9] + 0.2247 * x[3] * x[5] - 0.1202 * x[4] / x[
            5] + 0.4573 * x[5] + 0.9582 * x[5] / x[7] + 0.9898 * x[6] * x[9] + 0.861 * x[7] * x[8] - 0.9879 * x[7] - 0.7069 * x[
                            8] - 0.2294 * x[9] - 0.2358 + 0.8414 * x[8] / x[6] - 0.1213 / x[6] - 0.9197 / (x[5] * x[8]) + 0.0682 / x[
                            4] - 0.8026 / x[3] + 0.6434 / x[2] + 0.2299 / (x[2] * x[4]) + 0.446 * x[5] / x[1] - 0.2748 / x[1] - 0.4033 / (
                                    x[1] * x[3]) + 0.996 * x[7] / x[0] + 0.3864 / x[0] - 0.2559 / (x[0] * x[9]) + 0.4624 / (x[0] * x[4])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.2358, 'const'), ('mul', 'binary'), (-0.9879, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.4573, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.7069, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.1213, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.3864, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.8026, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.6434, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.0682, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.2294, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.2748, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8414, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.996, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2299, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4033, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1202, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9197, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.446, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0274, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2559, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9582, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9898, 'const'),
                                            ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.861, 'const'),
                                            ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4335, 'const'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2247, 'const'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4624, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6806, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1016_prog_5(KnownEquation):
    _eq_name = 'inv_nv10_nt1016_prog_5'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7487 * x[0] - 0.1477 * x[0] / x[4] + 0.3438 * x[2] * x[3] + 0.7869 * x[2] / x[5] - 0.1418 * x[3] + 0.4349 * x[
            3] / x[8] + 0.1188 * x[4] * x[8] + 0.1407 * x[5] - 0.2938 * x[5] / x[9] - 0.8651 * x[7] / x[9] - 0.941 * x[8] - 0.6519 + 0.11 / \
                        x[9] + 0.0813 * x[8] / x[7] - 0.0812 / x[7] + 0.9739 / x[6] - 0.7496 * x[9] / x[4] + 0.9787 / x[4] - 0.618 / (
                                    x[4] * x[5]) + 0.2523 * x[7] / x[2] + 0.183 * x[8] / x[2] - 0.6009 / x[2] - 0.7674 / x[1] + 0.7439 / (
                                    x[1] * x[4]) - 0.4642 * x[6] / x[0] - 0.1409 / (x[0] * x[8]) + 0.0891 / (x[0] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.6519, 'const'), ('mul', 'binary'), (-0.941, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.9739, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.9787, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.7674, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.6009, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.0812, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.1418, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.7487, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.11, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.1407, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.183, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8651, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7439, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1409, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7496, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0891, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1188, 'const'),
                                            ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4642, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7869, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3438, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2938, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0813, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2523, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4349, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.618, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1477, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_46(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_46'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.5055 * x[0] * x[6] + 0.7473 * x[0] - 0.2007 * x[0] / x[4] - 0.138 * x[1] * x[5] + 0.3868 * x[1] - 0.4392 * x[
            3] * sympy.sin(x[0]) - 0.7284 * x[3] - 0.2199 * x[4] * sympy.sin(x[3]) + 0.4354 * x[5] * sympy.sin(x[2]) + 0.3956 * x[
                            5] - 0.749 * x[6] * sympy.cos(x[2]) - 0.0081 * x[6] - 0.3797 * sympy.sin(x[1]) * sympy.cos(
            x[7]) - 0.779 * sympy.cos(x[7]) + 0.3849 - 0.0696 / x[4] + 0.8551 * x[5] / x[3] - 0.3523 * x[6] / x[3] - 0.1709 / x[
                            2] - 0.7064 * x[6] / x[1] - 0.2285 * sympy.cos(x[5]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3849, 'const'), ('mul', 'binary'), (-0.779, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.1709, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.7473, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.0696, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.0081, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.3956, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.7284, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.3868, 'const'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3797, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5055, 'const'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.749, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.138, 'const'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8551, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3523, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2285, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7064, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2007, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4354, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4392, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2199, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_0(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_0'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.9654 * x[0] * x[6] - 0.2079 * x[1] * x[3] - 0.593 * x[1] * sympy.sin(x[2]) + 0.4268 * x[1] * sympy.sin(
            x[4]) - 0.3766 * x[1] + 0.1955 * x[3] * x[5] - 0.6748 * x[3] * x[7] - 0.6752 * x[4] * x[7] - 0.6434 * x[4] * sympy.sin(
            x[0]) + 0.3455 * x[6] - 0.9058 * x[7] - 0.1249 * sympy.sin(x[3]) + 0.5394 * sympy.sin(x[5]) - 0.5309 * sympy.cos(
            x[2]) - 0.5286 + 0.2751 * x[7] / x[6] - 0.5225 / x[4] - 0.7118 * x[6] / x[3] - 0.2917 * x[7] / x[2] - 0.3864 * x[3] / x[
                            0] + 0.8875 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.5286, 'const'), ('mul', 'binary'), (0.8875, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.3766, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.3455, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.1249, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.5225, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.5394, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.9058, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.5309, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2751, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4268, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6752, 'const'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9654, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7118, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.593, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3864, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6434, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1955, 'const'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6748, 'const'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2917, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2079, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_35(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_35'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.9167 * x[0] * x[4] - 0.1771 * x[0] * sympy.sin(x[5]) + 0.5903 * x[0] * sympy.cos(x[6]) - 0.3492 * x[0] + 0.7791 * \
                        x[2] * sympy.sin(x[0]) - 0.5722 * x[2] / x[6] + 0.9661 * x[3] - 0.169 * x[4] * x[5] + 0.1608 * x[4] + 0.2536 * x[
                            5] * x[6] + 0.0512 * x[6] + 0.8358 * x[7] + 0.5146 * sympy.sin(x[5]) - 0.7725 * sympy.cos(x[3]) * sympy.cos(
            x[7]) - 0.581 + 0.2548 * sympy.cos(x[7]) / x[6] + 0.2419 * x[4] / x[2] + 0.9454 / x[2] - 0.5935 * x[5] / x[1] + 0.1979 * x[6] / \
                        x[1] + 0.5783 / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.581, 'const'), ('mul', 'binary'), (0.9661, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.9454, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.8358, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.3492, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.5146, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.0512, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.1608, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.5783, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2548, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7791, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2419, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9167, 'const'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.169, 'const'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5935, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7725, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1979, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5722, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1771, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5903, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2536, 'const'), ('X_5', 'var'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_8(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_8'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.2715 * x[0] - 0.9946 * x[0] / x[5] + 0.484 * x[0] / x[2] + 0.9514 * x[1] * x[3] - 0.5118 * x[1] * sympy.sin(
            x[6]) + 0.3255 * x[2] - 0.0784 * x[2] / x[3] + 0.5757 * x[3] + 0.0777 * x[4] * x[5] - 0.0819 * x[5] * x[6] + 0.5064 * x[
                            5] - 0.4386 * x[6] * sympy.sin(x[4]) - 0.7309 * x[6] + 0.4484 * x[7] * sympy.cos(x[4]) + 0.5902 * x[
                            7] - 0.8479 * sympy.sin(x[5]) * sympy.cos(x[1]) + 0.1419 * sympy.cos(x[1]) + 0.0105 * sympy.cos(
            x[2]) * sympy.cos(x[7]) + 0.9617 + 0.5516 / x[4] + 0.7947 * sympy.sin(x[0]) / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.9617, 'const'), ('mul', 'binary'), (-0.2715, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.5757, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.7309, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.3255, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.1419, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.5902, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.5064, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.5516, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.484, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0784, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0105, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0819, 'const'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4386, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5118, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9514, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9946, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0777, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4484, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7947, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8479, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_42(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_42'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.2735 * x[0] * x[7] - 0.112 * x[0] * sympy.sin(x[1]) + 0.5804 * x[0] / x[2] - 0.4566 * x[1] * x[2] - 0.7145 * x[
            1] * x[7] + 0.1143 * x[1] + 0.5122 * x[2] * x[4] + 0.3339 * x[2] / x[5] - 0.2974 * x[4] * x[7] + 0.9538 * x[5] / x[7] + 0.8 * x[
                            6] - 0.1012 * x[7] + 0.6014 * sympy.sin(x[5]) - 0.6649 * sympy.sin(x[6]) * sympy.cos(x[2]) + 0.2507 * sympy.cos(
            x[0]) - 0.9147 * sympy.cos(x[3]) - 0.7812 - 0.9673 * sympy.sin(x[3]) / x[5] - 0.4724 * sympy.cos(x[3]) / x[4] - 0.7661 / x[
                            4] - 0.1888 / x[2]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7812, 'const'), ('mul', 'binary'), (0.2507, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.8, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.1143, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.9147, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.6014, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.1888, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.1012, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.7661, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9673, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4724, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4566, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.112, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5122, 'const'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5804, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9538, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3339, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6649, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2735, 'const'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7145, 'const'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2974, 'const'), ('X_4', 'var'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_33(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_33'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.3911 * x[0] * x[3] + 0.4441 * x[0] - 0.0676 * x[1] * x[7] - 0.3707 * x[2] * sympy.sin(x[6]) - 0.939 * x[
            2] + 0.018 * x[3] + 0.6966 * x[5] * x[7] + 0.1925 * x[7] + 0.989 * sympy.sin(x[1]) * sympy.cos(x[6]) - 0.8429 * sympy.sin(
            x[4]) + 0.6073 * sympy.sin(x[5]) + 0.8331 * sympy.sin(x[6]) + 0.9492 * sympy.cos(x[1]) - 0.3655 - 0.9361 * sympy.sin(x[2]) / x[
                            5] + 0.7431 * sympy.cos(x[1]) / x[5] - 0.2449 * x[7] / x[4] + 0.8612 * x[7] / x[3] + 0.6106 * sympy.sin(x[6]) / \
                        x[3] + 0.8088 / (x[3] * x[5]) + 0.9218 / (x[1] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3655, 'const'), ('mul', 'binary'), (0.1925, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.8331, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.6073, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.4441, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.8429, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.9492, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.018, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.939, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9361, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3707, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7431, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6106, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2449, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6966, 'const'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3911, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0676, 'const'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8612, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8088, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9218, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.989, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_20(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_20'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.9019 * x[0] + 0.2337 * x[1] * x[3] + 0.4619 * x[1] * x[7] + 0.6079 * x[1] + 0.5715 * x[1] / x[5] - 0.9207 * x[
            2] - 0.0766 * x[3] + 0.2273 * x[4] + 0.057 * x[5] * sympy.cos(x[7]) + 0.1719 * x[6] * sympy.sin(x[7]) - 0.5818 * x[6] + 0.4862 * \
                        x[7] * sympy.cos(x[0]) + 0.1621 * x[7] - 0.7051 * sympy.sin(x[0]) * sympy.cos(x[3]) - 0.9401 * sympy.sin(
            x[2]) * sympy.sin(x[6]) + 0.6757 * sympy.sin(x[3]) * sympy.cos(x[2]) - 0.5847 * sympy.sin(x[4]) * sympy.sin(
            x[7]) + 0.5708 * sympy.sin(x[5]) * sympy.cos(x[6]) + 0.3543 + 0.2182 / x[5] + 0.7316 / (x[1] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3543, 'const'), ('mul', 'binary'), (0.2273, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.9207, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.1621, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.0766, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.2182, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.5818, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.9019, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.6079, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7316, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.057, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5708, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5847, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6757, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2337, 'const'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1719, 'const'), ('X_6', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5715, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7051, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4619, 'const'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4862, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9401, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_14(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_14'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.2157 * x[0] * x[1] - 0.9328 * x[0] * x[4] - 0.6483 * x[0] * x[6] + 0.0303 * x[0] * sympy.sin(x[2]) - 0.2163 * x[
            1] * x[4] - 0.7639 * x[2] * sympy.cos(x[5]) + 0.3116 * x[2] + 0.8352 * x[3] * x[7] + 0.8746 * x[3] * sympy.cos(x[2]) + 0.2008 * \
                        x[4] * sympy.cos(x[2]) + 0.3627 * x[4] - 0.8811 * x[5] * sympy.sin(x[0]) + 0.9853 * x[5] - 0.886 * sympy.sin(
            x[1]) * sympy.cos(x[6]) - 0.2765 * sympy.cos(x[0]) - 0.0884 * sympy.cos(x[1]) - 0.561 * sympy.cos(x[3]) + 0.5131 - 0.8675 / x[
                            7] + 0.0791 / x[6] - 0.0323 / (x[5] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5131, 'const'), ('mul', 'binary'), (-0.2765, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.8675, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.3116, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.561, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.0884, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.3627, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.9853, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.0791, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8811, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.886, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2008, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0303, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8746, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2163, 'const'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6483, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0323, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9328, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8352, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2157, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7639, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_31(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_31'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.1202 * x[0] * x[7] + 0.6781 * x[1] * x[3] + 0.6122 * x[1] * sympy.cos(x[2]) - 0.1932 * x[1] / x[6] + 0.616 * x[
            1] / x[4] - 0.0693 * x[2] * sympy.cos(x[5]) - 0.2394 * x[4] + 0.8378 * x[4] / x[7] + 0.4703 * x[6] + 0.1942 * x[7] * sympy.sin(
            x[1]) - 0.5219 * x[7] * sympy.cos(x[3]) - 0.7658 * x[7] - 0.0633 * sympy.sin(x[0]) - 0.6794 * sympy.sin(
            x[2]) - 0.7264 * sympy.sin(x[5]) - 0.6638 - 0.5178 * x[7] / x[6] + 0.464 * sympy.cos(x[0]) / x[6] - 0.2794 / x[3] + 0.5142 * x[
                            5] / x[1] + 0.6018 / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6638, 'const'), ('mul', 'binary'), (-0.2794, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.0633, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.4703, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.7264, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.6018, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.6794, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.7658, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.2394, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1942, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8378, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5178, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6781, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.464, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.616, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5142, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1202, 'const'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6122, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0693, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5219, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1932, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_48(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_48'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.2258 * x[0] * sympy.cos(x[6]) - 0.3896 * x[0] + 0.1592 * x[1] * x[2] + 0.8114 * x[1] - 0.8478 * x[1] / x[
            6] - 0.6929 * x[1] / x[4] - 0.3651 * x[3] * sympy.sin(x[6]) + 0.097 * x[3] * sympy.cos(x[0]) - 0.2423 * x[3] * sympy.cos(
            x[7]) + 0.1428 * x[4] * x[5] - 0.6696 * x[4] * x[7] - 0.6158 * x[4] * sympy.cos(x[0]) - 0.1142 * x[4] + 0.8844 * x[6] * x[
                            7] + 0.5461 * x[7] * sympy.cos(x[1]) - 0.1176 * sympy.sin(x[2]) - 0.3653 * sympy.sin(x[3]) - 0.4679 * sympy.sin(
            x[5]) - 0.0637 * sympy.sin(x[6]) - 0.9905 * sympy.cos(x[7]) - 0.1645
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.1645, 'const'), ('mul', 'binary'), (-0.3653, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.4679, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.0637, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.8114, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.9905, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.1142, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.1176, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.3896, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8844, 'const'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1592, 'const'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6696, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2423, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2258, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6158, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3651, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5461, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8478, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1428, 'const'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.097, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6929, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_41(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_41'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.0256 * x[0] * x[1] + 0.1501 * x[0] * sympy.sin(x[2]) + 0.043 * x[0] - 0.878 * x[1] * x[4] + 0.5503 * x[
            1] * sympy.sin(x[7]) - 0.8922 * x[2] - 0.1964 * x[3] * sympy.sin(x[4]) + 0.0187 * x[3] - 0.7726 * x[3] / x[5] + 0.5704 * x[4] * \
                        x[6] - 0.3223 * x[4] * sympy.sin(x[2]) - 0.2698 * x[4] - 0.5842 * x[5] + 0.3477 * x[6] * sympy.cos(x[2]) - 0.0914 * \
                        x[7] * sympy.cos(x[4]) + 0.048 * x[7] - 0.311 * sympy.sin(x[0]) * sympy.sin(x[4]) - 0.2732 * sympy.sin(
            x[1]) - 0.9845 * sympy.cos(x[6]) - 0.507 + 0.9004 * x[6] / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), \
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.507, 'const'), ('mul', 'binary'), (0.0187, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.043, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.9845, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.2732, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.048, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.8922, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.2698, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.5842, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.878, 'const'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1964, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5503, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0914, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1501, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.311, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9004, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3477, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7726, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0256, 'const'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5704, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3223, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('X_4', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_7(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_7'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.9678 * x[0] * x[3] + 0.4821 * x[0] * x[7] + 0.4902 * x[0] - 0.2658 * x[1] * sympy.cos(x[5]) + 0.5841 * x[
            1] + 0.6987 * x[2] * x[4] + 0.8671 * x[2] * x[5] + 0.5322 * x[2] / x[7] - 0.0081 * x[4] + 0.4415 * x[6] * sympy.sin(
            x[4]) - 0.6668 * x[6] - 0.832 * x[7] * sympy.sin(x[1]) - 0.0824 * x[7] + 0.5266 * sympy.sin(x[0]) * sympy.cos(
            x[2]) + 0.8451 * sympy.sin(x[0]) * sympy.cos(x[5]) - 0.3337 * sympy.sin(x[2]) + 0.8396 * sympy.sin(x[5]) - 0.3324 * sympy.cos(
            x[3]) + 0.1009 + 0.2156 * x[6] / x[5] - 0.8723 * sympy.sin(x[3]) / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1009, 'const'), ('mul', 'binary'), (0.8396, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.6668, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.3337, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.0824, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.5841, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.0081, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.3324, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.4902, 'const'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6987, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5266, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8723, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.832, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5322, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4821, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8451, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8671, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2156, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9678, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4415, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2658, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_37(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_37'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.3701 * x[1] - 0.4539 * x[3] * x[4] + 0.3723 * x[5] * sympy.sin(x[6]) + 0.1645 * x[5] * sympy.cos(x[1]) - 0.0643 * \
                        x[5] - 0.2119 * x[6] * sympy.sin(x[1]) + 0.3061 * x[7] * sympy.cos(x[1]) + 0.8574 * sympy.sin(x[1]) * sympy.sin(
            x[4]) + 0.4233 * sympy.sin(x[3]) * sympy.sin(x[5]) + 0.1731 * sympy.sin(x[3]) - 0.3333 * sympy.cos(x[0]) - 0.6884 * sympy.cos(
            x[2]) + 0.0712 * sympy.cos(x[4]) + 0.189 * sympy.cos(x[6]) + 0.2307 - 0.1877 / x[7] - 0.0047 * sympy.cos(x[0]) / x[6] + 0.4742 * \
                        x[6] / x[4] - 0.8304 * x[7] / x[4] + 0.6987 * x[7] / x[3] + 0.3009 * sympy.cos(x[1]) / x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.2307, 'const'), ('mul', 'binary'), (0.189, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.1877, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.6884, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.1731, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.3701, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.0712, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.3333, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.0643, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4742, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0047, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2119, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1645, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4539, 'const'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8304, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3061, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3009, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3723, 'const'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6987, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4233, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8574, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_15(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_15'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.8733 * x[0] * x[2] - 0.3838 * x[0] * x[7] + 0.9932 * x[0] + 0.566 * x[0] / x[6] + 0.411 * x[1] * x[6] + 0.9086 * \
                        x[1] * x[7] - 0.5743 * x[1] - 0.6564 * x[2] * x[4] + 0.6024 * x[2] * sympy.cos(x[3]) + 0.5504 * x[3] * sympy.sin(
            x[6]) + 0.8686 * x[4] * sympy.sin(x[1]) - 0.1798 * x[4] - 0.2836 * x[5] * sympy.cos(x[2]) - 0.8527 * sympy.sin(
            x[0]) * sympy.cos(x[4]) - 0.7042 * sympy.sin(x[6]) - 0.6319 * sympy.sin(x[7]) - 0.5783 * sympy.cos(x[1]) * sympy.cos(
            x[3]) - 0.3445 * sympy.cos(x[2]) + 0.0391 * sympy.cos(x[5]) - 0.8326 + 0.1474 / x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8326, 'const'), ('mul', 'binary'), (-0.7042, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.1474, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.6319, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.9932, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.1798, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.3445, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.0391, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.5743, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8686, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5504, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3838, 'const'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8527, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.411, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6564, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9086, 'const'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6024, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5783, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.566, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8733, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2836, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_23(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_23'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.8534 * x[0] * sympy.cos(x[5]) + 0.4201 * x[0] + 0.3467 * x[1] * x[4] - 0.2892 * x[2] * x[6] - 0.558 * x[3] * x[
            5] + 0.226 * x[3] * sympy.cos(x[2]) - 0.6563 * x[3] + 0.2965 * x[4] * sympy.sin(x[3]) + 0.5459 * x[4] + 0.5369 * x[
                            5] * sympy.cos(x[1]) + 0.3976 * x[6] + 0.3566 * x[7] * sympy.cos(x[3]) - 0.6677 * sympy.sin(
            x[1]) - 0.3474 * sympy.sin(x[3]) * sympy.cos(x[0]) + 0.5236 * sympy.sin(x[6]) * sympy.cos(x[7]) - 0.0989 * sympy.cos(
            x[2]) + 0.9007 * sympy.cos(x[7]) - 0.2698 - 0.3718 / x[5] + 0.1832 * x[5] / x[4] - 0.3669 * sympy.cos(x[6]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2698, 'const'), ('mul', 'binary'), (0.5459, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.6677, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.9007, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.6563, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.0989, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.4201, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.3976, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.3718, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8534, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3474, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1832, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3467, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.226, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2892, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3566, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.558, 'const'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5236, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2965, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3669, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5369, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_30(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_30'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.5101 * x[0] * x[5] + 0.4582 * x[0] / x[6] - 0.7609 * x[2] * sympy.sin(x[6]) - 0.2545 * x[3] + 0.8342 * x[4] * x[
            5] - 0.3373 * x[4] - 0.7038 * x[5] * sympy.cos(x[3]) + 0.5213 * x[5] * sympy.cos(x[7]) + 0.7355 * x[5] - 0.8124 * x[
                            7] * sympy.sin(x[1]) - 0.0985 * x[7] * sympy.sin(x[3]) + 0.6913 * x[7] + 0.0604 * sympy.sin(
            x[0]) - 0.2571 * sympy.sin(x[1]) * sympy.sin(x[4]) + 0.058 * sympy.sin(x[1]) - 0.5933 * sympy.sin(x[2]) + 0.5149 * sympy.sin(
            x[6]) - 0.1586 * sympy.cos(x[1]) * sympy.cos(x[6]) + 0.7122 - 0.8082 * x[5] / x[1] + 0.9534 * x[1] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7122, 'const'), ('mul', 'binary'), (0.058, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.5933, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.6913, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.5149, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.0604, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.3373, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.2545, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.7355, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4582, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5101, 'const'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8124, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0985, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2571, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1586, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8082, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7609, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5213, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7038, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8342, 'const'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9534, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_1', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_28(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_28'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.111 * x[0] * x[1] - 0.8274 * x[0] * x[7] - 0.3908 * x[0] * sympy.cos(x[2]) - 0.1798 * x[0] - 0.7984 * x[
            1] + 0.353 * x[2] / x[4] + 0.3782 * x[3] * sympy.sin(x[6]) - 0.6091 * x[3] - 0.2574 * x[5] * sympy.sin(x[7]) - 0.6916 * x[
                            6] - 0.1953 * sympy.sin(x[0]) * sympy.cos(x[5]) - 0.2287 * sympy.sin(x[3]) * sympy.sin(
            x[4]) - 0.4384 * sympy.sin(x[5]) - 0.1169 * sympy.cos(x[7]) + 0.5279 + 0.2961 * x[7] / x[6] + 0.2564 / x[4] + 0.148 * sympy.sin(
            x[3]) / x[2] + 0.5266 / x[2] + 0.0632 * x[2] / x[1] - 0.3409 * x[4] / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5279, 'const'), ('mul', 'binary'), (0.5266, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.1798, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.6916, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.6091, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.4384, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.1169, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.7984, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.2564, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3908, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0632, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2574, 'const'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2287, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1953, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.148, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.353, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8274, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.111, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3409, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2961, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3782, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_17(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_17'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.242 * x[0] + 0.2721 * x[2] * x[3] + 0.1175 * x[3] * x[4] - 0.0359 * x[3] * sympy.cos(x[0]) - 0.7968 * x[
            4] * sympy.cos(x[6]) - 0.7448 * x[4] * sympy.cos(x[7]) - 0.4929 * x[5] - 0.4577 * x[6] + 0.1055 * x[7] * sympy.sin(
            x[6]) - 0.0578 * x[7] * sympy.cos(x[0]) - 0.5765 * x[7] + 0.5601 * sympy.sin(x[1]) * sympy.cos(x[5]) - 0.305 * sympy.sin(
            x[3]) - 0.0953 * sympy.sin(x[4]) + 0.02 * sympy.sin(x[6]) * sympy.cos(x[0]) - 0.1161 * sympy.cos(x[2]) + 0.2905 - 0.8178 * x[
                            6] / x[5] - 0.072 * x[6] / x[2] + 0.1065 * sympy.sin(x[7]) / x[2] - 0.7805 / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.2905, 'const'), ('mul', 'binary'), (-0.305, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.0953, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.4929, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.5765, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.4577, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.1161, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.7805, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.242, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0359, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5601, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.02, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1175, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7968, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1065, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1055, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8178, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0578, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7448, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2721, 'const'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.072, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_43(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_43'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.1284 * x[0] * x[1] + 0.7362 * x[0] - 0.3657 * x[1] - 0.6955 * x[3] * x[4] - 0.7984 * x[3] * x[5] + 0.2915 * x[
            3] * x[6] - 0.4564 * x[3] + 0.2118 * x[4] * x[7] + 0.2048 * x[5] * x[6] + 0.0775 * x[5] * sympy.cos(x[1]) - 0.3503 * x[
                            5] + 0.057 * sympy.sin(x[0]) * sympy.sin(x[4]) + 0.4801 * sympy.sin(x[4]) + 0.8542 * sympy.sin(
            x[5]) * sympy.sin(x[7]) - 0.987 * sympy.sin(x[6]) - 0.6242 * sympy.sin(x[7]) * sympy.cos(x[6]) + 0.542 - 0.4703 / x[
                            7] + 0.2062 * sympy.sin(x[4]) / x[2] + 0.1351 / x[2] + 0.1436 * x[2] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.542, 'const'), ('mul', 'binary'), (-0.3657, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.4703, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.4564, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.4801, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.987, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.3503, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.7362, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.1351, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2915, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2048, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.057, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8542, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2062, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7984, 'const'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6955, 'const'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1436, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0775, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6242, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2118, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1284, 'const'), ('X_0', 'var'), ('X_1', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_2(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_2'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.4647 * x[0] * sympy.sin(x[7]) - 0.0463 * x[1] * sympy.cos(x[6]) - 0.9849 * x[1] + 0.1702 * x[2] * sympy.cos(
            x[4]) + 0.2578 * x[3] * x[6] - 0.8018 * x[3] * sympy.sin(x[0]) + 0.3456 * x[3] - 0.7758 * x[4] * sympy.sin(x[6]) - 0.9665 * x[
                            4] + 0.9585 * x[5] * x[6] + 0.2766 * x[5] - 0.188 * x[6] * sympy.sin(x[0]) + 0.8834 * x[6] - 0.9616 * sympy.cos(
            x[0]) - 0.6802 * sympy.cos(x[7]) + 0.5238 - 0.1655 * x[7] / x[6] - 0.6737 * sympy.sin(x[3]) / x[2] + 0.699 / x[2] + 0.5322 * x[
                            4] / x[1] - 0.7595 * x[5] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5238, 'const'), ('mul', 'binary'), (-0.9665, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.9849, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.3456, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.2766, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.8834, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.699, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.9616, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.6802, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7758, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1702, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1655, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0463, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4647, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6737, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2578, 'const'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.188, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9585, 'const'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7595, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8018, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5322, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_4(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_4'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.1239 * x[0] * x[1] - 0.5864 * x[0] - 0.7506 * x[1] - 0.8975 * x[2] * x[3] + 0.4615 * x[2] * x[4] - 0.8165 * x[
            2] * x[7] + 0.9575 * x[2] - 0.8283 * x[3] * sympy.cos(x[4]) - 0.8844 * x[3] - 0.7099 * x[3] / x[5] + 0.0895 * x[4] * x[
                            6] - 0.5758 * x[5] + 0.5663 * sympy.sin(x[0]) * sympy.sin(x[2]) - 0.4095 * sympy.sin(x[4]) + 0.3326 * sympy.cos(
            x[6]) + 0.6369 - 0.854 / x[7] - 0.0728 * x[7] / x[6] + 0.1473 * sympy.cos(x[0]) / x[5] + 0.4163 * x[6] / x[1] - 0.3294 / (
                                    x[0] * x[4])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6369, 'const'), ('mul', 'binary'), (0.3326, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.4095, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.7506, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.8844, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.5758, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.854, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.9575, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.5864, 'const'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8165, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1473, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8283, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8975, 'const'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0895, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1239, 'const'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4163, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5663, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3294, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4615, 'const'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7099, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0728, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_45(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_45'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.8899 * x[0] * sympy.sin(x[1]) + 0.8985 * x[1] * sympy.sin(x[7]) + 0.7458 * x[1] - 0.5122 * x[2] * sympy.sin(
            x[1]) - 0.7675 * x[2] + 0.5944 * x[3] * x[5] - 0.4814 * x[3] * x[7] - 0.1514 * x[3] * sympy.sin(x[0]) + 0.331 * x[
                            3] * sympy.sin(x[6]) - 0.7945 * x[5] * x[6] + 0.536 * x[5] / x[7] - 0.2531 * x[6] - 0.5164 * sympy.sin(
            x[0]) + 0.6004 * sympy.sin(x[2]) * sympy.cos(x[3]) - 0.9595 * sympy.sin(x[5]) - 0.7516 * sympy.sin(x[7]) + 0.638 * sympy.cos(
            x[3]) + 0.4355 * sympy.cos(x[4]) + 0.3804 - 0.4925 * sympy.sin(x[0]) / x[2] + 0.2749 * sympy.sin(x[5]) / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3804, 'const'), ('mul', 'binary'), (0.4355, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.2531, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.7675, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.9595, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.7516, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.7458, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.5164, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.638, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.536, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6004, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5944, 'const'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2749, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1514, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4925, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8899, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7945, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8985, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5122, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4814, 'const'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.331, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_49(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_49'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.629 * x[0] * x[6] - 0.6987 * x[0] * sympy.cos(x[1]) - 0.9084 * x[0] * sympy.cos(x[3]) + 0.9475 * x[0] - 0.4755 * \
                        x[1] - 0.6182 * x[2] * sympy.cos(x[0]) - 0.2233 * x[3] * x[6] + 0.6359 * x[3] * sympy.cos(x[1]) - 0.0193 * x[
                            4] - 0.009 * x[6] * sympy.cos(x[7]) + 0.9685 * x[6] + 0.468 * x[7] + 0.0023 * sympy.sin(x[1]) * sympy.sin(
            x[5]) - 0.1719 * sympy.sin(x[2]) * sympy.cos(x[5]) + 0.3943 * sympy.sin(x[2]) - 0.2059 * sympy.sin(x[3]) + 0.0491 * sympy.cos(
            x[5]) - 0.4237 - 0.2786 * sympy.cos(x[5]) / x[6] - 0.7369 / (x[1] * x[2]) + 0.5878 * x[7] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4237, 'const'), ('mul', 'binary'), (0.468, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.9475, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.0193, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.0491, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.4755, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.9685, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.3943, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.2059, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7369, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9084, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6182, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2786, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.009, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0023, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2233, 'const'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5878, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6987, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.629, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1719, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6359, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('X_3', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_11(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_11'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.685 * x[0] * sympy.cos(x[7]) + 0.2482 * x[0] + 0.1265 * x[1] * x[2] + 0.0053 * x[1] - 0.087 * x[3] * x[
            4] - 0.5575 * x[4] * sympy.sin(x[1]) + 0.1734 * x[4] + 0.6175 * x[5] * x[7] - 0.279 * x[5] + 0.6867 * x[6] * sympy.sin(
            x[4]) + 0.8733 * x[6] + 0.6202 * sympy.sin(x[2]) * sympy.sin(x[5]) + 0.1968 * sympy.sin(x[2]) * sympy.cos(
            x[0]) + 0.4634 * sympy.sin(x[3]) - 0.8609 + 0.598 * sympy.sin(x[4]) / x[7] - 0.8346 / x[7] + 0.5835 * sympy.cos(x[0]) / x[
                            3] - 0.755 * x[4] / x[2] + 0.2244 / x[2] + 0.859 * sympy.sin(x[6]) / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8609, 'const'), ('mul', 'binary'), (0.2482, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.279, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.1734, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.8346, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.2244, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.8733, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.4634, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.0053, 'const'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.755, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1265, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.087, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5835, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1968, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.598, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.685, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.859, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6867, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6175, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6202, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5575, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_4', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_10(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_10'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.7924 * x[1] * x[4] + 0.8398 * x[1] * sympy.sin(x[0]) + 0.7694 * x[1] * sympy.cos(x[6]) - 0.3916 * x[1] + 0.4398 * \
                        x[2] * x[4] + 0.467 * x[2] * x[7] + 0.9173 * x[2] * sympy.cos(x[0]) - 0.0604 * x[3] * x[7] + 0.9525 * x[
                            3] + 0.5309 * x[5] * x[7] - 0.0517 * x[5] * sympy.sin(x[4]) - 0.4798 * x[6] + 0.4549 * sympy.cos(
            x[0]) + 0.4838 * sympy.cos(x[2]) - 0.1152 - 0.5265 * sympy.cos(x[0]) / x[7] + 0.3432 * sympy.cos(x[4]) / x[7] + 0.1186 / x[
                            7] + 0.0211 / x[5] - 0.3814 / x[4] - 0.1672 * x[5] / x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.1152, 'const'), ('mul', 'binary'), (0.4838, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.3916, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.1186, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.9525, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.3814, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.4549, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.4798, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.0211, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7924, 'const'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0517, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1672, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0604, 'const'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5265, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7694, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.467, 'const'), ('X_2', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3432, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5309, 'const'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9173, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4398, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8398, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_1', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_1(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_1'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.268 * x[0] * x[6] + 0.0676 * x[0] / x[1] - 0.0398 * x[2] * x[6] - 0.1599 * x[2] * sympy.sin(x[0]) + 0.1986 * x[
            2] * sympy.cos(x[1]) + 0.7615 * x[3] + 0.198 * x[3] / x[6] - 0.2016 * x[4] * x[5] - 0.2728 * x[4] * sympy.cos(x[2]) + 0.4469 * \
                        x[5] / x[7] + 0.8307 * x[6] + 0.4334 * x[7] + 0.6798 * sympy.sin(x[0]) - 0.5098 * sympy.sin(
            x[1]) - 0.0063 * sympy.sin(x[2]) - 0.2644 * sympy.sin(x[4]) + 0.1148 * sympy.cos(x[3]) * sympy.cos(
            x[7]) + 0.5703 - 0.1644 * sympy.sin(x[0]) / x[7] - 0.7205 / x[5] - 0.1277 * x[7] / x[2]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5703, 'const'), ('mul', 'binary'), (-0.7205, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.2644, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.0063, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.6798, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.8307, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.7615, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.5098, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.4334, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1148, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0398, 'const'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1599, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2728, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1644, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0676, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1277, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4469, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2016, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1986, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.268, 'const'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.198, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_40(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_40'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.5818 * x[0] * sympy.sin(x[2]) + 0.6219 * x[0] + 0.389 * x[1] * x[3] + 0.1834 * x[2] * x[3] + 0.3329 * x[2] * x[
            6] - 0.4658 * x[2] - 0.7599 * x[3] * x[7] - 0.9432 * x[3] + 0.1986 * x[4] + 0.4131 * x[5] * x[6] - 0.3555 * x[6] + 0.8489 * x[
                            7] * sympy.cos(x[0]) + 0.9129 * x[7] - 0.9172 * sympy.sin(x[5]) * sympy.cos(x[1]) - 0.3962 * sympy.cos(
            x[0]) * sympy.cos(x[6]) + 0.2425 * sympy.cos(x[5]) + 0.9974 - 0.2278 * x[4] / x[3] - 0.0739 * x[4] / x[2] - 0.0692 * x[5] / x[
                            2] - 0.9167 / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.9974, 'const'), ('mul', 'binary'), (-0.3555, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.9432, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.9167, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.4658, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.1986, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.6219, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.9129, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.2425, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7599, 'const'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8489, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4131, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3329, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.389, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0692, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3962, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2278, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1834, 'const'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5818, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9172, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0739, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_4', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_29(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_29'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.6003 * x[0] * x[3] - 0.9969 * x[0] * x[6] - 0.4333 * x[1] * x[2] + 0.4728 * x[1] * x[7] + 0.1538 * x[2] * x[
            7] + 0.7375 * x[2] * sympy.cos(x[5]) - 0.7787 * x[3] + 0.4789 * x[3] / x[5] + 0.0487 * x[6] * sympy.cos(x[7]) - 0.9619 * x[
                            6] + 0.0694 * sympy.sin(x[0]) - 0.729 * sympy.sin(x[2]) + 0.6642 * sympy.sin(x[3]) * sympy.sin(
            x[4]) + 0.6036 * sympy.sin(x[4]) - 0.1341 * sympy.cos(x[5]) - 0.2885 * sympy.cos(x[7]) - 0.546 - 0.1383 * x[4] / x[
                            2] + 0.8628 * sympy.cos(x[6]) / x[2] + 0.1011 / x[1] - 0.7304 * x[7] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.546, 'const'), ('mul', 'binary'), (0.0694, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.9619, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.729, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.1011, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.6036, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.7787, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.1341, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.2885, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7304, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6003, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1538, 'const'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6642, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4333, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7375, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8628, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9969, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0487, 'const'),
                                            ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1383, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4728, 'const'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4789, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_22(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_22'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.7215 * x[0] * x[7] + 0.9448 * x[0] + 0.6501 * x[0] / x[1] + 0.4597 * x[1] - 0.5973 * x[2] * x[5] + 0.4536 * x[
            2] + 0.3649 * x[3] * x[6] + 0.2297 * x[3] * x[7] - 0.4757 * x[3] + 0.9509 * x[4] * sympy.sin(x[5]) + 0.9777 * x[4] * sympy.cos(
            x[2]) + 0.981 * x[5] * sympy.sin(x[0]) + 0.5398 * x[6] - 0.9487 * sympy.sin(x[1]) * sympy.sin(x[6]) + 0.783 * sympy.sin(
            x[5]) + 0.885 * sympy.sin(x[6]) * sympy.sin(x[7]) - 0.7998 - 0.6403 / x[7] + 0.2408 / x[4] + 0.0008 * sympy.cos(x[5]) / x[
                            1] - 0.7021 * sympy.cos(x[3]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7998, 'const'), ('mul', 'binary'), (0.5398, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.4536, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.4757, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.783, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.2408, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.9448, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.4597, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.6403, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6501, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2297, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.981, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9509, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5973, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7215, 'const'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7021, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.885, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9777, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9487, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3649, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0008, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_27(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_27'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.3346 * x[0] * x[6] - 0.6947 * x[0] + 0.1653 * x[1] * x[5] - 0.2225 * x[1] * x[6] + 0.2059 * x[1] - 0.2024 * x[
            2] * sympy.sin(x[1]) - 0.1433 * x[2] / x[5] + 0.3253 * x[5] * sympy.sin(x[0]) + 0.1498 * x[5] * sympy.sin(x[6]) - 0.3647 * x[
                            5] + 0.3115 * x[6] * sympy.sin(x[7]) - 0.0129 * x[7] * sympy.cos(x[4]) - 0.5036 * x[7] + 0.8984 * sympy.sin(
            x[2]) + 0.3812 * sympy.sin(x[3]) + 0.59 * sympy.cos(x[4]) - 0.3974 * sympy.cos(x[6]) + 0.938 + 0.7951 * x[5] / x[4] + 0.7014 * \
                        x[4] / x[2] - 0.4662 * sympy.sin(x[1]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.938, 'const'), ('mul', 'binary'), (0.59, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.3647, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.3812, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.2059, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.8984, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.6947, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.3974, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.5036, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2024, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0129, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3115, 'const'), ('X_6', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3253, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7951, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7014, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2225, 'const'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3346, 'const'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4662, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1498, 'const'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1433, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1653, 'const'), ('X_1', 'var'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_34(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_34'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.2421 * x[1] * x[4] - 0.0471 * x[1] * sympy.cos(x[5]) - 0.2097 * x[2] * x[3] + 0.4629 * x[2] * x[6] - 0.0733 * x[
            4] * x[6] - 0.2456 * x[4] - 0.2285 * x[5] * sympy.sin(x[4]) + 0.1334 * x[5] / x[7] - 0.1836 * sympy.sin(x[1]) * sympy.sin(
            x[2]) + 0.1711 * sympy.sin(x[1]) - 0.206 * sympy.sin(x[2]) + 0.5771 * sympy.cos(x[6]) + 0.2441 * sympy.cos(
            x[7]) - 0.2383 - 0.2649 * x[7] / x[6] + 0.6071 / x[5] - 0.8407 * x[7] / x[3] - 0.1238 / x[3] + 0.5977 * sympy.cos(x[0]) / x[
                            2] - 0.0113 * x[3] / x[1] + 0.7324 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2383, 'const'), ('mul', 'binary'), (0.7324, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.1238, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.1711, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.6071, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.206, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.2456, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.5771, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.2441, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2097, 'const'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5977, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2421, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2285, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0113, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0733, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8407, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0471, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4629, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2649, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1334, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1836, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_2', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_16(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_16'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.9401 * x[0] - 0.6301 * x[1] * x[6] + 0.9761 * x[1] * sympy.cos(x[3]) - 0.5152 * x[2] * x[5] - 0.0935 * x[
            2] - 0.8236 * x[3] * sympy.sin(x[2]) - 0.0311 * x[3] - 0.8863 * x[3] / x[5] - 0.5799 * x[5] * sympy.sin(x[0]) - 0.6793 * x[
                            5] + 0.6017 * x[6] - 0.277 * x[7] * sympy.sin(x[3]) - 0.7234 * x[7] + 0.2766 * sympy.sin(x[0]) * sympy.sin(
            x[2]) - 0.8473 * sympy.cos(x[0]) * sympy.cos(x[7]) - 0.3447 * sympy.cos(x[1]) - 0.3916 + 0.9683 * sympy.sin(x[7]) / x[
                            4] + 0.7876 * sympy.cos(x[1]) / x[4] - 0.8578 / x[4] - 0.9132 * x[7] / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3916, 'const'), ('mul', 'binary'), (-0.0935, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.8578, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.6017, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.3447, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.7234, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.0311, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.9401, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.6793, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2766, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8863, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8236, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5799, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7876, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9683, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.277, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5152, 'const'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6301, 'const'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9761, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9132, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8473, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_13(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_13'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.3259 * x[0] * sympy.sin(x[3]) + 0.1824 * x[0] * sympy.sin(x[7]) - 0.4228 * x[1] * x[7] + 0.6505 * x[2] * x[
            5] + 0.5918 * x[2] + 0.7288 * x[3] * sympy.cos(x[4]) + 0.6838 * x[4] * x[5] - 0.8732 * x[4] * x[7] + 0.9318 * x[4] - 0.6997 * x[
                            5] * sympy.sin(x[1]) + 0.0719 * x[5] + 0.6155 * x[7] * sympy.cos(x[3]) + 0.8473 * x[7] + 0.0367 * sympy.sin(
            x[0]) - 0.9089 * sympy.sin(x[1]) + 0.9578 * sympy.sin(x[3]) + 0.0548 * sympy.cos(x[6]) + 0.3497 + 0.1289 * x[6] / x[
                            5] - 0.1311 * sympy.sin(x[2]) / x[4] + 0.72 * sympy.sin(x[6]) / x[2]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3497, 'const'), ('mul', 'binary'), (0.8473, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.0367, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.5918, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.9578, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.0719, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.0548, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.9089, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.9318, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1311, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6155, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6997, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6505, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1289, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3259, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6838, 'const'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7288, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4228, 'const'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.72, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1824, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8732, 'const'), ('X_4', 'var'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_47(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_47'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.6957 * x[0] / x[3] + 0.1852 * x[1] * x[7] + 0.5964 * x[1] / x[5] - 0.5638 * x[2] * x[3] + 0.136 * x[2] * x[
            4] + 0.2004 * x[2] * x[6] - 0.4164 * x[2] * sympy.sin(x[7]) - 0.1979 * x[3] * x[7] - 0.9163 * x[5] + 0.4538 * x[
                            6] - 0.2173 * sympy.sin(x[0]) + 0.1133 * sympy.cos(x[2]) + 0.0757 * sympy.cos(x[3]) + 0.5525 * sympy.cos(
            x[4]) - 0.8249 + 0.7601 / x[7] - 0.5321 * sympy.cos(x[1]) / x[6] + 0.6779 * sympy.sin(x[7]) / x[4] - 0.5368 * sympy.cos(x[1]) / \
                        x[2] + 0.8454 / x[1] - 0.2498 * x[7] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8249, 'const'), ('mul', 'binary'), (0.1133, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.9163, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.2173, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.8454, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.4538, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.5525, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.0757, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.7601, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1979, 'const'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2498, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1852, 'const'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2004, 'const'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6779, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6957, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5321, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5638, 'const'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4164, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5368, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.136, 'const'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5964, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_36(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_36'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.8165 * x[0] * x[2] + 0.6781 * x[0] * x[5] - 0.3765 * x[0] * x[7] - 0.042 * x[0] + 0.0675 * x[1] * sympy.sin(
            x[2]) - 0.663 * x[1] * sympy.cos(x[3]) + 0.8147 * x[3] - 0.6087 * x[4] * sympy.sin(x[5]) + 0.6168 * x[4] * sympy.cos(
            x[0]) + 0.1456 * x[5] * sympy.sin(x[6]) + 0.7431 * x[5] - 0.3241 * x[6] - 0.3104 * x[7] * sympy.cos(x[5]) + 0.2166 * x[
                            7] - 0.6991 * sympy.sin(x[4]) - 0.2662 * sympy.cos(x[1]) - 0.8918 + 0.52 * sympy.sin(x[0]) / x[
                            6] + 0.8296 * sympy.sin(x[7]) / x[6] + 0.1121 * sympy.sin(x[4]) / x[2] - 0.4261 / x[2]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8918, 'const'), ('mul', 'binary'), (-0.042, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.8147, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.7431, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.6991, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.2166, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.3241, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.2662, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.4261, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6168, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1121, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0675, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3765, 'const'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.52, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8165, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3104, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6781, 'const'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6087, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1456, 'const'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.663, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8296, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_44(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_44'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.0247 * x[1] * x[3] + 0.4246 * x[2] - 0.2704 * x[3] * x[4] - 0.8073 * x[3] * x[7] - 0.3554 * x[3] * sympy.sin(
            x[5]) - 0.6213 * x[3] * sympy.cos(x[6]) - 0.461 * x[3] + 0.833 * x[4] - 0.8977 * x[5] * x[6] + 0.878 * x[5] * x[7] + 0.4571 * x[
                            5] * sympy.cos(x[2]) - 0.4316 * x[6] * x[7] - 0.2853 * x[6] + 0.3117 * sympy.sin(x[0]) * sympy.sin(
            x[2]) - 0.2026 * sympy.sin(x[1]) - 0.8858 * sympy.sin(x[7]) - 0.6001 * sympy.cos(x[4]) * sympy.cos(x[5]) - 0.9502 - 0.2509 / x[
                            5] + 0.3289 * x[6] / x[1] - 0.0559 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9502, 'const'), ('mul', 'binary'), (-0.2853, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.461, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.8858, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.0559, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.833, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.2509, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.2026, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.4246, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3117, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8073, 'const'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3554, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4316, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8977, 'const'),
                                            ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4571, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6213, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2704, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6001, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3289, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.878, 'const'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0247, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_6(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_6'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.3461 * x[0] * x[4] - 0.376 * x[0] + 0.1934 * x[1] * x[6] + 0.168 * x[1] * sympy.sin(x[5]) + 0.5875 * x[
            1] * sympy.sin(x[7]) - 0.8207 * x[2] * sympy.sin(x[7]) + 0.4688 * x[2] * sympy.cos(x[3]) + 0.8838 * x[3] * sympy.cos(
            x[6]) + 0.4591 * x[3] + 0.592 * x[4] * sympy.sin(x[1]) + 0.1088 * x[4] * sympy.sin(x[5]) - 0.889 * x[7] - 0.0349 * sympy.sin(
            x[1]) + 0.011 * sympy.sin(x[2]) - 0.0789 * sympy.sin(x[4]) - 0.419 * sympy.cos(x[6]) - 0.5393 + 0.7513 / x[5] - 0.0739 / (
                                    x[4] * x[7]) + 0.5416 * x[6] / x[0] - 0.1835 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.5393, 'const'), ('mul', 'binary'), (0.7513, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.419, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.889, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.4591, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.0349, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.0789, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.011, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.376, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.592, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5875, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.168, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8207, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8838, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3461, 'const'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5416, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1835, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1088, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4688, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1934, 'const'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0739, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_18(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_18'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.4792 * x[1] * x[2] - 0.6931 * x[1] * sympy.cos(x[0]) + 0.4934 * x[1] / x[4] + 0.6241 * x[2] * x[6] - 0.8181 * x[
            2] - 0.9052 * x[2] / x[5] + 0.1193 * x[3] * sympy.cos(x[1]) - 0.5745 * x[5] * sympy.sin(x[3]) - 0.0462 * x[5] * sympy.sin(
            x[6]) + 0.597 * x[6] * sympy.sin(x[7]) + 0.3499 * x[6] * sympy.cos(x[0]) + 0.1523 * x[6] + 0.3514 * x[7] * sympy.sin(
            x[3]) + 0.7689 * x[7] - 0.2613 * sympy.sin(x[2]) * sympy.sin(x[3]) + 0.3457 * sympy.sin(x[4]) + 0.9026 * sympy.cos(
            x[0]) - 0.923 * sympy.cos(x[1]) + 0.0627 - 0.0938 / x[5] + 0.9096 / x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.0627, 'const'), ('mul', 'binary'), (0.9026, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.0938, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.8181, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.3457, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.923, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.7689, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.9096, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.1523, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6931, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5745, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4792, 'const'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3499, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0462, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6241, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4934, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9052, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.597, 'const'), ('X_6', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3514, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2613, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1193, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_3', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_3(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_3'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.7055 * x[0] * x[3] + 0.6036 * x[0] * sympy.sin(x[1]) + 0.5007 * x[0] + 0.5014 * x[1] * sympy.cos(x[2]) + 0.6171 * \
                        x[1] * sympy.cos(x[3]) - 0.405 * x[1] - 0.3529 * x[2] * sympy.cos(x[7]) - 0.7912 * x[3] * x[6] - 0.0331 * x[
                            3] - 0.3768 * x[4] * x[7] + 0.9502 * x[4] + 0.0296 * x[5] * x[7] + 0.8449 * x[6] - 0.2532 * x[7] * sympy.sin(
            x[0]) + 0.9832 * sympy.sin(x[2]) * sympy.cos(x[0]) + 0.151 * sympy.sin(x[2]) - 0.8029 * sympy.sin(x[5]) + 0.5469 - 0.9342 / x[
                            7] - 0.4478 * sympy.cos(x[1]) / x[6] + 0.2331 * sympy.cos(x[5]) / x[4]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5469, 'const'), ('mul', 'binary'), (-0.0331, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.405, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.151, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.9502, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.8029, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.8449, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.9342, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.5007, 'const'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3768, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7912, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9832, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7055, 'const'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3529, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6036, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2532, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0296, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2331, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4478, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5014, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6171, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_24(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_24'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.2773 * x[0] * sympy.sin(x[5]) - 0.0163 * x[1] * x[6] - 0.4657 * x[1] - 0.8831 * x[1] / x[3] - 0.3807 * x[
            2] + 0.0592 * x[4] * x[7] - 0.6886 * x[4] * sympy.cos(x[3]) - 0.7729 * x[5] * sympy.sin(x[6]) - 0.4384 * x[5] - 0.4197 * x[
                            6] + 0.7125 * x[7] * sympy.cos(x[2]) - 0.5565 * sympy.sin(x[2]) * sympy.cos(x[4]) - 0.0568 * sympy.sin(
            x[3]) - 0.425 * sympy.sin(x[7]) - 0.7394 + 0.1854 * sympy.cos(x[5]) / x[4] - 0.7812 / x[4] - 0.5233 * x[6] / x[3] + 0.574 * x[
                            3] / x[2] - 0.5529 * sympy.sin(x[7]) / x[0] - 0.388 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7394, 'const'), ('mul', 'binary'), (-0.4384, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.4197, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.388, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.0568, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.3807, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.425, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.7812, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.4657, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5233, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6886, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.574, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1854, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7125, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0163, 'const'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2773, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5565, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8831, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5529, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0592, 'const'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7729, 'const'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_12(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_12'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.6636 * x[0] * x[3] + 0.0514 * x[0] * sympy.cos(x[7]) - 0.7014 * x[0] - 0.4185 * x[1] * sympy.cos(x[6]) - 0.7114 * \
                        x[1] / x[3] - 0.7554 * x[2] * x[5] - 0.1533 * x[2] * x[6] + 0.88 * x[2] - 0.5337 * x[3] * sympy.cos(x[5]) - 0.7555 * \
                        x[3] + 0.8925 * x[3] / x[6] - 0.0674 * x[4] * x[6] - 0.4708 * x[4] * sympy.cos(x[0]) + 0.0236 * x[4] - 0.94 * x[
                            7] - 0.0712 - 0.8661 / x[6] + 0.5625 / x[5] - 0.7053 * x[4] / x[1] + 0.5031 / x[1] - 0.7846 * sympy.sin(x[5]) / \
                        x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.0712, 'const'), ('mul', 'binary'), (0.88, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.7014, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.5031, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.5625, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.94, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.0236, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.7555, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.8661, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8925, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7846, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1533, 'const'), ('X_2', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4185, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0514, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7053, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5337, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7114, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4708, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7554, 'const'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0674, 'const'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6636, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_25(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_25'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.874 * x[0] * x[3] - 0.6623 * x[0] * x[4] + 0.111 * x[0] * sympy.cos(x[5]) - 0.6098 * x[0] + 0.7515 * x[
            1] * sympy.sin(x[0]) - 0.7657 * x[2] * x[6] - 0.1868 * x[2] * sympy.sin(x[3]) - 0.5332 * x[2] + 0.7055 * x[3] * sympy.sin(
            x[5]) - 0.7178 * x[3] * sympy.sin(x[6]) - 0.2422 * x[4] - 0.8042 * sympy.sin(x[0]) * sympy.cos(x[6]) - 0.9046 * sympy.sin(
            x[1]) * sympy.cos(x[6]) - 0.461 * sympy.sin(x[2]) * sympy.sin(x[5]) - 0.1045 * sympy.sin(x[3]) + 0.6553 * sympy.sin(
            x[5]) + 0.3602 * sympy.cos(x[1]) - 0.4391 * sympy.cos(x[6]) + 0.2173 * sympy.cos(x[7]) + 0.8113 + 0.2961 * sympy.cos(x[5]) / x[
                            1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8113, 'const'), ('mul', 'binary'), (-0.1045, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.5332, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.2422, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.3602, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.6098, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.2173, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.6553, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.4391, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.874, 'const'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7178, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9046, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1868, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8042, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2961, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7657, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6623, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.461, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7055, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.111, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7515, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_1', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_21(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_21'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.48 * x[0] * x[1] - 0.9558 * x[0] * x[6] - 0.9723 * x[0] * sympy.sin(x[2]) + 0.9367 * x[0] * sympy.sin(
            x[5]) + 0.877 * x[0] + 0.4311 * x[1] + 0.7556 * x[2] * sympy.cos(x[1]) + 0.5061 * x[2] * sympy.cos(x[6]) + 0.0116 * x[
                            3] + 0.9502 * x[4] * x[7] + 0.7097 * x[4] + 0.0509 * x[5] + 0.8878 * x[6] * sympy.sin(x[1]) - 0.3634 * x[
                            6] + 0.9623 * x[7] + 0.9126 * sympy.sin(x[5]) * sympy.cos(x[7]) + 0.2738 * sympy.sin(x[7]) * sympy.cos(
            x[3]) + 0.6937 - 0.3834 / x[2] + 0.3419 * sympy.sin(x[7]) / x[1] + 0.0707 / (x[1] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6937, 'const'), ('mul', 'binary'), (0.4311, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.7097, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.3834, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.0509, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.9623, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.3634, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.877, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.0116, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9367, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5061, 'const'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.48, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9723, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9502, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3419, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0707, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8878, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9558, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7556, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9126, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2738, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_26(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_26'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.0385 * x[0] * x[2] - 0.1853 * x[1] - 0.2754 * x[1] / x[5] - 0.9574 * x[3] * x[7] + 0.3377 * x[3] + 0.4636 * x[
            4] * x[7] + 0.4249 * x[5] * sympy.sin(x[7]) + 0.6901 * x[5] * sympy.cos(x[3]) + 0.2743 * x[6] - 0.0955 * x[
                            7] + 0.304 * sympy.sin(x[0]) * sympy.sin(x[3]) - 0.999 * sympy.sin(x[2]) * sympy.sin(x[4]) - 0.3804 * sympy.sin(
            x[4]) + 0.4771 * sympy.sin(x[5]) * sympy.cos(x[6]) - 0.5621 * sympy.cos(x[5]) - 0.6342 - 0.5289 / x[2] + 0.3446 * x[4] / x[
                            1] + 0.7322 * sympy.sin(x[7]) / x[1] - 0.1781 * x[5] / x[0] + 0.655 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6342, 'const'), ('mul', 'binary'), (0.2743, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.3804, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.1853, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.0955, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.3377, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.655, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.5289, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.5621, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3446, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2754, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6901, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4249, 'const'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0385, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4771, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7322, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9574, 'const'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.304, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4636, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.999, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1781, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_39(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_39'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.4076 * x[0] * x[7] - 0.6201 * x[0] - 0.1635 * x[2] * x[4] + 0.7999 * x[2] * x[5] + 0.4149 * x[2] * sympy.sin(
            x[6]) - 0.2626 * x[3] * sympy.cos(x[7]) - 0.2366 * x[4] * sympy.cos(x[1]) - 0.4051 * x[5] * x[6] - 0.1557 * x[5] * sympy.cos(
            x[7]) - 0.2856 * x[6] + 0.2352 * x[7] - 0.9197 * sympy.sin(x[2]) - 0.3204 * sympy.sin(x[3]) * sympy.cos(
            x[6]) - 0.1432 * sympy.cos(x[1]) - 0.2322 * sympy.cos(x[4]) + 0.0354 - 0.8936 / x[5] - 0.5236 * sympy.cos(x[0]) / x[
                            3] - 0.7895 / x[3] - 0.0348 * sympy.cos(x[7]) / x[1] + 0.4366 * sympy.cos(x[2]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.0354, 'const'), ('mul', 'binary'), (-0.1432, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.7895, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.2856, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.6201, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.8936, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.2322, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.2352, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.9197, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4051, 'const'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0348, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2626, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5236, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4076, 'const'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2366, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4149, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4366, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3204, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1635, 'const'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1557, 'const'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7999, 'const'),
                                            ('X_2', 'var'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_19(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_19'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.0891 * x[0] - 0.4507 * x[1] * sympy.sin(x[2]) + 0.6341 * x[1] / x[3] + 0.5372 * x[2] - 0.5651 * x[3] * x[
            5] - 0.9607 * x[3] * x[6] - 0.4407 * x[3] - 0.0707 * x[4] / x[6] + 0.5127 * x[5] * sympy.cos(x[4]) - 0.3929 * x[5] * sympy.cos(
            x[7]) + 0.8811 * x[6] - 0.0022 * sympy.sin(x[0]) * sympy.sin(x[3]) + 0.6888 * sympy.sin(x[4]) - 0.9951 * sympy.sin(
            x[7]) * sympy.cos(x[3]) + 0.9339 * sympy.cos(x[5]) + 0.8749 * sympy.cos(x[7]) - 0.219 - 0.4977 * x[7] / x[
                            6] - 0.6679 * sympy.cos(x[0]) / x[5] + 0.6404 * x[3] / x[2] - 0.3355 / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.219, 'const'), ('mul', 'binary'), (0.6888, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.0891, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.3355, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.8811, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.5372, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.9339, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.4407, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.8749, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4507, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9951, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3929, 'const'),
                                            ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6341, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4977, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0022, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5651, 'const'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9607, 'const'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6404, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6679, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5127, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0707, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_38(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_38'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.0992 * x[2] * sympy.cos(x[5]) - 0.1724 * x[2] * sympy.cos(x[7]) + 0.5018 * x[2] - 0.7273 * x[3] * sympy.sin(
            x[5]) + 0.0839 * x[5] + 0.6072 * x[6] * sympy.sin(x[2]) - 0.7893 * x[6] * sympy.cos(x[4]) - 0.9179 * x[6] * sympy.cos(
            x[7]) - 0.9935 * x[7] + 0.9906 * sympy.sin(x[0]) - 0.3899 * sympy.sin(x[3]) + 0.4234 * sympy.cos(x[1]) * sympy.cos(
            x[7]) - 0.3932 * sympy.cos(x[1]) - 0.0087 * sympy.cos(x[4]) - 0.1522 + 0.3935 * sympy.sin(x[0]) / x[6] - 0.3674 / x[
                            6] - 0.7985 / (x[5] * x[7]) - 0.1696 * sympy.sin(x[6]) / x[3] - 0.8791 * sympy.sin(x[4]) / x[2] - 0.5058 * x[
                            5] / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.1522, 'const'), ('mul', 'binary'), (0.5018, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.0839, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.9906, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.9935, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.3932, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.3674, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.3899, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.0087, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3935, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0992, 'const'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6072, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9179, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4234, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7893, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7985, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8791, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5058, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1696, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1724, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7273, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_9(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_9'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.0784 * x[0] * x[5] - 0.3842 * x[0] * sympy.cos(x[2]) - 0.4191 * x[0] + 0.2756 * x[1] - 0.7614 * x[2] * x[
            6] + 0.7068 * x[2] * sympy.sin(x[1]) - 0.7038 * x[3] - 0.7012 * x[4] * x[6] - 0.9363 * x[4] * sympy.sin(x[1]) - 0.0512 * x[
                            5] * sympy.cos(x[7]) - 0.6083 * x[6] * sympy.sin(x[0]) + 0.8147 * x[6] - 0.3579 * x[7] * sympy.sin(
            x[4]) + 0.0506 * sympy.sin(x[4]) + 0.9244 * sympy.sin(x[7]) * sympy.cos(x[3]) + 0.9123 * sympy.cos(x[7]) + 0.2075 + 0.6995 / x[
                            5] + 0.4402 * sympy.sin(x[6]) / x[3] - 0.3162 / x[2] + 0.6247 * x[7] / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.2075, 'const'), ('mul', 'binary'), (0.8147, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.0506, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.9123, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.3162, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.6995, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.7038, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.4191, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.2756, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6247, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7614, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0512, 'const'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9244, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7068, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3842, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6083, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3579, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0784, 'const'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4402, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7012, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9363, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_4', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_32(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_32'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = -0.1566 * x[0] * x[4] - 0.0817 * x[0] * sympy.sin(x[1]) + 0.3684 * x[0] * sympy.cos(x[7]) - 0.9365 * x[
            1] * sympy.sin(x[5]) + 0.5114 * x[1] - 0.1559 * x[1] / x[4] + 0.1797 * x[2] * sympy.cos(x[0]) - 0.7077 * x[2] + 0.5485 * x[
                            3] * sympy.cos(x[4]) - 0.6164 * x[5] * sympy.cos(x[6]) + 0.2332 * x[5] - 0.1134 * x[6] * x[7] - 0.5989 * x[
                            6] * sympy.sin(x[1]) + 0.7083 * sympy.sin(x[0]) - 0.9507 * sympy.sin(x[3]) + 0.7809 * sympy.sin(
            x[4]) - 0.4932 * sympy.cos(x[7]) - 0.9026 - 0.5406 * sympy.cos(x[2]) / x[6] + 0.9485 / x[6] - 0.2618 * sympy.cos(x[6]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9026, 'const'), ('mul', 'binary'), (0.9485, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.5114, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.7809, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.7083, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.2332, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.7077, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.9507, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.4932, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5989, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1134, 'const'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6164, 'const'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1566, 'const'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0817, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1797, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9365, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2618, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1559, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3684, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5485, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5406, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv8_nt812_prog_5(KnownEquation):
    _eq_name = 'sincosinv_nv8_nt812_prog_5'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=8)
        x = self.x
        self.sympy_eq = 0.6485 * x[0] * x[3] + 0.9221 * x[0] * sympy.sin(x[7]) - 0.5453 * x[0] - 0.3852 * x[2] * sympy.sin(x[4]) + 0.6222 * \
                        x[2] * sympy.sin(x[5]) - 0.4615 * x[2] * sympy.cos(x[7]) + 0.6742 * x[2] + 0.5279 * x[3] * x[5] + 0.0688 * x[
                            4] * sympy.sin(x[5]) - 0.427 * x[5] * x[7] - 0.4307 * x[5] - 0.8128 * x[7] + 0.884 * sympy.sin(
            x[0]) * sympy.sin(x[5]) + 0.1617 * sympy.sin(x[3]) * sympy.sin(x[4]) - 0.2719 * sympy.sin(x[3]) + 0.7711 * sympy.sin(
            x[4]) + 0.9153 * sympy.sin(x[6]) + 0.5658 * sympy.cos(x[1]) - 0.822 - 0.863 * x[6] / x[4] + 0.3975 * sympy.sin(x[5]) / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.822, 'const'), ('mul', 'binary'), (-0.2719, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.5658, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.5453, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.6742, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.8128, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.4307, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.7711, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.9153, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5279, 'const'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3975, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3852, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.884, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6485, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1617, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6222, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.427, 'const'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.863, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4615, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9221, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0688, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_46(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_46'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7999 * x[0] / x[4] - 0.8637 * x[1] * x[6] + 0.8578 * x[1] - 0.6198 * x[1] / x[9] - 0.451 * x[2] + 0.5779 * x[4] / \
                        x[8] - 0.8504 * x[7] * x[9] + 0.006 * x[7] - 0.1574 * x[7] / x[8] - 0.6358 * x[9] - 0.3062 - 0.9744 / x[
                            8] - 0.7017 / x[6] + 0.7037 / (x[6] * x[8]) + 0.0267 / (x[6] * x[7]) + 0.8207 * x[7] / x[5] + 0.3553 * x[9] / x[
                            5] - 0.9891 / x[5] - 0.7289 / (x[5] * x[8]) + 0.0386 / x[4] + 0.3067 / (x[4] * x[9]) - 0.8113 * x[8] / x[
                            3] + 0.0801 / x[3] - 0.343 / (x[3] * x[6]) + 0.5551 / (x[2] * x[5]) - 0.5702 / (x[2] * x[4]) + 0.3444 * x[5] / \
                        x[1] - 0.2115 * x[7] / x[1] - 0.1128 / (x[1] * x[4]) - 0.2169 / x[0] - 0.5398 / (x[0] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3062, 'const'), ('mul', 'binary'), (0.006, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.0386, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.6358, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.9744, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.451, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.0801, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.8578, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.7017, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.9891, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.2169, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0267, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5398, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1574, 'const'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8113, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7999, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8637, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5779, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8504, 'const'), ('X_7', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2115, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5551, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5702, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.343, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3067, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3444, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7289, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3553, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1128, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8207, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6198, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7037, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_0(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_0'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.722 * x[0] - 0.9801 * x[1] / x[3] + 0.5439 * x[1] / x[2] + 0.9752 * x[2] * x[6] - 0.3853 * x[2] * x[7] + 0.6018 * \
                        x[2] / x[9] - 0.2726 * x[3] - 0.5132 * x[5] - 0.8628 * x[6] * x[9] + 0.0804 * x[8] - 0.811 * x[8] / x[
                            9] - 0.3639 - 0.5373 / x[9] - 0.165 * x[8] / x[7] - 0.3345 / x[7] + 0.2703 / (x[7] * x[9]) - 0.4032 * x[7] / x[
                            6] - 0.3523 / x[6] + 0.1029 * x[8] / x[5] + 0.3488 / (x[5] * x[9]) + 0.8012 * x[7] / x[4] - 0.7866 / x[
                            4] + 0.0496 * x[8] / x[2] + 0.9877 / x[2] - 0.6782 / (x[2] * x[3]) - 0.0006 / x[1] + 0.0882 / (
                                    x[1] * x[4]) + 0.9635 * x[2] / x[0] + 0.4577 * x[5] / x[0] - 0.851 * x[8] / x[0] - 0.801 / (x[0] * x[6])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3639, 'const'), ('mul', 'binary'), (-0.3523, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.3345, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.7866, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.5373, 'const'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.0804, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.5132, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.2726, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.722, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.9877, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.0006, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.851, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.801, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0496, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5439, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4032, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6782, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.165, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6018, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3488, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3853, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.811, 'const'), ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1029, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8628, 'const'), ('X_6', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4577, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9635, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9801, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9752, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8012, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2703, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0882, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_35(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_35'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9769 * x[0] * x[3] + 0.7239 * x[0] / x[6] + 0.1663 * x[1] * x[3] - 0.4493 * x[1] + 0.0244 * x[1] / x[4] - 0.5711 * \
                        x[2] * x[5] + 0.955 * x[2] * x[9] + 0.4177 * x[3] - 0.2 * x[5] * x[7] - 0.6532 * x[6] / x[9] - 0.547 * x[
                            7] - 0.0869 * x[8] * x[9] + 0.8829 * x[8] + 0.6539 * x[9] + 0.2511 + 0.588 * x[8] / x[6] - 0.8358 / x[
                            6] + 0.7595 / x[5] - 0.8428 / (x[5] * x[6]) - 0.2057 / x[4] + 0.0046 / (x[4] * x[5]) + 0.4074 / x[
                            2] + 0.8448 / (x[2] * x[8]) + 0.2864 / (x[2] * x[4]) + 0.4406 * x[5] / x[1] + 0.1238 * x[9] / x[1] + 0.6656 / (
                                    x[1] * x[7]) + 0.3036 / (x[1] * x[6]) + 0.9472 * x[8] / x[0] + 0.9174 / x[0] + 0.5347 / (x[0] * x[9])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.2511, 'const'), ('mul', 'binary'), (0.6539, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.4177, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.2057, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.4074, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.4493, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.8829, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.8358, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.9174, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.547, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.7595, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1238, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9769, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5711, 'const'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0046, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5347, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3036, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8428, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8448, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.955, 'const'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6532, 'const'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2864, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7239, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.588, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1663, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0869, 'const'),
                                            ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4406, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6656, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9472, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0244, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_8(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_8'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9269 * x[0] - 0.1983 * x[0] / x[4] + 0.7898 * x[2] - 0.7152 * x[2] / x[9] + 0.0157 * x[3] + 0.9694 * x[3] / x[
            9] + 0.9483 * x[3] / x[5] + 0.2218 * x[4] + 0.817 * x[5] - 0.2807 * x[6] - 0.9502 * x[6] / x[8] - 0.4318 * x[7] + 0.0289 * x[
                            7] / x[9] + 0.2033 + 0.5441 / x[9] - 0.8197 / x[8] + 0.4466 * x[8] / x[7] + 0.0661 / (x[6] * x[9]) + 0.5644 * x[
                            9] / x[4] - 0.3332 / (x[4] * x[7]) + 0.141 * x[6] / x[3] + 0.1092 * x[7] / x[3] - 0.8703 * x[3] / x[
                            2] - 0.1297 * x[4] / x[2] - 0.2745 / (x[2] * x[5]) - 0.283 / x[1] + 0.8975 / (x[1] * x[8]) - 0.8215 / (
                                    x[1] * x[2]) - 0.5429 * x[2] / x[0] + 0.21 * x[7] / x[0] - 0.5249 / (x[0] * x[9])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.2033, 'const'), ('mul', 'binary'), (-0.8197, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.5441, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.2807, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.0157, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.2218, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.817, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.4318, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.7898, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.9269, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.283, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1983, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8215, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8703, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4466, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5249, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3332, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9483, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9502, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.141, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2745, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8975, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1092, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5429, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7152, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5644, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1297, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9694, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0661, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.21, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0289, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_42(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_42'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.565 * x[0] + 0.335 * x[0] / x[6] + 0.175 * x[0] / x[5] + 0.4287 * x[0] / x[1] - 0.3924 * x[1] * x[4] - 0.2821 * x[
            2] * x[7] + 0.0575 * x[2] / x[9] - 0.3381 * x[3] * x[9] - 0.9717 * x[4] * x[5] + 0.3577 * x[4] * x[7] + 0.3912 * x[4] - 0.4325 * \
                        x[4] / x[8] + 0.6011 * x[5] - 0.0283 * x[5] / x[6] + 0.4123 * x[6] - 0.2967 * x[8] - 0.1125 * x[8] / x[9] - 0.7076 * \
                        x[9] + 0.8647 - 0.5779 / x[7] + 0.1368 / (x[7] * x[9]) - 0.5165 / (x[6] * x[9]) - 0.2359 / x[3] + 0.9978 / (
                                    x[3] * x[7]) + 0.8543 / x[2] + 0.7547 / (x[2] * x[4]) + 0.782 / x[1] - 0.876 / (
                                    x[1] * x[6]) - 0.5178 / (x[1] * x[5]) + 0.2569 * x[4] / x[0] + 0.7668 / (x[0] * x[8])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8647, 'const'), ('mul', 'binary'), (0.6011, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.782, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.5779, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.2359, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.8543, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.565, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.4123, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.7076, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.3912, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.2967, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3381, 'const'), ('X_3', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7547, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2569, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1368, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1125, 'const'), ('X_8', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9978, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0575, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0283, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3924, 'const'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4325, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.175, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.876, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2821, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7668, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5178, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.335, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4287, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9717, 'const'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3577, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5165, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_33(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_33'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4338 * x[0] * x[4] - 0.1751 * x[0] / x[8] - 0.6566 * x[0] / x[6] + 0.9697 * x[1] * x[4] + 0.2014 * x[1] * x[
            9] - 0.0897 * x[1] / x[6] + 0.6483 * x[2] * x[4] + 0.5397 * x[2] + 0.8546 * x[2] / x[9] + 0.5684 * x[2] / x[8] + 0.1438 * x[4] * \
                        x[6] - 0.6777 * x[4] + 0.8617 * x[5] / x[6] + 0.9014 * x[6] / x[9] - 0.4258 * x[6] / x[7] - 0.1279 * x[7] / x[
                            8] - 0.9004 * x[8] + 0.8813 * x[9] + 0.1384 - 0.6344 / x[7] + 0.1678 / x[6] + 0.1332 / x[5] - 0.9551 * x[5] / x[
                            4] + 0.0841 * x[9] / x[4] - 0.645 / (x[4] * x[8]) + 0.9925 / x[3] + 0.278 / (x[3] * x[6]) + 0.2528 / x[
                            1] + 0.2595 * x[5] / x[0] - 0.2358 * x[9] / x[0] - 0.99 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1384, 'const'), ('mul', 'binary'), (0.9925, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.1678, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.6344, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.1332, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.2528, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.9004, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.99, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.6777, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.5397, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.8813, 'const'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6483, 'const'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.645, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5684, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0897, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1279, 'const'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9697, 'const'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0841, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9551, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2014, 'const'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1438, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9014, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.278, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1751, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8617, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4258, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6566, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4338, 'const'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8546, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2595, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2358, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_20(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_20'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.6862 * x[0] * x[5] + 0.3663 * x[0] + 0.4662 * x[0] / x[8] + 0.806 * x[0] / x[7] + 0.3607 * x[0] / x[4] - 0.2856 * \
                        x[1] * x[7] + 0.4211 * x[1] * x[9] + 0.4267 * x[1] - 0.5986 * x[1] / x[5] - 0.8663 * x[2] * x[4] - 0.5962 * x[2] * \
                        x[6] - 0.7655 * x[2] / x[9] - 0.7719 * x[3] / x[9] - 0.2197 * x[3] / x[4] - 0.4029 * x[4] + 0.9361 * x[6] + 0.8923 * \
                        x[7] + 0.686 * x[8] / x[9] - 0.8834 * x[9] - 0.5387 - 0.7374 / x[8] + 0.8852 / (x[7] * x[8]) - 0.9889 * x[7] / x[
                            6] + 0.1528 / x[5] - 0.6525 / (x[4] * x[8]) - 0.8866 / (x[4] * x[7]) - 0.5664 * x[5] / x[3] + 0.1447 / x[
                            3] - 0.1398 / x[2] + 0.4593 * x[3] / x[0] - 0.4545 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.5387, 'const'), ('mul', 'binary'), (0.1447, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.9361, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.8834, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.8923, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.1398, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.4029, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.4267, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.7374, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.3663, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.1528, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9889, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4662, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7655, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6525, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6862, 'const'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.806, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7719, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4545, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5986, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8852, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.686, 'const'),
                                            ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4593, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4211, 'const'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2197, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8663, 'const'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8866, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2856, 'const'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5664, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5962, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3607, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_14(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_14'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7054 * x[0] * x[9] + 0.1485 * x[0] + 0.7265 * x[1] * x[6] - 0.444 * x[1] * x[9] - 0.9072 * x[1] - 0.3412 * x[1] / \
                        x[7] - 0.6971 * x[2] * x[8] - 0.9771 * x[3] * x[9] - 0.3179 * x[3] - 0.37 * x[3] / x[6] - 0.8216 * x[4] - 0.1358 * \
                        x[4] / x[6] - 0.0302 * x[5] * x[7] + 0.2763 * x[5] * x[8] + 0.0789 * x[5] - 0.1975 * x[5] / x[9] + 0.7196 * x[
                            7] - 0.5084 + 0.7471 / x[9] - 0.7755 / x[8] - 0.7181 / x[6] + 0.7593 * x[6] / x[5] + 0.2499 * x[5] / x[
                            4] - 0.504 * x[9] / x[4] + 0.9119 * x[8] / x[3] - 0.1723 * x[7] / x[2] + 0.1361 / x[2] + 0.5529 / (
                                    x[2] * x[4]) + 0.3763 / (x[1] * x[5]) - 0.6369 * x[6] / x[0] + 0.3356 / (x[0] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.5084, 'const'), ('mul', 'binary'), (-0.9072, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.1361, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.3179, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.7471, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.7181, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.7755, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.8216, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.0789, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.7196, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.1485, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7265, 'const'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3763, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7593, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.37, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2499, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1975, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6971, 'const'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9119, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.504, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.444, 'const'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0302, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7054, 'const'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3356, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3412, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2763, 'const'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9771, 'const'), ('X_3', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6369, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1358, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5529, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1723, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_31(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_31'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.3837 * x[0] * x[2] + 0.984 * x[1] - 0.2844 * x[1] / x[7] + 0.5871 * x[1] / x[2] - 0.2482 * x[2] * x[3] + 0.1136 * \
                        x[2] * x[4] - 0.2715 * x[2] / x[8] + 0.2713 * x[2] / x[6] - 0.8113 * x[3] * x[8] + 0.9337 * x[4] * x[7] - 0.2387 * \
                        x[4] * x[8] + 0.6848 * x[5] * x[9] + 0.075 * x[5] + 0.57 * x[6] - 0.0809 * x[7] / x[9] + 0.0822 * x[
                            8] - 0.1687 - 0.0903 / x[9] + 0.5604 / x[7] - 0.3797 / (x[5] * x[8]) - 0.3144 / (x[5] * x[7]) - 0.6153 / x[
                            4] - 0.2504 / (x[4] * x[5]) + 0.2467 / x[3] - 0.5408 / x[2] + 0.0773 / (x[2] * x[5]) - 0.1747 / (
                                    x[1] * x[3]) - 0.6476 * x[4] / x[0] - 0.014 / x[0] - 0.9931 / (x[0] * x[5]) - 0.3698 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.1687, 'const'), ('mul', 'binary'), (-0.0903, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.57, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.0822, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.014, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.984, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.5408, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.6153, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.5604, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.2467, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.075, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3698, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2387, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6848, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2844, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5871, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2504, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9337, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9931, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2713, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1747, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6476, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1136, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0809, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2482, 'const'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3797, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0773, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3837, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3144, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2715, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8113, 'const'),
                                            ('X_3', 'var'), ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_48(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_48'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8238 * x[0] / x[5] - 0.783 * x[0] / x[3] + 0.1417 * x[1] * x[6] - 0.1327 * x[1] * x[8] - 0.9328 * x[1] / x[
            4] + 0.5674 * x[1] / x[2] - 0.9432 * x[2] - 0.7592 * x[3] + 0.3857 * x[4] * x[5] - 0.346 * x[4] * x[7] + 0.7512 * x[
                            4] - 0.3556 * x[4] / x[9] + 0.3804 * x[5] - 0.981 * x[6] - 0.8637 * x[7] - 0.3875 * x[9] - 0.7156 - 0.5778 / x[
                            8] - 0.061 * x[6] / x[3] - 0.5914 * x[7] / x[2] - 0.8725 * x[8] / x[2] + 0.4482 / (x[2] * x[3]) + 0.825 / x[
                            1] - 0.1156 / (x[1] * x[5]) - 0.4555 / (x[1] * x[3]) - 0.228 * x[1] / x[0] + 0.1791 * x[4] / x[0] - 0.6219 * x[
                            6] / x[0] + 0.9982 * x[9] / x[0] + 0.8106 / x[0] + 0.9588 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7156, 'const'), ('mul', 'binary'), (-0.981, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.9432, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.3875, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.8637, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.3804, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.825, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.5778, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.7592, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.8106, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.7512, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6219, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5914, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1327, 'const'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3556, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.228, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9982, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9588, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1156, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5674, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1417, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8238, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.061, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.783, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4482, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9328, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.346, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3857, 'const'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8725, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4555, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1791, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_41(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_41'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.063 * x[0] / x[9] + 0.2217 * x[0] / x[6] + 0.7247 * x[1] * x[3] - 0.0332 * x[1] * x[7] - 0.4413 * x[1] - 0.2008 * \
                        x[1] / x[4] + 0.1237 * x[2] * x[8] - 0.8533 * x[2] / x[5] + 0.7886 * x[3] * x[6] - 0.0686 * x[4] * x[7] - 0.5202 * \
                        x[7] * x[8] - 0.2649 - 0.1515 / x[9] + 0.3584 / x[8] + 0.1539 / (x[8] * x[9]) + 0.01 / x[7] - 0.7799 / x[
                            6] + 0.166 * x[6] / x[5] - 0.1147 / x[5] - 0.5076 * x[5] / x[4] + 0.3333 / x[4] + 0.1367 * x[8] / x[
                            3] - 0.6918 / x[3] + 0.6399 * x[7] / x[2] + 0.322 / x[2] + 0.4412 / (x[1] * x[9]) - 0.5305 / (
                                    x[1] * x[5]) + 0.1706 * x[1] / x[0] + 0.5948 / x[0] + 0.56 / (x[0] * x[7]) + 0.4674 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2649, 'const'), ('mul', 'binary'), (0.01, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.7799, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.4413, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.3333, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.3584, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.6918, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.5948, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.1515, 'const'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.1147, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.322, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.063, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1706, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2217, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2008, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7886, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5305, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4412, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1367, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5202, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.166, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0332, 'const'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1237, 'const'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4674, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.56, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8533, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1539, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6399, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5076, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7247, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0686, 'const'), ('X_4', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_7(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_7'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5345 * x[1] * x[6] + 0.3359 * x[1] / x[7] + 0.7875 * x[2] * x[4] - 0.741 * x[2] * x[7] - 0.4251 * x[2] - 0.4262 * \
                        x[2] / x[3] - 0.6466 * x[3] * x[7] + 0.9637 * x[5] / x[7] - 0.1202 * x[5] / x[6] + 0.3815 * x[6] * x[8] - 0.9026 * \
                        x[6] + 0.9171 * x[7] / x[9] - 0.5212 * x[9] - 0.8005 - 0.439 / x[8] - 0.7699 / x[7] - 0.4097 * x[8] / x[5] - 0.347 / \
                        x[5] - 0.8402 * x[5] / x[4] - 0.4996 * x[7] / x[4] - 0.4779 / x[4] - 0.7336 / (x[4] * x[9]) + 0.1444 * x[8] / x[
                            3] - 0.392 / x[3] + 0.4128 * x[6] / x[2] + 0.6819 * x[9] / x[2] + 0.1805 / (x[2] * x[8]) - 0.2289 * x[8] / x[
                            1] - 0.5802 / x[1] - 0.2462 * x[1] / x[0] - 0.0681 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8005, 'const'), ('mul', 'binary'), (-0.0681, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.5802, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.4251, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.439, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.7699, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.4779, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.9026, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.5212, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.392, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.347, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2289, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9171, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6466, 'const'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4097, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4996, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6819, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3815, 'const'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1202, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1805, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9637, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3359, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8402, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7336, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.741, 'const'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1444, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4128, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2462, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7875, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5345, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4262, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_37(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_37'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.8848 * x[0] * x[8] + 0.743 * x[0] - 0.6818 * x[1] - 0.91 * x[1] / x[9] + 0.7562 * x[1] / x[5] - 0.4596 * x[1] / \
                        x[4] + 0.3127 * x[2] * x[9] + 0.6514 * x[2] + 0.8604 * x[3] * x[6] - 0.993 * x[3] + 0.3628 * x[4] * x[9] + 0.0176 * \
                        x[5] * x[9] + 0.7811 * x[9] - 0.8225 - 0.6062 * x[9] / x[8] - 0.7613 / x[8] + 0.8433 / x[7] + 0.9315 * x[8] / x[
                            6] - 0.5859 / x[6] + 0.8539 / x[5] - 0.0041 / x[4] - 0.8565 / (x[4] * x[8]) + 0.8302 / (
                                    x[4] * x[6]) + 0.0389 / (x[4] * x[5]) - 0.9923 * x[4] / x[3] - 0.1179 * x[5] / x[3] + 0.7183 / (
                                    x[2] * x[8]) + 0.2983 / (x[2] * x[6]) - 0.8831 / (x[2] * x[5]) - 0.1216 * x[4] / x[0] + 0.6125 * x[6] / \
                        x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8225, 'const'), ('mul', 'binary'), (0.7811, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.5859, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.7613, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.743, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.8433, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.6514, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.8539, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.6818, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.0041, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.993, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6062, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8302, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.91, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2983, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8565, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7562, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1179, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3127, 'const'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0389, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0176, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8848, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9315, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1216, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8604, 'const'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9923, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8831, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6125, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4596, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3628, 'const'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7183, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_15(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_15'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.916 * x[0] * x[5] - 0.8641 * x[0] / x[6] + 0.665 * x[0] / x[4] + 0.7672 * x[3] * x[9] + 0.5485 * x[3] - 0.222 * x[
            3] / x[8] - 0.9446 * x[3] / x[7] - 0.2978 * x[4] * x[7] - 0.2304 * x[4] * x[8] + 0.9667 * x[4] + 0.4705 * x[6] * x[9] + 0.6989 * \
                        x[7] * x[8] + 0.0172 * x[8] - 0.3398 * x[9] - 0.3576 + 0.6026 / x[7] + 0.8324 / x[6] + 0.2034 / x[5] - 0.0945 / (
                                    x[5] * x[6]) - 0.716 * x[9] / x[4] + 0.7878 / x[2] + 0.7607 / (x[2] * x[6]) - 0.7365 / (
                                    x[2] * x[4]) + 0.0083 * x[8] / x[1] + 0.9795 / x[1] - 0.9077 / (x[1] * x[4]) + 0.5112 / (
                                    x[1] * x[2]) - 0.6458 / x[0] + 0.7652 / (x[0] * x[9]) + 0.6268 / (x[0] * x[8]) - 0.6209 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3576, 'const'), ('mul', 'binary'), (0.9795, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.6458, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.9667, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.3398, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.8324, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.2034, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.7878, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.0172, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.5485, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6026, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2304, 'const'),
                                            ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4705, 'const'),
                                            ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6989, 'const'),
                                            ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.916, 'const'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7672, 'const'),
                                            ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0945, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7652, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6268, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8641, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.716, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7607, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9446, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5112, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.222, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0083, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6209, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.665, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2978, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9077, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7365, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_23(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_23'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4121 * x[0] / x[5] + 0.5711 * x[2] * x[9] - 0.6668 * x[2] - 0.1191 * x[2] / x[6] - 0.4444 * x[3] * x[7] + 0.0916 * \
                        x[4] * x[7] - 0.5053 * x[4] + 0.0043 * x[5] * x[8] + 0.5343 * x[5] - 0.8754 * x[6] - 0.4747 * x[
                            7] + 0.0883 - 0.224 / x[9] - 0.8921 / x[8] + 0.0521 / (x[6] * x[9]) + 0.9801 / (x[5] * x[7]) - 0.3865 * x[8] / \
                        x[4] + 0.7803 * x[9] / x[4] - 0.3402 / (x[4] * x[5]) + 0.8753 * x[4] / x[3] - 0.8036 / x[3] + 0.499 / (
                                    x[2] * x[3]) + 0.7966 * x[4] / x[1] - 0.0552 * x[7] / x[1] + 0.9608 * x[8] / x[1] - 0.7798 * x[9] / x[
                            1] - 0.5987 / x[1] + 0.3835 * x[4] / x[0] + 0.8828 * x[6] / x[0] - 0.0208 * x[7] / x[0] - 0.6388 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.0883, 'const'), ('mul', 'binary'), (-0.8921, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.224, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.6668, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.8754, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.6388, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.5053, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.5987, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.4747, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.8036, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.5343, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3402, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8753, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8828, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5711, 'const'), ('X_2', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0208, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3865, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7798, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0043, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4444, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1191, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7966, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9608, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4121, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.499, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0916, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3835, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9801, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0552, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7803, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0521, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_30(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_30'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1615 * x[0] * x[4] + 0.1201 * x[0] + 0.4878 * x[0] / x[5] - 0.7096 * x[1] - 0.3998 * x[3] * x[9] + 0.9811 * x[
            3] + 0.7073 * x[3] / x[7] + 0.5997 * x[4] / x[9] + 0.9203 * x[4] / x[7] + 0.6357 * x[4] / x[5] + 0.6618 * x[5] * x[8] + 0.2657 * \
                        x[5] - 0.6247 * x[5] / x[7] - 0.6839 * x[6] * x[7] + 0.926 * x[7] - 0.1802 * x[8] + 0.4061 * x[
                            9] + 0.6872 + 0.8352 / x[6] + 0.6599 / (x[5] * x[6]) - 0.3471 * x[8] / x[4] + 0.2422 / x[4] - 0.3411 * x[8] / x[
                            3] + 0.0464 / (x[3] * x[6]) + 0.8561 / (x[3] * x[5]) - 0.8119 * x[5] / x[2] + 0.765 / x[2] - 0.8867 / (
                                    x[2] * x[7]) + 0.0694 / (x[1] * x[9]) + 0.8102 * x[1] / x[0] - 0.6172 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6872, 'const'), ('mul', 'binary'), (0.2657, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.765, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.4061, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.7096, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.2422, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.1201, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.1802, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.8352, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.926, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.9811, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3411, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0694, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6618, 'const'),
                                            ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8867, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3471, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6599, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4878, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8102, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5997, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7073, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8561, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8119, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0464, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9203, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1615, 'const'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6247, 'const'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6357, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6172, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3998, 'const'), ('X_3', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6839, 'const'), ('X_6', 'var'),
                                            ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_28(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_28'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.317 * x[0] + 0.2246 * x[1] - 0.9483 * x[2] * x[8] + 0.6164 * x[5] * x[9] - 0.6963 * x[7] * x[9] - 0.6429 * x[
            8] + 0.9909 * x[9] + 0.7088 - 0.6578 / x[7] + 0.248 / (x[7] * x[8]) + 0.6075 * x[9] / x[6] - 0.6056 / x[6] + 0.9907 / (
                                    x[6] * x[8]) + 0.9424 / x[5] + 0.226 / (x[5] * x[7]) + 0.1396 / x[4] + 0.8309 * x[6] / x[3] - 0.0726 * \
                        x[8] / x[3] - 0.717 * x[9] / x[3] + 0.2048 / x[3] + 0.581 * x[3] / x[2] - 0.6612 / x[2] - 0.521 / (
                                    x[2] * x[7]) - 0.3527 / (x[2] * x[4]) + 0.0444 * x[9] / x[1] - 0.9839 / (x[1] * x[6]) - 0.2504 / (
                                    x[1] * x[4]) + 0.6033 / (x[1] * x[3]) - 0.7735 / (x[0] * x[8]) - 0.1503 / (x[0] * x[6]) + 0.7312 / (
                                    x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7088, 'const'), ('mul', 'binary'), (-0.6578, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.6429, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.6056, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.2048, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.9909, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.6612, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.1396, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.2246, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.9424, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.317, 'const'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9907, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3527, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7735, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6164, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6075, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.521, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7312, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.717, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6033, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0726, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9483, 'const'),
                                            ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9839, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.581, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6963, 'const'), ('X_7', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8309, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.248, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.226, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0444, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2504, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1503, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_17(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_17'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7145 * x[0] * x[9] - 0.7001 * x[0] - 0.1844 * x[1] * x[2] + 0.506 * x[1] * x[8] - 0.7385 * x[1] + 0.1438 * x[
            2] - 0.6675 * x[3] + 0.1626 * x[3] / x[7] - 0.9346 * x[3] / x[5] + 0.6765 * x[5] - 0.2019 * x[5] / x[9] + 0.7058 * x[6] * x[
                            8] - 0.379 * x[6] + 0.2597 * x[7] + 0.9046 * x[8] - 0.4528 * x[8] / x[9] - 0.4181 + 0.6524 / x[9] - 0.4321 * x[
                            9] / x[7] - 0.4591 / (x[5] * x[6]) + 0.6291 / x[4] - 0.8858 / (x[4] * x[9]) + 0.8627 * x[9] / x[3] - 0.7877 * x[
                            4] / x[2] - 0.5202 / (x[2] * x[8]) - 0.7988 / (x[2] * x[6]) - 0.5321 / (x[1] * x[9]) + 0.456 / (
                                    x[1] * x[3]) + 0.3065 * x[2] / x[0] + 0.9514 / (x[0] * x[7]) - 0.3319 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4181, 'const'), ('mul', 'binary'), (-0.379, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.7385, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.7001, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.2597, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.6291, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.6524, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.9046, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.1438, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.6675, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.6765, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5321, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7988, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3065, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4591, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5202, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9514, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7877, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1626, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.456, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4528, 'const'), ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2019, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.506, 'const'), ('X_1', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7145, 'const'), ('X_0', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1844, 'const'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8627, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3319, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4321, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8858, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7058, 'const'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9346, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_43(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_43'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.3716 * x[0] * x[8] + 0.9119 * x[1] * x[6] + 0.6053 * x[1] / x[3] + 0.1954 * x[2] * x[4] + 0.1921 * x[
            2] + 0.6983 * x[2] / x[7] - 0.4452 * x[3] * x[5] + 0.4363 * x[3] - 0.0943 * x[3] / x[6] - 0.2496 * x[4] * x[9] - 0.7194 * x[
                            4] + 0.4856 * x[4] / x[8] - 0.9979 * x[5] + 0.3291 * x[5] / x[9] + 0.186 * x[5] / x[7] + 0.8485 * x[6] / x[
                            8] + 0.5553 * x[6] / x[7] - 0.3966 * x[7] * x[9] + 0.6836 - 0.8332 / x[9] + 0.5038 * x[9] / x[8] - 0.1707 / x[
                            8] + 0.9153 / x[7] - 0.4683 / x[6] + 0.486 / (x[3] * x[7]) + 0.2119 * x[3] / x[2] - 0.4637 / x[1] + 0.834 / (
                                    x[1] * x[7]) + 0.9619 * x[2] / x[0] - 0.4122 * x[4] / x[0] - 0.6284 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6836, 'const'), ('mul', 'binary'), (-0.8332, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.4683, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.7194, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.9979, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.4637, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.1921, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.4363, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.9153, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.6284, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.1707, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9619, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1954, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6053, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4122, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.186, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.834, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3291, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9119, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5038, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0943, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6983, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3966, 'const'),
                                            ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4856, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2496, 'const'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2119, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3716, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.486, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4452, 'const'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8485, 'const'), ('X_6', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5553, 'const'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_2(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_2'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9001 * x[0] * x[7] - 0.0827 * x[0] - 0.5866 * x[1] + 0.9533 * x[1] / x[8] + 0.1393 * x[2] * x[4] - 0.094 * x[
            2] - 0.7525 * x[3] / x[9] - 0.8239 * x[4] - 0.6933 * x[4] / x[5] + 0.3509 * x[5] * x[8] + 0.3565 * x[6] + 0.484 * x[
                            8] - 0.7485 * x[9] - 0.8268 + 0.4698 * x[9] / x[8] - 0.6321 / x[7] + 0.3813 * x[7] / x[6] - 0.3728 * x[9] / x[
                            5] + 0.5013 / x[5] - 0.8882 / (x[5] * x[7]) - 0.3803 * x[8] / x[4] + 0.3974 * x[9] / x[4] - 0.3586 / x[
                            3] + 0.961 * x[3] / x[2] + 0.1035 * x[8] / x[2] + 0.409 / (x[1] * x[3]) - 0.7322 * x[1] / x[0] - 0.2788 * x[2] / \
                        x[0] - 0.9745 * x[5] / x[0] - 0.6451 * x[9] / x[0] + 0.889 / (x[0] * x[8])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8268, 'const'), ('mul', 'binary'), (-0.0827, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.094, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.3586, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.6321, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.8239, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.7485, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.5013, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.5866, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.484, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.3565, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9533, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8882, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.889, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7525, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9001, 'const'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1393, 'const'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9745, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3813, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.961, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3974, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3728, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.409, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3803, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7322, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3509, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2788, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6933, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1035, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6451, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4698, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_4(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_4'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5941 * x[0] * x[1] + 0.5049 * x[0] / x[5] + 0.0218 * x[2] + 0.0781 * x[2] / x[6] - 0.4219 * x[2] / x[4] - 0.5179 * \
                        x[3] * x[5] - 0.5839 * x[3] * x[6] - 0.8075 * x[4] / x[9] - 0.2317 * x[6] * x[9] + 0.7884 * x[8] - 0.6872 + 0.526 / \
                        x[9] - 0.293 / x[7] - 0.0847 / (x[7] * x[9]) - 0.4795 / x[6] - 0.3664 / (x[6] * x[7]) - 0.8049 * x[7] / x[
                            5] - 0.5896 * x[9] / x[5] - 0.0408 / x[5] + 0.1595 / (x[5] * x[6]) + 0.273 / x[4] + 0.0589 / x[3] + 0.8623 / (
                                    x[3] * x[9]) + 0.146 / (x[3] * x[7]) - 0.839 / (x[3] * x[4]) - 0.8416 / (x[2] * x[7]) - 0.0942 * x[4] / \
                        x[1] - 0.4368 * x[9] / x[1] + 0.6964 / x[1] - 0.6256 * x[7] / x[0] - 0.7392 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6872, 'const'), ('mul', 'binary'), (0.0589, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.4795, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.526, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.7392, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.293, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.0218, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.6964, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.273, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.7884, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.0408, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8416, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2317, 'const'), ('X_6', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6256, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0847, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5839, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5896, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8049, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1595, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4368, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8075, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.146, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3664, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0942, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5941, 'const'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.839, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8623, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4219, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5049, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5179, 'const'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0781, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_45(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_45'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0167 * x[0] / x[6] + 0.7987 * x[1] + 0.1924 * x[1] / x[9] + 0.7619 * x[1] / x[4] + 0.3502 * x[2] / x[9] - 0.095 * \
                        x[3] * x[9] + 0.392 * x[3] / x[5] + 0.7216 * x[4] / x[9] - 0.1915 * x[5] / x[6] - 0.0137 * x[6] / x[7] + 0.0049 * x[
                            7] + 0.7381 * x[7] / x[9] - 0.6845 * x[8] * x[9] - 0.3212 * x[8] + 0.3613 + 0.6041 / x[9] + 0.0174 / x[
                            6] - 0.0373 * x[8] / x[5] - 0.3798 / x[5] + 0.5089 / x[4] + 0.8519 / (x[4] * x[8]) - 0.6477 / x[3] - 0.0224 / (
                                    x[3] * x[4]) + 0.6047 * x[7] / x[2] + 0.9566 / x[2] + 0.2703 / (x[2] * x[5]) - 0.9064 * x[5] / x[
                            1] + 0.1595 * x[6] / x[1] - 0.0089 / (x[1] * x[2]) - 0.192 * x[9] / x[0] - 0.5895 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3613, 'const'), ('mul', 'binary'), (-0.5895, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.0049, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.5089, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.7987, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.3798, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.9566, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.6477, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.3212, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.0174, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.6041, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0089, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1915, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3502, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6047, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.192, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0137, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8519, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6845, 'const'),
                                            ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.392, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1595, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7619, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9064, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2703, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0167, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1924, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0373, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7381, 'const'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0224, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.095, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7216, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_49(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_49'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.2636 * x[0] * x[8] - 0.6335 * x[0] / x[6] + 0.133 * x[1] * x[5] + 0.0557 * x[1] / x[6] + 0.9125 * x[1] / x[
            4] + 0.4103 * x[2] + 0.586 * x[3] * x[8] + 0.3115 * x[3] / x[5] + 0.1742 * x[4] * x[6] + 0.221 * x[4] - 0.3465 * x[5] / x[
                            9] + 0.7503 * x[5] / x[6] - 0.7032 * x[6] - 0.7681 * x[7] - 0.7337 * x[8] + 0.3467 + 0.8841 / x[9] + 0.3893 * x[
                            8] / x[7] + 0.6961 / x[5] + 0.4489 * x[5] / x[4] - 0.7602 * x[7] / x[4] - 0.887 * x[7] / x[3] + 0.0117 / x[
                            3] - 0.6142 / (x[3] * x[9]) - 0.3136 / (x[2] * x[9]) - 0.8765 * x[7] / x[1] - 0.5636 / x[1] - 0.6312 / (
                                    x[1] * x[3]) + 0.8781 / x[0] - 0.6809 / (x[0] * x[9]) - 0.8507 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3467, 'const'), ('mul', 'binary'), (-0.5636, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.7032, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.8781, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.7337, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.6961, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.0117, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.221, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.7681, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.4103, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.8841, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3115, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4489, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9125, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6809, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2636, 'const'), ('X_0', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.887, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6312, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.133, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7503, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3136, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8507, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8765, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6142, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6335, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1742, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0557, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3893, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.586, 'const'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7602, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3465, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_11(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_11'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.3919 * x[0] - 0.1316 * x[0] / x[7] - 0.603 * x[0] / x[5] + 0.8764 * x[0] / x[3] - 0.0903 * x[1] * x[6] - 0.1114 * \
                        x[2] * x[6] + 0.8447 * x[2] * x[7] - 0.5084 * x[2] + 0.9251 * x[3] - 0.0684 * x[3] / x[9] + 0.3371 * x[3] / x[
                            4] - 0.634 * x[4] * x[8] - 0.4227 * x[5] * x[8] - 0.1188 * x[5] + 0.4817 * x[7] + 0.0217 * x[8] + 0.7802 * x[
                            8] / x[9] - 0.5014 * x[9] - 0.9643 - 0.2964 / x[6] - 0.5605 / (x[5] * x[9]) - 0.2329 / (x[5] * x[6]) - 0.0434 * \
                        x[5] / x[4] - 0.8453 / x[4] - 0.0505 / (x[3] * x[8]) - 0.8211 * x[3] / x[2] + 0.6014 / (x[2] * x[9]) + 0.1244 / (
                                    x[2] * x[5]) + 0.841 * x[5] / x[1] + 0.6333 / x[1] - 0.9036 / (x[1] * x[9])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9643, 'const'), ('mul', 'binary'), (-0.1188, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.8453, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.5084, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.9251, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.3919, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.0217, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.5014, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.6333, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.4817, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.2964, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.634, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4227, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0434, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0505, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1316, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6014, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8447, 'const'), ('X_2', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.603, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0684, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8764, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7802, 'const'), ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0903, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8211, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1244, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9036, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.841, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2329, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1114, 'const'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3371, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5605, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_10(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_10'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7177 * x[0] * x[1] - 0.6289 * x[0] * x[2] - 0.4656 * x[0] * x[3] - 0.4684 * x[1] * x[6] - 0.4074 * x[1] * x[
            8] - 0.4631 * x[5] * x[6] - 0.6047 * x[5] + 0.9891 * x[5] / x[7] + 0.3329 * x[7] - 0.5453 * x[8] - 0.8761 + 0.6712 / x[
                            9] - 0.1194 * x[8] / x[6] + 0.8625 / x[6] - 0.7624 * x[6] / x[4] + 0.0897 / x[4] - 0.2415 / (
                                    x[4] * x[9]) - 0.5685 * x[7] / x[3] - 0.541 / x[3] - 0.1665 / (x[3] * x[6]) - 0.4981 * x[4] / x[
                            2] - 0.8836 / x[2] - 0.9161 / (x[2] * x[7]) + 0.3498 / (x[2] * x[5]) + 0.0054 * x[7] / x[1] + 0.3071 / x[
                            1] + 0.0437 / (x[1] * x[9]) + 0.0832 * x[8] / x[0] + 0.5536 * x[9] / x[0] - 0.4893 / x[0] - 0.1253 / (
                                    x[0] * x[4])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8761, 'const'), ('mul', 'binary'), (-0.541, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.8625, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.3071, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.4893, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.6047, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.6712, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.0897, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.8836, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.5453, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.3329, 'const'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7624, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4981, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0437, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9161, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4656, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0832, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1194, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0054, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9891, 'const'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5685, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5536, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3498, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4684, 'const'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1665, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4074, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4631, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7177, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1253, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2415, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6289, 'const'), ('X_0', 'var'), ('X_2', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_1(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_1'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.5012 * x[0] * x[3] + 0.8744 * x[0] * x[4] - 0.2903 * x[0] / x[5] + 0.5417 * x[0] / x[2] + 0.9794 * x[
            1] - 0.7682 * x[1] / x[9] - 0.8762 * x[1] / x[5] - 0.7089 * x[2] - 0.3762 * x[2] / x[3] - 0.976 * x[3] - 0.0094 * x[3] / x[
                            6] + 0.6397 * x[3] / x[5] + 0.4555 * x[4] + 0.3081 * x[5] - 0.7157 * x[5] / x[9] - 0.8287 * x[5] / x[
                            8] - 0.9577 * x[8] + 0.3284 - 0.346 / x[9] - 0.8117 / x[7] - 0.7636 / (x[7] * x[8]) + 0.77 / x[6] + 0.3688 * x[
                            6] / x[5] + 0.0894 * x[5] / x[4] + 0.8861 * x[7] / x[4] + 0.4117 * x[5] / x[2] + 0.717 * x[7] / x[
                            1] + 0.1921 / (x[1] * x[4]) + 0.8124 / x[0] - 0.9329 / (x[0] * x[8]) - 0.722 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3284, 'const'), ('mul', 'binary'), (0.9794, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.4555, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.976, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.77, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.8124, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.8117, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.3081, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.346, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.9577, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.7089, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1921, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8762, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8287, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.722, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.717, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7636, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0894, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0094, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3762, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5012, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7157, 'const'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3688, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8861, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8744, 'const'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5417, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7682, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4117, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2903, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6397, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9329, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_40(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_40'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1907 * x[0] * x[7] - 0.768 * x[0] / x[6] - 0.0669 * x[0] / x[2] + 0.2603 * x[1] * x[2] - 0.7599 * x[1] / x[
            6] - 0.8499 * x[1] / x[4] + 0.969 * x[2] * x[6] - 0.3206 * x[2] / x[5] + 0.1414 * x[3] + 0.875 * x[3] / x[4] + 0.9211 * x[
                            4] - 0.2251 * x[4] / x[8] + 0.7852 * x[5] * x[6] - 0.9008 * x[5] + 0.4781 * x[6] * x[9] + 0.7121 * x[
                            7] + 0.7197 - 0.9631 / x[9] - 0.0399 / x[8] - 0.2653 / (x[7] * x[8]) - 0.7246 / x[6] - 0.0816 / (
                                    x[5] * x[9]) + 0.2924 * x[7] / x[3] - 0.2584 / x[2] + 0.8413 / (x[2] * x[9]) - 0.2251 / x[1] + 0.523 / (
                                    x[1] * x[9]) + 0.5175 / x[0] + 0.6906 / (x[0] * x[9]) + 0.7641 / (x[0] * x[8]) - 0.51 / (x[0] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7197, 'const'), ('mul', 'binary'), (0.5175, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.1414, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.2584, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.9008, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.9211, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.9631, 'const'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.2251, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.7121, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.7246, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.0399, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7599, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2924, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8499, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4781, 'const'), ('X_6', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.969, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3206, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1907, 'const'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2251, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.875, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6906, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7641, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2603, 'const'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0669, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.51, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.523, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2653, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8413, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7852, 'const'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.768, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0816, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_29(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_29'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4269 * x[0] * x[1] - 0.2812 * x[0] * x[4] + 0.295 * x[0] - 0.3051 * x[0] / x[3] - 0.0715 * x[1] / x[5] - 0.2258 * \
                        x[2] * x[6] + 0.6375 * x[2] * x[8] + 0.5564 * x[3] - 0.0133 * x[4] * x[6] - 0.4355 * x[5] * x[9] + 0.1186 * x[
                            5] - 0.3695 * x[6] * x[8] + 0.3963 * x[8] - 0.294 * x[9] + 0.7033 + 0.4625 / (x[8] * x[9]) - 0.2434 / x[
                            7] + 0.4373 / (x[7] * x[9]) + 0.7914 / (x[7] * x[8]) + 0.9965 / x[6] - 0.1771 / (x[6] * x[9]) + 0.0015 * x[8] / \
                        x[5] + 0.5311 / (x[5] * x[7]) + 0.092 * x[8] / x[4] + 0.3799 / x[4] - 0.1587 * x[7] / x[3] - 0.4103 / x[
                            2] + 0.4272 * x[7] / x[1] + 0.3923 / x[1] + 0.643 / (x[1] * x[9]) - 0.6131 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7033, 'const'), ('mul', 'binary'), (0.5564, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.3799, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.2434, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.9965, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.3963, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.294, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.295, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.3923, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.1186, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.4103, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0715, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5311, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4272, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4625, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6375, 'const'),
                                            ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2258, 'const'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.643, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0015, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4355, 'const'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1587, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1771, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7914, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3695, 'const'), ('X_6', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4269, 'const'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3051, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6131, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2812, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.092, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4373, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0133, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_22(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_22'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2915 * x[0] - 0.002 * x[0] / x[8] + 0.0088 * x[0] / x[4] + 0.8773 * x[0] / x[1] - 0.9287 * x[1] * x[5] + 0.9298 * \
                        x[1] + 0.8 * x[2] + 0.5836 * x[3] * x[9] + 0.4312 * x[3] / x[8] - 0.2766 * x[3] / x[5] - 0.1608 * x[7] * x[
                            8] - 0.7706 * x[7] + 0.4566 + 0.4225 / x[9] + 0.7979 / x[8] + 0.2556 / x[6] + 0.9814 * x[9] / x[5] + 0.5846 / x[
                            5] + 0.0614 * x[5] / x[4] - 0.9529 * x[8] / x[4] + 0.4431 / x[4] - 0.7847 / x[3] - 0.2752 / (
                                    x[3] * x[4]) - 0.789 * x[5] / x[2] - 0.3329 * x[8] / x[2] - 0.4416 / (x[2] * x[7]) + 0.604 / (
                                    x[2] * x[3]) + 0.221 * x[9] / x[1] - 0.582 * x[2] / x[0] - 0.8509 * x[5] / x[0] - 0.1029 * x[7] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.4566, 'const'), ('mul', 'binary'), (0.9298, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.2915, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.2556, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.7706, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.7979, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.4431, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.4225, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.7847, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.5846, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.8, 'const'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0614, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8773, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1029, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0088, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4312, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2766, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9529, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1608, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8509, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9814, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4416, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3329, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5836, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2752, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.604, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9287, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.002, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.789, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.221, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.582, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_2', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_27(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_27'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5349 * x[0] * x[5] - 0.5774 * x[0] + 0.9379 * x[1] / x[2] - 0.0887 * x[2] + 0.0163 * x[2] / x[9] + 0.8263 * x[2] / \
                        x[8] + 0.7774 * x[2] / x[7] - 0.021 * x[2] / x[4] + 0.2053 * x[3] + 0.3991 * x[4] + 0.9408 * x[5] * x[9] + 0.7746 * \
                        x[5] / x[6] + 0.902 * x[6] / x[9] + 0.4023 * x[7] / x[9] + 0.2026 * x[8] + 0.0542 * x[8] / x[9] - 0.4707 - 0.8185 / \
                        x[9] - 0.5731 / x[7] - 0.6713 / x[6] - 0.5332 / x[5] - 0.1335 / (x[5] * x[7]) - 0.4154 * x[7] / x[4] + 0.6173 * x[
                            6] / x[3] - 0.2075 * x[7] / x[3] - 0.6069 * x[6] / x[2] - 0.2956 * x[4] / x[1] - 0.655 / x[1] - 0.2547 * x[3] / \
                        x[0] + 0.8269 * x[6] / x[0] - 0.7122 / (x[0] * x[4])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4707, 'const'), ('mul', 'binary'), (-0.0887, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.5774, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.8185, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.2026, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.5731, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.6713, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.2053, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.655, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.5332, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.3991, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1335, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8263, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2075, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2956, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7122, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7774, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9379, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6173, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0163, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8269, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6069, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4023, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9408, 'const'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5349, 'const'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2547, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7746, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0542, 'const'),
                                            ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4154, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.902, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.021, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_34(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_34'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.1471 * x[0] * x[3] - 0.67 * x[0] * x[8] + 0.5546 * x[0] + 0.0888 * x[1] * x[3] - 0.2445 * x[1] * x[6] + 0.2279 * \
                        x[1] / x[8] + 0.8697 * x[2] * x[4] + 0.6326 * x[2] * x[8] + 0.6489 * x[2] / x[9] - 0.0035 * x[4] + 0.8567 * x[7] / \
                        x[9] + 0.2395 * x[8] * x[9] - 0.633 * x[8] + 0.4054 * x[9] - 0.4256 + 0.7777 / x[7] - 0.868 / x[6] + 0.0292 / x[
                            5] - 0.955 / x[3] - 0.5169 / (x[3] * x[9]) - 0.719 / (x[3] * x[7]) - 0.3934 * x[6] / x[2] + 0.7756 / x[
                            2] - 0.4782 * x[5] / x[1] - 0.8935 / x[1] + 0.7047 / (x[1] * x[4]) + 0.5748 / (x[1] * x[2]) + 0.1458 * x[2] / x[
                            0] + 0.2205 * x[4] / x[0] - 0.7374 * x[7] / x[0] + 0.9899 * x[9] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4256, 'const'), ('mul', 'binary'), (-0.633, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.0292, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.7756, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.955, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.7777, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.868, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.0035, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.4054, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.5546, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.8935, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5748, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8697, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2205, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4782, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3934, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9899, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5169, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7374, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1471, 'const'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.67, 'const'), ('X_0', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8567, 'const'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0888, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2395, 'const'),
                                            ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6326, 'const'),
                                            ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.719, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2279, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6489, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7047, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2445, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1458, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_16(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_16'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.8543 * x[0] * x[7] + 0.656 * x[0] + 0.2855 * x[0] / x[3] + 0.0277 * x[0] / x[1] + 0.5602 * x[1] * x[8] - 0.1012 * \
                        x[1] + 0.6866 * x[2] / x[3] + 0.5839 * x[3] - 0.6507 * x[4] * x[6] + 0.2183 * x[4] * x[8] - 0.7435 * x[4] + 0.7886 * \
                        x[5] - 0.5173 * x[6] * x[9] - 0.2293 * x[7] * x[9] + 0.5159 + 0.7357 / x[9] + 0.6676 / x[8] - 0.8983 / x[
                            7] - 0.5147 / x[6] - 0.1275 / (x[6] * x[7]) - 0.1622 * x[7] / x[5] + 0.5986 * x[5] / x[4] - 0.0871 * x[7] / x[
                            4] - 0.1748 / x[2] + 0.4987 / (x[2] * x[6]) - 0.8385 * x[2] / x[1] - 0.6577 * x[6] / x[1] - 0.8669 * x[7] / x[
                            1] + 0.7228 / (x[1] * x[5]) - 0.8968 / (x[0] * x[6]) + 0.2366 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5159, 'const'), ('mul', 'binary'), (0.7357, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.8983, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.5839, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.656, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.6676, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.1012, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.5147, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.7886, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.7435, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.1748, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2366, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8543, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5986, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6866, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1275, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0277, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7228, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6577, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8669, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2293, 'const'),
                                            ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8968, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1622, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2183, 'const'), ('X_4', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5602, 'const'), ('X_1', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4987, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2855, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5173, 'const'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8385, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6507, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0871, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_13(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_13'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1045 * x[0] * x[4] - 0.2389 * x[0] * x[6] + 0.7002 * x[0] * x[7] - 0.716 * x[0] / x[8] - 0.4791 * x[1] * x[
            2] + 0.2426 * x[1] * x[6] - 0.6348 * x[1] * x[9] - 0.6991 * x[1] - 0.9558 * x[2] * x[9] - 0.3708 * x[2] - 0.892 * x[2] / x[
                            4] - 0.2472 * x[3] + 0.9552 * x[3] / x[7] - 0.8605 * x[4] + 0.8041 * x[4] / x[9] - 0.9045 * x[4] / x[
                            8] - 0.7444 * x[5] / x[8] + 0.9568 * x[6] / x[7] + 0.6521 * x[7] - 0.8051 * x[8] - 0.15 * x[9] + 0.963 + 0.923 * \
                        x[8] / x[7] - 0.5207 / x[6] + 0.3604 / (x[6] * x[8]) + 0.3271 / x[5] + 0.1173 / (x[5] * x[9]) + 0.7434 / (
                                    x[5] * x[6]) + 0.2218 / (x[2] * x[7]) - 0.3518 * x[1] / x[0] - 0.9519 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.963, 'const'), ('mul', 'binary'), (-0.2472, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.3708, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.15, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.8051, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.8605, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.5207, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.9519, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.3271, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.6991, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.6521, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4791, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2426, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7444, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1173, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9552, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8041, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7434, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.892, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9568, 'const'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6348, 'const'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1045, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9558, 'const'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3604, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2218, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3518, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2389, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.716, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7002, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.923, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9045, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_47(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_47'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8312 * x[0] * x[8] + 0.0479 * x[1] / x[9] - 0.4959 * x[2] + 0.3702 * x[2] / x[9] - 0.5498 * x[2] / x[8] - 0.2672 * \
                        x[3] * x[5] + 0.0489 * x[3] / x[8] + 0.8783 * x[3] / x[7] - 0.8936 * x[4] * x[8] + 0.0738 * x[4] / x[9] + 0.0664 * \
                        x[4] / x[7] + 0.1422 * x[5] * x[6] + 0.6577 * x[5] / x[8] - 0.2484 * x[7] + 0.6704 * x[8] + 0.4318 * x[8] / x[
                            9] + 0.3555 * x[9] - 0.6638 + 0.6115 / x[6] - 0.9053 / (x[6] * x[9]) - 0.172 / (x[6] * x[7]) + 0.1795 / x[
                            5] + 0.1162 / (x[5] * x[9]) + 0.2435 / x[4] + 0.4582 * x[4] / x[3] - 0.2904 / x[3] + 0.3198 * x[2] / x[
                            1] - 0.8257 * x[7] / x[1] + 0.5769 / x[1] + 0.5319 / x[0] - 0.8847 / (x[0] * x[6])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6638, 'const'), ('mul', 'binary'), (0.2435, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.5319, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.6704, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.4959, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.6115, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.1795, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.2904, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.5769, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.2484, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.3555, 'const'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5498, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6577, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8936, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0489, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0479, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.172, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4318, 'const'), ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4582, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3198, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8783, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9053, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8312, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3702, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8257, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0738, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2672, 'const'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1162, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1422, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0664, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8847, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_36(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_36'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0168 * x[0] * x[9] + 0.144 * x[0] - 0.7455 * x[0] / x[4] - 0.0213 * x[0] / x[2] + 0.469 * x[0] / x[1] - 0.0338 * \
                        x[1] / x[4] - 0.955 * x[2] * x[4] - 0.5948 * x[2] - 0.4939 * x[3] * x[8] + 0.1035 * x[4] / x[6] - 0.2786 * x[4] / x[
                            5] - 0.6258 * x[5] * x[6] + 0.0305 * x[5] - 0.4064 * x[6] * x[8] - 0.6794 * x[7] - 0.4508 * x[8] + 0.3399 * x[
                            8] / x[9] - 0.7302 - 0.6622 / x[9] - 0.8861 / x[6] + 0.6012 / (x[5] * x[8]) - 0.0772 * x[7] / x[4] - 0.9318 / x[
                            4] + 0.1959 / (x[4] * x[8]) - 0.4395 * x[5] / x[3] - 0.8535 / x[3] - 0.5274 / (x[3] * x[9]) + 0.2854 * x[5] / x[
                            2] + 0.2848 * x[9] / x[2] + 0.5714 / x[1] - 0.6974 * x[7] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7302, 'const'), ('mul', 'binary'), (-0.4508, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.6622, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.5948, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.144, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.8861, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.0305, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.8535, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.5714, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.9318, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.6794, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1959, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6012, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0168, 'const'), ('X_0', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.955, 'const'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3399, 'const'), ('X_8', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7455, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4395, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6258, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0338, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4064, 'const'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2786, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0213, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2848, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1035, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6974, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0772, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4939, 'const'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5274, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.469, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2854, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_44(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_44'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4379 * x[0] * x[3] - 0.7809 * x[0] * x[6] + 0.5693 * x[0] + 0.4931 * x[0] / x[4] - 0.5546 * x[1] * x[2] + 0.4695 * \
                        x[1] / x[9] + 0.0453 * x[2] * x[5] + 0.619 * x[2] * x[8] - 0.4718 * x[3] / x[9] - 0.2666 * x[4] * x[6] - 0.3448 * x[
                            4] + 0.8919 * x[4] / x[8] - 0.0088 * x[4] / x[5] + 0.6393 * x[5] - 0.5876 * x[5] / x[8] - 0.2501 * x[6] * x[
                            7] + 0.7335 * x[6] - 0.7409 * x[9] - 0.5993 - 0.9224 / x[8] + 0.7254 / x[7] + 0.8282 / (x[5] * x[7]) + 0.1784 * \
                        x[9] / x[4] + 0.4432 * x[4] / x[3] + 0.5263 * x[7] / x[3] + 0.8786 * x[8] / x[3] - 0.3464 / x[3] - 0.9981 / x[
                            2] - 0.8742 / x[1] - 0.3598 / (x[1] * x[5]) - 0.653 / (x[1] * x[4])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.5993, 'const'), ('mul', 'binary'), (0.7254, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.3448, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.6393, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.3464, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.5693, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.7335, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.7409, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.9981, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.8742, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.9224, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2666, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5263, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8282, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3598, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2501, 'const'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4379, 'const'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1784, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8919, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0088, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8786, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.619, 'const'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4432, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5546, 'const'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0453, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4931, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4695, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.653, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4718, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5876, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7809, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_6(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_6'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.1908 * x[0] + 0.9004 * x[1] * x[2] + 0.5955 * x[1] * x[3] - 0.998 * x[1] * x[7] - 0.6305 * x[1] * x[8] - 0.2763 * \
                        x[1] - 0.7661 * x[1] / x[5] + 0.1793 * x[2] * x[6] - 0.0015 * x[2] / x[7] - 0.4645 * x[2] / x[3] + 0.8005 * x[
                            3] + 0.1597 * x[3] / x[5] - 0.5574 * x[5] - 0.5874 * x[6] / x[7] + 0.2448 * x[7] - 0.2373 * x[
                            9] + 0.0556 - 0.1009 / x[8] - 0.6352 / (x[8] * x[9]) + 0.2094 / (x[7] * x[9]) - 0.6646 / (
                                    x[7] * x[8]) - 0.9419 / x[6] + 0.224 * x[8] / x[5] + 0.7089 * x[9] / x[5] - 0.7977 * x[9] / x[
                            4] - 0.8974 / x[4] + 0.9936 * x[4] / x[2] - 0.63 / x[2] + 0.4965 / (x[2] * x[5]) + 0.2046 * x[6] / x[
                            1] - 0.7758 * x[4] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.0556, 'const'), ('mul', 'binary'), (-0.1009, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.1908, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.2763, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.8005, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.8974, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.63, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.9419, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.2448, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.5574, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.2373, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6646, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2046, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9004, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.224, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0015, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5955, 'const'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1793, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5874, 'const'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7977, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7758, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6352, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1597, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7661, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4645, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7089, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2094, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.998, 'const'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6305, 'const'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9936, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4965, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_18(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_18'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.3781 * x[0] * x[3] - 0.3857 * x[0] + 0.4418 * x[0] / x[7] + 0.6392 * x[0] / x[5] - 0.011 * x[1] - 0.2478 * x[1] / \
                        x[8] + 0.9942 * x[1] / x[4] - 0.4682 * x[1] / x[3] + 0.6633 * x[2] * x[6] - 0.701 * x[3] * x[4] - 0.2887 * x[3] * x[
                            9] + 0.3281 * x[4] * x[9] + 0.3891 * x[4] - 0.3658 * x[5] / x[7] - 0.8104 * x[6] + 0.4546 * x[7] + 0.9895 * x[
                            9] + 0.3531 - 0.0216 / x[8] - 0.1068 * x[8] / x[7] - 0.9595 / x[5] + 0.4502 / (x[4] * x[7]) + 0.8708 / (
                                    x[4] * x[5]) + 0.7418 * x[8] / x[3] - 0.1529 / x[3] - 0.7379 * x[3] / x[2] + 0.5342 / x[2] + 0.9631 * x[
                            2] / x[1] + 0.2069 * x[6] / x[1] + 0.4805 * x[9] / x[0] - 0.7337 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3531, 'const'), ('mul', 'binary'), (-0.8104, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.0216, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.9595, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.3857, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.1529, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.011, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.5342, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.9895, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.4546, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.3891, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4502, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1068, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4805, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9631, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6633, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7337, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2887, 'const'),
                                            ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4418, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2069, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6392, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3281, 'const'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2478, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3781, 'const'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3658, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7379, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4682, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.701, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7418, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8708, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9942, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_3(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_3'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1704 * x[0] * x[3] + 0.6967 * x[0] - 0.5951 * x[0] / x[9] - 0.6432 * x[0] / x[4] - 0.1574 * x[0] / x[
            2] + 0.6281 * x[1] * x[8] + 0.6102 * x[1] - 0.3026 * x[2] * x[9] + 0.2704 * x[2] - 0.274 * x[4] * x[6] - 0.9144 * x[5] * x[
                            6] - 0.9768 * x[5] * x[8] + 0.4817 * x[5] - 0.4247 * x[7] * x[9] + 0.4338 * x[7] + 0.6483 * x[
                            8] - 0.553 - 0.0552 / x[9] - 0.0931 / (x[7] * x[8]) - 0.9912 / x[6] + 0.3267 * x[9] / x[5] - 0.7253 / x[
                            4] + 0.2309 / (x[4] * x[9]) + 0.4643 / x[3] - 0.9533 / (x[3] * x[5]) + 0.8599 * x[6] / x[2] + 0.3629 / (
                                    x[2] * x[8]) + 0.4871 / (x[1] * x[5]) - 0.6394 / (x[1] * x[3]) - 0.2345 * x[8] / x[0] - 0.2993 / (
                                    x[0] * x[6])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.553, 'const'), ('mul', 'binary'), (-0.0552, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.2704, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.4338, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.6483, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.4643, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.4817, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.9912, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.6102, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.7253, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.6967, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1574, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3267, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2345, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2309, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9533, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6394, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2993, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3629, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4871, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1704, 'const'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5951, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4247, 'const'), ('X_7', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0931, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6432, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9144, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3026, 'const'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9768, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8599, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6281, 'const'), ('X_1', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.274, 'const'), ('X_4', 'var'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_24(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_24'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7888 * x[0] * x[5] + 0.4081 * x[0] - 0.6297 * x[0] / x[7] - 0.7741 * x[1] * x[3] - 0.8154 * x[1] * x[5] + 0.8386 * \
                        x[1] / x[6] + 0.5079 * x[1] / x[2] - 0.1165 * x[2] - 0.4961 * x[3] * x[6] + 0.3593 * x[3] + 0.5978 * x[4] * x[
                            5] - 0.2945 * x[5] * x[6] - 0.6359 * x[5] * x[7] - 0.1365 * x[5] * x[8] - 0.1869 * x[5] * x[9] - 0.1216 * x[
                            5] - 0.7341 * x[6] * x[8] - 0.0578 * x[6] - 0.2904 * x[7] + 0.4199 * x[8] - 0.4924 * x[9] + 0.8081 - 0.2614 * x[
                            8] / x[4] + 0.13 * x[9] / x[4] + 0.2578 / x[4] - 0.6311 * x[7] / x[3] - 0.3819 * x[8] / x[3] - 0.589 * x[7] / x[
                            2] - 0.8828 / (x[2] * x[5]) + 0.2128 / x[1] + 0.185 / (x[0] * x[9])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8081, 'const'), ('mul', 'binary'), (-0.1165, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.2578, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.0578, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.4924, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.2904, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.1216, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.3593, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.2128, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.4199, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.4081, 'const'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.589, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.13, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2945, 'const'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.185, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6297, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5978, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4961, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1365, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8154, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8386, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5079, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7341, 'const'), ('X_6', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3819, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7888, 'const'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1869, 'const'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2614, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7741, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6311, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8828, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6359, 'const'), ('X_5', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_12(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_12'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.8864 * x[0] * x[5] - 0.3815 * x[0] * x[9] - 0.7231 * x[1] * x[8] - 0.9055 * x[1] + 0.3791 * x[2] * x[
            9] - 0.7455 * x[3] / x[5] + 0.7842 * x[4] * x[7] - 0.7902 * x[4] * x[8] - 0.5442 * x[4] + 0.3111 * x[5] * x[8] - 0.286 * x[5] / \
                        x[7] - 0.312 * x[6] * x[8] - 0.867 * x[6] - 0.8821 * x[7] / x[8] - 0.0402 * x[8] - 0.0089 * x[8] / x[
                            9] - 0.2158 + 0.5663 / x[9] + 0.8936 / x[7] - 0.6839 / (x[6] * x[7]) + 0.4689 * x[9] / x[5] + 0.09 / x[
                            5] + 0.0343 / x[3] - 0.7366 / x[2] - 0.9016 / (x[2] * x[6]) - 0.5951 / (x[1] * x[3]) - 0.6047 * x[1] / x[
                            0] - 0.633 * x[7] / x[0] - 0.5017 / x[0] + 0.4077 / (x[0] * x[6]) - 0.21 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2158, 'const'), ('mul', 'binary'), (-0.0402, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.9055, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.7366, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.09, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.8936, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.867, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.0343, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.5017, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.5442, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.5663, 'const'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0089, 'const'),
                                            ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3791, 'const'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7902, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.633, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5951, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7455, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.312, 'const'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4689, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.21, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8821, 'const'), ('X_7', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3111, 'const'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8864, 'const'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4077, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3815, 'const'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7231, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6839, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7842, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.286, 'const'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6047, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9016, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_25(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_25'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.2666 * x[0] * x[3] + 0.8271 * x[0] / x[8] - 0.1439 * x[1] / x[9] - 0.2571 * x[2] - 0.3495 * x[3] * x[4] - 0.6282 * \
                        x[3] + 0.3531 * x[4] * x[6] + 0.3676 * x[4] / x[5] + 0.1738 * x[5] * x[8] + 0.7206 * x[5] * x[9] + 0.6882 * x[
                            5] - 0.3402 * x[7] - 0.7776 + 0.8986 / x[9] + 0.4991 * x[9] / x[8] - 0.6126 / x[8] + 0.4237 / (
                                    x[7] * x[8]) + 0.2291 * x[9] / x[6] - 0.9113 / x[6] - 0.4952 / (x[6] * x[8]) - 0.7351 * x[8] / x[
                            4] + 0.1091 / x[4] + 0.2061 * x[6] / x[3] + 0.9331 * x[9] / x[3] + 0.5203 * x[8] / x[2] + 0.8962 / (
                                    x[2] * x[4]) + 0.9879 * x[3] / x[1] + 0.7375 * x[5] / x[1] + 0.9645 / x[1] + 0.44 * x[2] / x[
                            0] + 0.4652 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7776, 'const'), ('mul', 'binary'), (-0.6126, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.3402, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.8986, 'const'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.1091, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.4652, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.2571, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.6282, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.9113, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.9645, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.6882, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7351, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2291, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3676, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1738, 'const'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1439, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4237, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3531, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3495, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7206, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4991, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4952, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.44, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9879, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5203, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7375, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8962, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2061, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2666, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8271, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9331, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_21(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_21'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1238 * x[0] - 0.3648 * x[1] * x[5] - 0.3237 * x[1] + 0.6365 * x[1] / x[2] - 0.5804 * x[2] * x[7] + 0.3919 * x[
            2] / x[6] + 0.3946 * x[3] - 0.6455 * x[3] / x[9] - 0.0973 * x[3] / x[7] - 0.919 * x[3] / x[5] - 0.0595 * x[4] - 0.1334 * x[5] / \
                        x[9] - 0.1823 * x[7] + 0.1067 * x[8] + 0.5395 - 0.1812 / x[9] + 0.6062 * x[7] / x[6] + 0.0024 / x[6] - 0.5154 / x[
                            5] - 0.606 * x[8] / x[4] - 0.907 * x[9] / x[4] + 0.014 / (x[4] * x[7]) + 0.7538 / (x[4] * x[6]) - 0.6008 * x[
                            6] / x[3] + 0.2674 * x[3] / x[2] + 0.4371 * x[8] / x[2] - 0.6195 * x[9] / x[2] - 0.779 / x[2] - 0.0032 / (
                                    x[1] * x[9]) + 0.0057 / (x[1] * x[3]) + 0.8776 * x[5] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5395, 'const'), ('mul', 'binary'), (0.1067, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.3237, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.1823, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.779, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.0024, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.3946, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.0595, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.1812, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.5154, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.1238, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.014, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1334, 'const'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6455, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7538, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0057, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3648, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8776, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.907, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6365, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2674, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0032, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6195, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5804, 'const'), ('X_2', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.919, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.606, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6062, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0973, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4371, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6008, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3919, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_26(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_26'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9033 * x[0] * x[6] - 0.4731 * x[0] * x[8] + 0.6133 * x[1] * x[6] - 0.8877 * x[1] - 0.1577 * x[1] / x[
            2] - 0.2739 * x[2] * x[3] + 0.2032 * x[2] * x[4] + 0.6575 * x[2] - 0.5416 * x[2] / x[6] + 0.1575 * x[3] * x[9] + 0.8014 * x[
                            3] - 0.0395 * x[3] / x[8] - 0.9863 * x[4] * x[6] - 0.0249 * x[5] * x[6] - 0.404 * x[5] + 0.5191 * x[6] / x[
                            8] + 0.2527 * x[7] - 0.138 * x[8] - 0.3739 * x[8] / x[9] + 0.1924 + 0.1805 / x[9] - 0.4869 / x[6] - 0.3457 / x[
                            4] - 0.0054 * x[4] / x[3] + 0.278 * x[7] / x[3] - 0.2137 / (x[3] * x[5]) + 0.6029 * x[7] / x[1] + 0.1208 / (
                                    x[1] * x[3]) - 0.6165 * x[4] / x[0] + 0.7226 / x[0] + 0.0418 / (x[0] * x[2])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1924, 'const'), ('mul', 'binary'), (-0.4869, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.1805, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.8014, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.7226, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.8877, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.6575, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.3457, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.404, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.2527, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.138, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0395, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2739, 'const'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6165, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0054, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1208, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0249, 'const'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9863, 'const'), ('X_4', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2137, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3739, 'const'),
                                            ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6029, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1577, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6133, 'const'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1575, 'const'), ('X_3', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0418, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.278, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2032, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5191, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5416, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4731, 'const'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9033, 'const'), ('X_0', 'var'), ('X_6', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_39(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_39'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.781 * x[0] * x[7] - 0.3896 * x[0] / x[5] - 0.566 * x[1] * x[4] - 0.862 * x[1] * x[5] - 0.8061 * x[1] * x[
            7] - 0.6272 * x[2] - 0.5357 * x[2] / x[4] - 0.8382 * x[3] * x[4] - 0.1358 * x[3] * x[6] - 0.6482 * x[3] + 0.4806 * x[6] * x[
                            9] - 0.656 * x[7] - 0.9559 * x[8] - 0.9631 * x[9] + 0.8658 + 0.1972 / x[6] - 0.8678 / x[5] - 0.6548 / (
                                    x[5] * x[8]) - 0.6114 / x[4] + 0.1187 / (x[4] * x[9]) + 0.5787 / (x[4] * x[8]) - 0.0256 / (
                                    x[4] * x[6]) + 0.9644 * x[8] / x[3] + 0.8244 / (x[3] * x[5]) - 0.8648 / (x[2] * x[7]) + 0.926 * x[6] / \
                        x[1] + 0.945 * x[9] / x[1] - 0.2729 / x[1] - 0.387 / x[0] + 0.9348 / (x[0] * x[6]) - 0.116 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8658, 'const'), ('mul', 'binary'), (-0.6272, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.6482, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.656, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.6114, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.1972, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.9559, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.387, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.2729, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.9631, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.8678, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9348, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8648, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.945, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.862, 'const'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8244, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.566, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.926, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1358, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5357, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5787, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.116, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0256, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3896, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8382, 'const'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6548, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4806, 'const'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9644, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8061, 'const'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1187, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.781, 'const'),
                                            ('X_0', 'var'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_19(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_19'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.2013 * x[0] * x[8] - 0.3188 * x[1] * x[2] + 0.3601 * x[1] * x[3] - 0.0386 * x[1] * x[4] + 0.6484 * x[1] / x[
            8] + 0.7405 * x[2] - 0.3717 * x[3] / x[7] + 0.5274 * x[4] * x[5] + 0.7238 * x[4] * x[6] - 0.1394 * x[5] - 0.8169 * x[5] / x[
                            6] - 0.7728 * x[7] - 0.8743 * x[8] - 0.8265 * x[8] / x[9] + 0.9886 * x[9] - 0.6562 + 0.8478 / (
                                    x[7] * x[9]) - 0.0046 / x[6] - 0.648 / x[4] + 0.4186 * x[8] / x[3] - 0.6629 / x[3] - 0.056 / (
                                    x[3] * x[6]) - 0.0708 * x[3] / x[2] - 0.2357 / (x[2] * x[9]) + 0.8725 / (x[2] * x[7]) - 0.388 / (
                                    x[2] * x[4]) + 0.1286 / x[1] - 0.1447 * x[6] / x[0] + 0.9846 / x[0] + 0.9392 / (
                                    x[0] * x[9]) + 0.5749 / (x[0] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6562, 'const'), ('mul', 'binary'), (-0.6629, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.7728, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.1394, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.9846, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.1286, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.648, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.9886, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.8743, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.7405, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.0046, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3717, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.056, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8725, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2013, 'const'), ('X_0', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6484, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3601, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5749, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8169, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8265, 'const'), ('X_8', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5274, 'const'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0386, 'const'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9392, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7238, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.388, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3188, 'const'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1447, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0708, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8478, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4186, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2357, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_38(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_38'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.8316 * x[0] * x[9] + 0.1166 * x[0] / x[8] + 0.6806 * x[0] / x[4] - 0.648 * x[0] / x[1] + 0.5479 * x[1] * x[
            2] + 0.5572 * x[1] * x[6] - 0.127 * x[1] - 0.8874 * x[1] / x[5] + 0.6467 * x[2] / x[5] - 0.4571 * x[2] / x[4] - 0.6755 * x[3] * \
                        x[4] - 0.7957 * x[3] - 0.3846 * x[3] / x[7] - 0.6696 * x[4] + 0.8954 * x[4] / x[8] + 0.5222 * x[4] / x[7] - 0.6251 * \
                        x[4] / x[6] - 0.5814 * x[5] + 0.3571 * x[7] * x[9] + 0.4999 + 0.1448 / x[9] - 0.4662 / x[8] - 0.5683 / x[
                            7] + 0.2991 / x[6] + 0.7307 * x[8] / x[5] + 0.7237 * x[3] / x[2] - 0.4664 / x[2] + 0.5529 / (
                                    x[2] * x[8]) + 0.9114 * x[4] / x[1] - 0.8064 * x[7] / x[1] - 0.5355 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.4999, 'const'), ('mul', 'binary'), (-0.127, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.4662, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.1448, 'const'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.5683, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.2991, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.5814, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.4664, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.5355, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.7957, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.6696, 'const'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6755, 'const'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7307, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8954, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6467, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5529, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8874, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5479, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3846, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8316, 'const'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4571, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5222, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7237, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6251, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5572, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8064, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.648, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3571, 'const'), ('X_7', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9114, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1166, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6806, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_9(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_9'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4202 * x[0] * x[2] - 0.253 * x[0] * x[8] - 0.893 * x[1] - 0.1714 * x[1] / x[8] + 0.7831 * x[1] / x[2] - 0.4963 * \
                        x[2] * x[7] - 0.1192 * x[2] * x[8] + 0.023 * x[2] + 0.5538 * x[3] * x[6] + 0.9914 * x[3] / x[9] - 0.521 * x[
                            4] - 0.7841 * x[5] + 0.3286 * x[6] - 0.5396 * x[7] + 0.092 * x[7] / x[9] + 0.2508 + 0.8076 / x[9] + 0.6749 / x[
                            8] - 0.7823 / (x[8] * x[9]) + 0.6622 / (x[5] * x[7]) + 0.3419 / (x[4] * x[5]) - 0.6436 * x[5] / x[3] + 0.4289 / \
                        x[3] - 0.1696 / (x[3] * x[8]) + 0.698 * x[5] / x[2] - 0.4381 * x[5] / x[1] - 0.4644 / (x[1] * x[9]) - 0.2985 / (
                                    x[1] * x[7]) - 0.1976 / x[0] - 0.5045 / (x[0] * x[7]) + 0.1781 / (x[0] * x[3])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.2508, 'const'), ('mul', 'binary'), (0.023, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.8076, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.7841, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.3286, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.521, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.6749, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.5396, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.893, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.1976, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.4289, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1714, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6622, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2985, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.092, 'const'), ('X_7', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4202, 'const'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3419, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1696, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1192, 'const'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4381, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7823, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6436, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.698, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7831, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5538, 'const'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4963, 'const'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9914, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1781, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4644, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.253, 'const'), ('X_0', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5045, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_32(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_32'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4917 * x[0] * x[8] - 0.6437 * x[0] / x[4] + 0.8507 * x[0] / x[2] + 0.7882 * x[1] * x[2] + 0.9441 * x[1] * x[
            3] + 0.8755 * x[2] + 0.1597 * x[3] * x[9] + 0.934 * x[4] * x[9] + 0.545 * x[4] - 0.8555 * x[5] * x[7] + 0.1979 * x[7] - 0.4356 * \
                        x[8] + 0.6838 * x[9] + 0.5391 - 0.2441 * x[8] / x[7] - 0.0571 / x[6] + 0.1572 / (x[6] * x[7]) - 0.5854 * x[6] / x[
                            5] - 0.6054 / x[5] + 0.6553 / (x[4] * x[7]) - 0.9197 / x[3] + 0.2237 / (x[3] * x[8]) - 0.5595 * x[5] / x[
                            2] - 0.1519 * x[8] / x[2] - 0.3312 / (x[2] * x[7]) - 0.959 / (x[2] * x[3]) + 0.1912 * x[7] / x[1] - 0.3273 / x[
                            1] - 0.9647 * x[5] / x[0] + 0.4857 * x[9] / x[0] - 0.0207 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5391, 'const'), ('mul', 'binary'), (0.1979, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.8755, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.6054, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.545, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.9197, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.0207, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.4356, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.3273, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.6838, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.0571, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4857, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2237, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3312, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6437, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7882, 'const'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1572, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.959, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5595, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1519, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9647, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5854, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8555, 'const'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2441, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8507, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4917, 'const'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9441, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6553, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.934, 'const'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1912, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1597, 'const'), ('X_3', 'var'), ('X_9', 'var')]


@register_eq_class
class inv_nv10_nt1020_prog_5(KnownEquation):
    _eq_name = 'inv_nv10_nt1020_prog_5'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9045 * x[0] / x[9] + 0.3026 * x[0] / x[2] + 0.6469 * x[1] * x[5] + 0.9673 * x[2] + 0.2053 * x[2] / x[
            9] + 0.9725 * x[4] * x[9] + 0.4613 * x[4] - 0.117 * x[5] + 0.3134 * x[6] * x[7] + 0.691 * x[7] + 0.5378 * x[
                            9] - 0.3358 - 0.4432 / x[8] - 0.3318 / (x[7] * x[8]) - 0.6125 / x[6] + 0.0654 * x[8] / x[5] - 0.7365 / (
                                    x[5] * x[9]) + 0.4318 / x[3] + 0.7911 / (x[3] * x[7]) - 0.9596 / (x[3] * x[4]) + 0.5021 * x[3] / x[
                            2] - 0.1304 * x[4] / x[2] - 0.6038 * x[6] / x[1] - 0.7171 * x[8] / x[1] - 0.4162 / x[1] - 0.9537 / (
                                    x[1] * x[9]) + 0.517 / (x[1] * x[4]) - 0.517 * x[4] / x[0] - 0.4849 / x[0] + 0.9992 / (
                                    x[0] * x[6]) - 0.5288 / (x[0] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3358, 'const'), ('mul', 'binary'), (0.4318, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.9673, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.6125, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.4613, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.4432, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.4849, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.5378, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.691, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.117, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.4162, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5288, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9537, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.517, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7171, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3026, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.517, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6469, 'const'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6038, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1304, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7911, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9992, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3134, 'const'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5021, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7365, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9725, 'const'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2053, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0654, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9045, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3318, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9596, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_46(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_46'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.3958 * x[0] * x[9] + 0.9663 * x[1] * x[2] + 0.3532 * x[1] * x[8] + 0.8175 * x[1] * sympy.cos(x[4]) + 0.2652 * x[
            2] * x[8] - 0.4999 * x[2] * sympy.cos(x[0]) + 0.5199 * x[2] / x[9] + 0.2311 * x[3] * x[5] + 0.9245 * x[3] * sympy.sin(
            x[7]) + 0.1321 * x[3] + 0.8921 * x[5] * sympy.cos(x[4]) - 0.615 * x[6] / x[7] + 0.8969 * x[7] * sympy.cos(x[8]) + 0.5409 * x[
                            7] + 0.0911 * x[8] - 0.8272 * x[9] + 0.1474 * sympy.sin(x[1]) + 0.0245 * sympy.sin(x[2]) + 0.7249 * sympy.sin(
            x[3]) * sympy.cos(x[2]) + 0.9398 * sympy.sin(x[4]) * sympy.sin(x[8]) - 0.1256 * sympy.sin(x[6]) - 0.3961 * sympy.sin(
            x[7]) * sympy.cos(x[2]) - 0.2228 * sympy.cos(x[5]) - 0.7547 - 0.4737 * sympy.sin(x[5]) / x[8] + 0.89 * sympy.cos(x[9]) / x[
                            4] + 0.8707 / x[4] - 0.3646 * sympy.sin(x[1]) / x[3] - 0.0923 * x[9] / x[1] - 0.7141 / (x[1] * x[7]) + 0.7163 / \
                        x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7547, 'const'), ('mul', 'binary'), (0.1474, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.1321, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.8272, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.0911, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.8707, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.7163, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.2228, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.5409, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.0245, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.1256, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4999, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3532, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8969, 'const'), ('X_7', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.615, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9245, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8175, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9663, 'const'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7141, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5199, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.89, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7249, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4737, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2652, 'const'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3958, 'const'), ('X_0', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3646, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9398, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0923, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2311, 'const'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3961, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8921, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_0(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_0'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7257 * x[0] * x[6] - 0.8578 * x[0] * sympy.cos(x[2]) - 0.7765 * x[0] * sympy.cos(x[8]) + 0.6429 * x[0] - 0.9484 * \
                        x[1] * x[9] + 0.3914 * x[1] * sympy.cos(x[3]) + 0.6546 * x[1] / x[8] - 0.8292 * x[2] * x[4] + 0.0662 * x[2] * x[
                            8] + 0.1568 * x[2] * sympy.sin(x[7]) + 0.1521 * x[3] * sympy.cos(x[7]) + 0.6052 * x[3] / x[6] + 0.3658 * x[
                            4] * sympy.sin(x[8]) + 0.0224 * x[4] - 0.1537 * x[5] * x[8] + 0.8822 * x[5] / x[6] - 0.6582 * x[7] - 0.0234 * x[
                            8] * x[9] + 0.1966 * x[9] * sympy.cos(x[4]) - 0.1524 * x[9] + 0.2795 * sympy.sin(x[1]) - 0.6475 * sympy.sin(
            x[8]) * sympy.cos(x[3]) - 0.2007 * sympy.sin(x[8]) + 0.9772 * sympy.cos(x[2]) + 0.8031 * sympy.cos(
            x[6]) - 0.6638 + 0.6247 * sympy.cos(x[0]) / x[9] - 0.6228 * sympy.sin(x[7]) / x[5] - 0.7631 / x[5] + 0.572 / x[3] - 0.4975 * x[
                            3] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6638, 'const'), ('mul', 'binary'), (0.6429, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.572, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.7631, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.2795, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.2007, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.0224, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.8031, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.9772, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.1524, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.6582, 'const'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1537, 'const'),
                                            ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8578, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1521, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7257, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3914, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6247, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6052, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6228, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8292, 'const'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6546, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0662, 'const'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7765, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1568, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0234, 'const'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1966, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9484, 'const'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8822, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3658, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4975, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6475, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_35(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_35'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.6464 * x[0] - 0.6168 * x[1] * sympy.cos(x[2]) - 0.3282 * x[1] * sympy.cos(x[7]) + 0.0816 * x[1] - 0.5657 * x[
            2] + 0.7945 * x[2] / x[5] + 0.1014 * x[2] / x[3] - 0.1456 * x[3] - 0.6906 * x[3] / x[8] + 0.0643 * x[4] + 0.5247 * x[5] * x[
                            6] + 0.6664 * x[5] * sympy.sin(x[4]) + 0.7578 * x[6] * sympy.sin(x[1]) + 0.5097 * x[6] + 0.9031 * x[
                            7] - 0.5402 * x[8] * x[9] + 0.3314 * x[8] * sympy.sin(x[2]) + 0.2523 * x[9] * sympy.sin(
            x[5]) + 0.0327 * sympy.sin(x[0]) * sympy.sin(x[8]) + 0.7388 * sympy.sin(x[2]) * sympy.cos(x[7]) + 0.6498 * sympy.sin(
            x[5]) - 0.5074 * sympy.sin(x[7]) * sympy.cos(x[0]) + 0.3629 * sympy.sin(x[8]) - 0.2526 * sympy.sin(x[9]) * sympy.cos(
            x[2]) + 0.0564 * sympy.sin(x[9]) * sympy.cos(x[3]) - 0.0954 * sympy.sin(x[9]) + 0.6012 - 0.171 * x[9] / x[
                            6] - 0.2001 * sympy.sin(x[4]) / x[6] - 0.8815 * sympy.sin(x[3]) / x[5] + 0.3593 * x[9] / x[4]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6012, 'const'), ('mul', 'binary'), (0.3629, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.5657, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.0816, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.5097, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.1456, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.0643, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.6498, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.9031, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.6464, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.0954, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7578, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6664, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3593, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7388, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3314, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3282, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7945, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5247, 'const'),
                                            ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6906, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0327, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2526, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.171, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0564, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5402, 'const'), ('X_8', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8815, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2523, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5074, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1014, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2001, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6168, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_8(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_8'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.8833 * x[0] * x[1] - 0.8476 * x[0] - 0.7001 * x[0] / x[9] + 0.9943 * x[0] / x[7] + 0.9938 * x[1] / x[
            9] - 0.5914 * x[2] * x[7] - 0.3311 * x[3] * sympy.cos(x[8]) + 0.1439 * x[4] * x[6] + 0.8677 * x[4] - 0.4814 * x[5] * sympy.sin(
            x[0]) + 0.685 * x[6] + 0.2093 * x[7] + 0.9694 * sympy.sin(x[3]) - 0.3351 * sympy.sin(x[4]) * sympy.sin(
            x[5]) + 0.701 * sympy.cos(x[3]) * sympy.cos(x[9]) - 0.7146 + 0.5044 * sympy.cos(x[4]) / x[9] - 0.5292 / x[9] - 0.4025 * x[9] / \
                        x[8] - 0.1877 / x[8] + 0.5999 * sympy.sin(x[4]) / x[7] - 0.7315 * x[7] / x[6] - 0.1982 * sympy.sin(x[9]) / x[
                            5] - 0.8942 / x[5] - 0.7442 * sympy.sin(x[1]) / x[3] + 0.8386 * sympy.sin(x[2]) / x[3] + 0.6631 * x[5] / x[
                            2] - 0.6218 * x[6] / x[2] - 0.6577 / x[2] - 0.3982 / x[1] + 0.8186 / (x[0] * x[8])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7146, 'const'), ('mul', 'binary'), (-0.5292, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.2093, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.3982, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.9694, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.685, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.8942, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.1877, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.8677, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.8476, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.6577, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4025, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.701, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8386, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9938, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6218, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6631, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1982, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7442, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3311, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8833, 'const'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1439, 'const'), ('X_4', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5044, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7315, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5999, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3351, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5914, 'const'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9943, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8186, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7001, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4814, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_42(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_42'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.2894 * x[0] * sympy.sin(x[1]) - 0.7318 * x[0] * sympy.sin(x[9]) - 0.3756 * x[0] / x[5] + 0.1261 * x[
            1] * sympy.cos(x[9]) + 0.34 * x[1] / x[5] + 0.4535 * x[2] * x[3] + 0.4504 * x[2] * x[9] + 0.1679 * x[2] * sympy.sin(
            x[1]) + 0.2175 * x[2] * sympy.cos(x[8]) + 0.1811 * x[2] + 0.1772 * x[2] / x[6] - 0.9889 * x[3] * sympy.cos(x[4]) + 0.6163 * x[
                            3] * sympy.cos(x[7]) + 0.3345 * x[3] + 0.1106 * x[4] * sympy.cos(x[8]) + 0.4931 * x[5] * sympy.sin(
            x[2]) - 0.2096 * x[5] * sympy.cos(x[6]) + 0.7161 * x[6] + 0.1445 * x[7] - 0.6302 * x[9] - 0.3252 * sympy.sin(x[0]) * sympy.sin(
            x[8]) - 0.5797 * sympy.sin(x[1]) - 0.7064 * sympy.sin(x[3]) * sympy.cos(x[6]) + 0.04 * sympy.sin(x[5]) - 0.1282 * sympy.sin(
            x[9]) * sympy.cos(x[4]) + 0.3936 * sympy.cos(x[0]) + 0.2678 * sympy.cos(x[8]) + 0.791 - 0.3489 * x[9] / x[6] - 0.537 / x[
                            4] - 0.7638 * sympy.sin(x[3]) / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.791, 'const'), ('mul', 'binary'), (0.3936, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.6302, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.04, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.537, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.1811, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.7161, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.3345, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.1445, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.5797, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.2678, 'const'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3756, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.34, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7638, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1261, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2096, 'const'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2894, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1106, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3252, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4504, 'const'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7064, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1772, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4931, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1679, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6163, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7318, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9889, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2175, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4535, 'const'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1282, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3489, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_33(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_33'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9301 * x[0] * x[3] - 0.5587 * x[0] + 0.3582 * x[2] * x[4] - 0.902 * x[2] * x[5] - 0.1512 * x[2] / x[9] - 0.5471 * \
                        x[3] / x[5] - 0.8927 * x[4] * x[8] + 0.7515 * x[4] + 0.7065 * x[5] * x[7] - 0.5208 * x[5] * x[9] + 0.1516 * x[6] * \
                        x[9] + 0.0388 * x[6] * sympy.sin(x[2]) - 0.5798 * x[6] * sympy.cos(x[0]) + 0.4349 * x[6] * sympy.cos(
            x[1]) + 0.0159 * x[6] - 0.0603 * x[7] / x[8] + 0.5801 * x[8] * sympy.cos(x[0]) + 0.5725 * x[8] * sympy.cos(
            x[6]) - 0.5193 * sympy.sin(x[1]) + 0.9087 * sympy.sin(x[5]) + 0.6508 * sympy.sin(x[8]) - 0.4481 * sympy.cos(
            x[2]) + 0.1161 + 0.9421 / x[9] - 0.0401 * sympy.sin(x[9]) / x[7] + 0.0432 / x[7] + 0.1075 * x[5] / x[4] - 0.6144 / x[
                            3] + 0.9067 / (x[2] * x[8]) + 0.0701 * sympy.cos(x[2]) / x[0] + 0.1934 * sympy.cos(x[4]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1161, 'const'), ('mul', 'binary'), (-0.5193, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.6508, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.5587, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.4481, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.0159, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.9087, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.7515, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.9421, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.0432, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.6144, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5208, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5725, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5798, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1075, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3582, 'const'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9067, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.902, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0401, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9301, 'const'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0701, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7065, 'const'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1516, 'const'),
                                            ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5801, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0603, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0388, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1512, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5471, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1934, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8927, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4349, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_20(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_20'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9607 * x[0] * x[1] + 0.3253 * x[0] - 0.2573 * x[1] * x[8] - 0.1172 * x[1] * sympy.sin(x[4]) + 0.33 * x[
            2] * sympy.cos(x[0]) + 0.2245 * x[3] * sympy.cos(x[4]) - 0.0367 * x[4] * sympy.sin(x[0]) + 0.3931 * x[4] * sympy.sin(
            x[5]) - 0.9417 * x[4] * sympy.sin(x[8]) + 0.2095 * x[4] - 0.8249 * x[5] * x[6] + 0.3138 * x[5] * sympy.cos(x[2]) + 0.9513 * x[
                            5] * sympy.cos(x[8]) - 0.5661 * x[6] * sympy.sin(x[9]) + 0.6592 * x[6] + 0.6347 * x[7] * sympy.cos(
            x[1]) - 0.818 * x[7] - 0.2551 * x[8] - 0.6113 * x[9] - 0.8466 * sympy.sin(x[3]) * sympy.sin(x[8]) + 0.5394 * sympy.sin(
            x[5]) + 0.1622 * sympy.cos(x[1]) - 0.3764 * sympy.cos(x[2]) + 0.8942 * sympy.cos(x[3]) - 0.2881 + 0.8351 * sympy.sin(x[8]) / x[
                            6] - 0.1116 * sympy.sin(x[6]) / x[3] + 0.1693 * x[7] / x[2] + 0.6885 * x[9] / x[2] + 0.2129 * sympy.cos(x[9]) / \
                        x[1] + 0.4966 * x[7] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2881, 'const'), ('mul', 'binary'), (-0.2551, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.6113, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.3764, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.5394, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.6592, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.818, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.1622, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.3253, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.2095, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.8942, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1172, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9513, 'const'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8249, 'const'),
                                            ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3138, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2129, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8466, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1693, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.33, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5661, 'const'), ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1116, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3931, 'const'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9607, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9417, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2573, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6347, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6885, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2245, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8351, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4966, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0367, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_14(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_14'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.0407 * x[0] * x[1] - 0.2851 * x[0] * sympy.cos(x[8]) - 0.3336 * x[0] - 0.0465 * x[1] * x[3] + 0.6632 * x[
            1] + 0.4252 * x[1] / x[4] + 0.242 * x[2] * x[4] + 0.8709 * x[2] - 0.5722 * x[2] / x[9] + 0.3949 * x[3] / x[5] + 0.6688 * x[
                            4] * sympy.sin(x[6]) - 0.6824 * x[4] + 0.2349 * x[4] / x[8] - 0.3012 * x[6] * x[8] - 0.3175 * x[6] + 0.3297 * x[
                            6] / x[7] + 0.4252 * x[8] - 0.0794 * x[9] * sympy.sin(x[4]) - 0.7089 * x[9] + 0.0324 * sympy.sin(
            x[3]) + 0.2763 * sympy.cos(x[3]) * sympy.cos(x[9]) + 0.1161 + 0.024 / x[7] - 0.6119 * x[8] / x[5] + 0.9425 / x[5] - 0.2642 * x[
                            5] / x[4] + 0.2711 * x[4] / x[3] - 0.8597 * x[8] / x[3] + 0.0561 * sympy.sin(x[6]) / x[1] + 0.6322 * sympy.cos(
            x[7]) / x[0] + 0.926 / (x[0] * x[6])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1161, 'const'), ('mul', 'binary'), (-0.3175, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.6824, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.8709, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.0324, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.7089, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.6632, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.3336, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.9425, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.4252, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.024, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3949, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4252, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3012, 'const'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2642, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2763, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.242, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2349, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0561, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6322, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5722, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3297, 'const'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6688, 'const'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2851, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2711, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0407, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8597, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6119, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0465, 'const'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0794, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.926, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_31(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_31'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5793 * x[0] - 0.6408 * x[1] + 0.9249 * x[1] / x[8] + 0.2057 * x[1] / x[7] - 0.7137 * x[2] * x[5] + 0.2491 * x[2] * \
                        x[7] - 0.8483 * x[2] * sympy.sin(x[0]) - 0.6956 * x[2] * sympy.sin(x[9]) - 0.4702 * x[2] * sympy.cos(
            x[8]) + 0.0801 * x[3] * sympy.sin(x[0]) - 0.1175 * x[4] * x[5] + 0.6805 * x[4] - 0.5493 * x[5] * sympy.sin(x[8]) - 0.0477 * x[
                            6] * x[8] + 0.6552 * x[6] * sympy.cos(x[3]) - 0.6504 * x[6] + 0.2797 * x[7] - 0.3264 * x[7] / x[8] - 0.2649 * x[
                            8] - 0.8325 * x[9] * sympy.cos(x[5]) - 0.4413 * x[9] - 0.9687 * sympy.cos(x[3]) * sympy.cos(
            x[9]) - 0.8526 * sympy.cos(x[3]) + 0.8478 * sympy.cos(x[5]) - 0.6606 + 0.6132 * sympy.sin(x[4]) / x[3] + 0.363 / x[2] - 0.2256 * \
                        x[2] / x[1] + 0.5125 * sympy.sin(x[9]) / x[1] + 0.3358 * sympy.sin(x[9]) / x[0] - 0.0054 * sympy.cos(x[5]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6606, 'const'), ('mul', 'binary'), (0.5793, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.8478, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.363, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.2649, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.8526, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.6504, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.6408, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.4413, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.2797, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.6805, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8483, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2491, 'const'), ('X_2', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3358, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4702, 'const'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0801, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6132, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7137, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5125, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2256, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0054, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6552, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5493, 'const'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9687, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8325, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1175, 'const'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3264, 'const'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0477, 'const'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2057, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9249, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6956, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_48(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_48'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.1047 * x[0] * x[3] - 0.3528 * x[0] * sympy.sin(x[1]) - 0.073 * x[0] * sympy.sin(x[5]) + 0.5428 * x[0] - 0.0401 * \
                        x[1] * x[4] - 0.3959 * x[1] + 0.4653 * x[1] / x[8] + 0.5688 * x[2] * x[8] - 0.7606 * x[2] * sympy.cos(
            x[4]) - 0.4438 * x[3] / x[6] - 0.3577 * x[3] / x[4] + 0.3192 * x[4] - 0.7339 * x[5] * sympy.sin(x[3]) + 0.5357 * x[6] + 0.2948 * \
                        x[7] * sympy.sin(x[4]) - 0.605 * x[7] * sympy.cos(x[9]) - 0.858 * x[7] + 0.0732 * x[8] * sympy.sin(x[3]) + 0.7417 * \
                        x[8] + 0.0074 * sympy.sin(x[2]) + 0.7417 * sympy.sin(x[3]) - 0.5088 * sympy.sin(x[6]) * sympy.cos(
            x[1]) + 0.5936 * sympy.cos(x[5]) - 0.8386 * sympy.cos(x[9]) - 0.93 + 0.797 / (x[8] * x[9]) - 0.8912 / (x[6] * x[7]) - 0.3076 * \
                        x[9] / x[4] - 0.6596 * sympy.cos(x[8]) / x[4] - 0.2017 / (x[1] * x[7]) - 0.0197 * sympy.cos(x[8]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.93, 'const'), ('mul', 'binary'), (-0.3959, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.7417, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.0074, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.5357, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.8386, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.7417, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.5428, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.5936, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.3192, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.858, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7339, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2948, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5688, 'const'),
                                            ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3076, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3577, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.073, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0732, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8912, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4438, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5088, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4653, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6596, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0401, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7606, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1047, 'const'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0197, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.605, 'const'),
                                            ('X_7', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2017, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3528, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.797, 'const'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_41(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_41'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.633 * x[0] * x[2] - 0.1636 * x[0] * x[3] + 0.8601 * x[0] * x[6] - 0.1146 * x[0] + 0.0453 * x[1] * x[9] - 0.1159 * \
                        x[1] - 0.9781 * x[2] - 0.8056 * x[2] / x[3] - 0.2413 * x[3] * sympy.sin(x[9]) - 0.4595 * x[4] * x[9] - 0.0928 * x[
                            5] * sympy.sin(x[6]) + 0.5512 * x[5] * sympy.cos(x[0]) + 0.7704 * x[5] + 0.0541 * x[6] * sympy.sin(x[2]) - 0.4 * \
                        x[6] * sympy.cos(x[8]) + 0.8266 * x[6] - 0.7442 * x[7] * sympy.sin(x[2]) - 0.781 * x[7] * sympy.sin(x[6]) + 0.8502 * \
                        x[7] * sympy.sin(x[9]) - 0.9017 * x[8] * sympy.sin(x[0]) + 0.0404 * x[9] + 0.9981 * sympy.sin(x[5]) * sympy.cos(
            x[4]) + 0.5108 * sympy.sin(x[8]) + 0.1063 * sympy.cos(x[0]) * sympy.cos(x[4]) - 0.8832 + 0.2653 * sympy.cos(x[5]) / x[
                            8] + 0.354 * sympy.sin(x[4]) / x[7] + 0.4619 / x[7] - 0.6461 * sympy.cos(x[6]) / x[4] - 0.2188 / x[4] + 0.7577 / \
                        x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8832, 'const'), ('mul', 'binary'), (0.5108, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.8266, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.1159, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.7577, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.4619, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.9781, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.7704, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.2188, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.1146, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.0404, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2413, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9017, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8056, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.633, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.354, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6461, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.781, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0928, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4595, 'const'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9981, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8601, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0541, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1636, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2653, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5512, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8502, 'const'), ('X_7', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4, 'const'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0453, 'const'),
                                            ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1063, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7442, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_7(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_7'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1707 * x[0] * sympy.sin(x[8]) + 0.3147 * x[0] / x[7] + 0.7384 * x[2] * x[9] + 0.1854 * x[2] - 0.3656 * x[3] * x[
            5] - 0.3524 * x[3] * x[7] - 0.227 * x[3] * x[9] + 0.4451 * x[4] * sympy.cos(x[2]) - 0.8738 * x[4] * sympy.cos(x[5]) + 0.2126 * \
                        x[4] * sympy.cos(x[6]) + 0.0181 * x[5] * x[6] + 0.9019 * x[5] * sympy.cos(x[1]) - 0.2227 * x[5] + 0.4987 * x[6] * x[
                            7] - 0.2199 * x[6] + 0.7186 * x[7] * sympy.sin(x[5]) + 0.1142 * x[9] * sympy.cos(x[4]) - 0.8634 * x[
                            9] + 0.4479 * sympy.sin(x[4]) * sympy.cos(x[7]) - 0.9602 * sympy.sin(x[7]) - 0.8511 * sympy.sin(
            x[8]) + 0.8649 * sympy.cos(x[3]) - 0.3636 * sympy.cos(x[4]) - 0.2393 - 0.9329 * sympy.sin(x[5]) / x[9] + 0.9617 * sympy.sin(
            x[7]) / x[9] + 0.6997 / (x[7] * x[8]) + 0.3129 * sympy.sin(x[8]) / x[3] + 0.1811 / (x[2] * x[6]) + 0.4217 / x[1] + 0.5134 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2393, 'const'), ('mul', 'binary'), (-0.8634, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.9602, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.4217, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.8649, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.2199, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.5134, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.3636, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.8511, 'const'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.2227, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.1854, 'const'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1707, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9329, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1142, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9617, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7384, 'const'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3129, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9019, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8738, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1811, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3147, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3524, 'const'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.227, 'const'), ('X_3', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0181, 'const'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4987, 'const'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2126, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7186, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4479, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6997, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4451, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3656, 'const'),
                                            ('X_3', 'var'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_37(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_37'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.2219 * x[0] * x[1] - 0.0302 * x[0] * x[2] - 0.4014 * x[0] * x[5] - 0.0284 * x[0] - 0.7311 * x[1] * x[8] + 0.965 * \
                        x[1] / x[5] - 0.8659 * x[2] + 0.753 * x[4] * x[8] + 0.2421 * x[5] * sympy.cos(x[6]) + 0.9024 * x[5] - 0.6694 * x[
                            6] * x[7] - 0.7362 * x[6] * sympy.cos(x[9]) + 0.4386 * x[6] + 0.8452 * x[7] * sympy.sin(x[8]) + 0.3174 * x[
                            7] + 0.9974 * x[8] * sympy.cos(x[3]) + 0.5904 * x[8] * sympy.cos(x[9]) - 0.8758 * x[9] * sympy.sin(
            x[4]) - 0.7484 * sympy.sin(x[1]) * sympy.cos(x[9]) - 0.3167 * sympy.sin(x[3]) * sympy.cos(x[1]) - 0.9064 * sympy.sin(
            x[7]) * sympy.sin(x[9]) - 0.8555 * sympy.sin(x[8]) + 0.4136 * sympy.cos(x[1]) - 0.7683 * sympy.cos(x[4]) - 0.2062 * sympy.cos(
            x[6]) * sympy.cos(x[8]) + 0.012 + 0.6653 / x[9] - 0.8494 / x[3] - 0.6423 * x[3] / x[2] + 0.6532 * x[9] / x[2] + 0.4184 * x[3] / \
                        x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.012, 'const'), ('mul', 'binary'), (-0.8494, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.4136, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.6653, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.8659, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.3174, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.8555, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.4386, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.7683, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.9024, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.0284, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5904, 'const'), ('X_8', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6423, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3167, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6694, 'const'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.753, 'const'), ('X_4', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7311, 'const'), ('X_1', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2062, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9064, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8452, 'const'), ('X_7', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4184, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6532, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2421, 'const'),
                                            ('X_5', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7362, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.965, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0302, 'const'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2219, 'const'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9974, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4014, 'const'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7484, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8758, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_15(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_15'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7462 * x[0] * x[8] - 0.0769 * x[0] / x[5] - 0.8785 * x[0] / x[4] - 0.7957 * x[0] / x[3] - 0.9163 * x[1] * x[
            6] - 0.4268 * x[1] * sympy.cos(x[7]) + 0.4381 * x[1] - 0.9892 * x[1] / x[5] + 0.9311 * x[2] - 0.4209 * x[3] * x[8] - 0.5794 * x[
                            3] * x[9] + 0.3 * x[4] * x[6] + 0.4614 * x[4] * sympy.sin(x[1]) - 0.4932 * x[4] * sympy.cos(x[9]) + 0.5711 * x[
                            4] - 0.3144 * x[5] * x[8] - 0.2713 * x[5] * sympy.cos(x[9]) - 0.2023 * x[5] - 0.4536 * x[6] - 0.6382 * x[
                            7] * sympy.sin(x[2]) - 0.5553 * x[7] - 0.2634 * x[9] * sympy.cos(x[7]) - 0.6191 * x[9] - 0.1663 * sympy.sin(
            x[1]) * sympy.sin(x[2]) + 0.1888 * sympy.sin(x[6]) * sympy.cos(x[0]) - 0.331 * sympy.cos(x[3]) + 0.8691 + 0.9663 / x[
                            8] + 0.0471 * sympy.cos(x[4]) / x[5] - 0.4077 * x[7] / x[0] - 0.0747 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8691, 'const'), ('mul', 'binary'), (-0.6191, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.4381, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.331, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.9663, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.5553, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.5711, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.0747, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.9311, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.2023, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.4536, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9892, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3144, 'const'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9163, 'const'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6382, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4209, 'const'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4932, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1888, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2713, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7462, 'const'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4614, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4268, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1663, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2634, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4077, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5794, 'const'), ('X_3', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7957, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0471, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0769, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8785, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_23(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_23'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.6093 * x[0] * sympy.sin(x[9]) + 0.0875 * x[0] + 0.3559 * x[1] * x[2] - 0.878 * x[1] / x[4] - 0.5774 * x[
            3] * sympy.sin(x[7]) + 0.5269 * x[4] * x[5] + 0.593 * x[4] * x[7] + 0.3807 * x[4] + 0.1047 * x[5] * x[9] + 0.9149 * x[
                            5] - 0.5771 * x[6] * x[9] + 0.9311 * x[6] * sympy.cos(x[3]) + 0.0587 * x[6] * sympy.cos(x[4]) - 0.2454 * x[
                            7] * sympy.sin(x[6]) - 0.95 * x[7] + 0.8994 * x[8] * x[9] + 0.3095 * x[8] * sympy.sin(x[7]) + 0.7728 * x[
                            8] * sympy.cos(x[3]) - 0.9996 * x[9] - 0.682 * sympy.sin(x[1]) - 0.7689 * sympy.sin(x[5]) * sympy.cos(
            x[8]) + 0.7795 * sympy.sin(x[6]) + 0.9066 * sympy.cos(x[3]) + 0.5686 - 0.9895 * sympy.sin(x[2]) / x[8] - 0.6695 / x[
                            8] + 0.7193 * sympy.cos(x[5]) / x[2] + 0.4252 / x[2] + 0.1846 * x[6] / x[1] - 0.6404 * sympy.sin(x[7]) / x[
                            1] - 0.8431 * x[5] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5686, 'const'), ('mul', 'binary'), (-0.95, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.682, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.9066, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.3807, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.6695, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.9996, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.4252, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.9149, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.0875, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.7795, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1047, 'const'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9311, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5771, 'const'),
                                            ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5774, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2454, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1846, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8431, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.593, 'const'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0587, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8994, 'const'),
                                            ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6404, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3095, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7689, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7728, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.878, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5269, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6093, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7193, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9895, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3559, 'const'), ('X_1', 'var'), ('X_2', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_30(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_30'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.6906 * x[0] * sympy.sin(x[9]) + 0.242 * x[1] * x[4] + 0.7857 * x[1] * sympy.sin(x[6]) - 0.2969 * x[1] / x[
            5] + 0.0837 * x[2] * sympy.sin(x[4]) - 0.5523 * x[2] * sympy.sin(x[8]) - 0.532 * x[2] / x[7] - 0.664 * x[3] * x[9] - 0.3793 * x[
                            3] * sympy.cos(x[4]) + 0.5169 * x[4] * sympy.cos(x[0]) + 0.9792 * x[4] - 0.7149 * x[5] + 0.6195 * x[5] / x[
                            7] + 0.5247 * x[6] * sympy.cos(x[0]) - 0.6173 * x[7] * sympy.sin(x[0]) - 0.238 * x[8] * x[9] - 0.8431 * x[
                            8] * sympy.cos(x[0]) - 0.1474 * x[8] * sympy.cos(x[4]) + 0.1978 * sympy.sin(x[0]) - 0.8342 * sympy.sin(
            x[1]) + 0.9316 * sympy.sin(x[2]) - 0.6134 * sympy.sin(x[3]) * sympy.cos(x[0]) + 0.8949 * sympy.sin(x[3]) * sympy.cos(
            x[2]) + 0.9787 * sympy.sin(x[3]) + 0.9186 * sympy.sin(x[6]) - 0.3061 * sympy.sin(x[7]) + 0.3828 - 0.7316 / x[9] + 0.0808 / x[
                            8] - 0.4992 * sympy.cos(x[8]) / x[7] - 0.6282 / (x[2] * x[5])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3828, 'const'), ('mul', 'binary'), (-0.7316, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.1978, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.7149, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.9787, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.3061, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.0808, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.9186, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.8342, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.9792, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.9316, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1474, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5169, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5523, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6195, 'const'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0837, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2969, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6173, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6906, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6134, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.532, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7857, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5247, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.664, 'const'),
                                            ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8949, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.238, 'const'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.242, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4992, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6282, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8431, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3793, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_28(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_28'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.6753 * x[0] / x[9] - 0.784 * x[0] / x[2] + 0.753 * x[1] * x[8] + 0.8213 * x[2] * x[7] - 0.3509 * x[3] - 0.0074 * \
                        x[3] / x[5] + 0.9734 * x[5] * x[7] + 0.6259 * x[5] * sympy.cos(x[0]) + 0.0434 * x[6] * x[9] - 0.2186 * x[
                            6] - 0.0315 * x[8] * sympy.sin(x[4]) + 0.8452 * x[8] * sympy.cos(x[0]) + 0.1964 * x[8] - 0.307 * sympy.sin(
            x[0]) + 0.332 * sympy.sin(x[2]) * sympy.cos(x[3]) + 0.4368 * sympy.sin(x[4]) * sympy.cos(x[2]) + 0.9419 * sympy.sin(
            x[7]) - 0.9846 * sympy.sin(x[9]) - 0.9532 - 0.8709 * sympy.cos(x[9]) / x[8] + 0.2165 * x[9] / x[5] + 0.6181 * sympy.sin(x[4]) / \
                        x[5] - 0.5584 / x[5] + 0.9743 * x[7] / x[4] - 0.9544 / x[4] + 0.4458 * x[7] / x[3] - 0.379 * sympy.sin(x[6]) / x[
                            2] - 0.1246 / x[2] - 0.2343 / x[1] + 0.6759 * x[1] / x[0] - 0.2454 * x[3] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9532, 'const'), ('mul', 'binary'), (-0.5584, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.3509, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.2186, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.2343, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.9419, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.9846, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.9544, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.1246, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.307, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.1964, 'const'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2165, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.784, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6759, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.753, 'const'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2454, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0074, 'const'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9743, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4458, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6181, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8709, 'const'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.332, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9734, 'const'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0315, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.379, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8213, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8452, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0434, 'const'), ('X_6', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4368, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6753, 'const'),
                                            ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6259, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_17(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_17'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.844 * x[0] * sympy.sin(x[4]) - 0.2245 * x[1] * x[9] - 0.6997 * x[1] * sympy.cos(x[0]) - 0.8416 * x[1] / x[
            7] + 0.3027 * x[2] * x[8] - 0.2365 * x[3] * x[8] + 0.3055 * x[4] - 0.296 * x[5] * sympy.cos(x[8]) + 0.024 * x[6] * sympy.cos(
            x[9]) - 0.1346 * x[6] + 0.69 * x[6] / x[7] + 0.9129 * x[7] - 0.456 * x[8] * sympy.sin(x[6]) - 0.5774 * sympy.sin(
            x[0]) - 0.7528 * sympy.cos(x[1]) - 0.0855 * sympy.cos(x[3]) - 0.5541 * sympy.cos(x[4]) * sympy.cos(x[5]) + 0.9799 * sympy.cos(
            x[5]) - 0.0234 * sympy.cos(x[8]) - 0.0297 - 0.9615 / x[9] - 0.5999 * sympy.cos(x[8]) / x[7] + 0.3373 * sympy.sin(x[6]) / x[
                            3] - 0.9927 / (x[3] * x[5]) + 0.0484 * x[4] / x[2] - 0.035 / x[2] - 0.8242 * sympy.sin(x[2]) / x[1] + 0.7007 / (
                                    x[1] * x[5]) - 0.2673 * x[5] / x[0] + 0.248 * x[8] / x[0] - 0.8 * x[9] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.0297, 'const'), ('mul', 'binary'), (-0.0234, 'const'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.035, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.7528, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.9799, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.3055, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.0855, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.1346, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.5774, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.9129, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.9615, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.844, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8242, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8416, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5541, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3027, 'const'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.69, 'const'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2673, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.296, 'const'),
                                            ('X_5', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0484, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.024, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2365, 'const'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.456, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5999, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7007, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9927, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.248, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6997, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3373, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2245, 'const'), ('X_1', 'var'),
                                            ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_43(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_43'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.5739 * x[0] * x[1] + 0.8773 * x[0] * x[3] + 0.8815 * x[0] * sympy.sin(x[6]) + 0.8733 * x[1] * x[3] + 0.6006 * x[
            1] * sympy.cos(x[5]) - 0.9287 * x[3] * x[4] - 0.7158 * x[3] * sympy.cos(x[8]) - 0.9071 * x[3] + 0.8822 * x[4] * x[8] - 0.1591 * \
                        x[5] * sympy.sin(x[3]) + 0.9606 * x[6] * sympy.cos(x[4]) - 0.7871 * x[6] * sympy.cos(x[9]) + 0.4853 * x[
                            6] + 0.0792 * x[7] * x[8] - 0.9917 * x[7] * x[9] - 0.7012 * x[8] - 0.5669 * x[9] * sympy.sin(x[3]) + 0.0777 * x[
                            9] + 0.4664 * sympy.sin(x[3]) * sympy.cos(x[2]) + 0.5137 * sympy.sin(x[5]) + 0.4883 * sympy.cos(
            x[0]) + 0.734 * sympy.cos(x[4]) - 0.7969 * sympy.cos(x[7]) - 0.9309 + 0.2103 * sympy.sin(x[2]) / x[9] - 0.5041 * sympy.cos(
            x[7]) / x[6] - 0.7325 * sympy.cos(x[6]) / x[2] - 0.2578 / x[2] + 0.3046 / x[1] + 0.9521 * x[8] / x[0] - 0.4677 * sympy.sin(
            x[2]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9309, 'const'), ('mul', 'binary'), (0.5137, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.4883, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.9071, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.2578, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.3046, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.7012, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.734, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.7969, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.0777, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.4853, 'const'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4664, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8822, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6006, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1591, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8733, 'const'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8815, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5669, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9287, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8773, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2103, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4677, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7325, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9521, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0792, 'const'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7158, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9606, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7871, 'const'),
                                            ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5041, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5739, 'const'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9917, 'const'), ('X_7', 'var'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_2(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_2'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4883 * x[0] * sympy.sin(x[8]) + 0.6219 * x[0] * sympy.cos(x[6]) - 0.436 * x[0] - 0.2862 * x[1] * x[6] - 0.5251 * \
                        x[1] - 0.1507 * x[2] / x[3] - 0.5504 * x[3] * x[6] + 0.3743 * x[3] * sympy.cos(x[9]) - 0.6806 * x[3] + 0.422 * x[
                            4] * x[8] + 0.7568 * x[4] * sympy.sin(x[0]) - 0.8646 * x[5] * x[8] + 0.3723 * x[5] * sympy.cos(x[1]) - 0.6839 * \
                        x[5] + 0.7257 * x[5] / x[9] - 0.1887 * x[6] * sympy.sin(x[2]) + 0.1166 * x[7] * sympy.cos(x[2]) + 0.7633 * x[
                            7] * sympy.cos(x[8]) - 0.8568 * x[7] - 0.3486 * x[8] + 0.9298 * x[9] * sympy.cos(x[0]) - 0.4918 * sympy.sin(
            x[3]) * sympy.sin(x[4]) - 0.6437 * sympy.sin(x[4]) + 0.0173 * sympy.sin(x[6]) * sympy.cos(x[4]) - 0.8417 * sympy.sin(
            x[6]) + 0.7818 * sympy.sin(x[9]) + 0.5182 * sympy.cos(x[1]) * sympy.cos(x[3]) - 0.4242 * sympy.cos(x[2]) + 0.8452 + 0.914 / (
                                    x[6] * x[9]) - 0.5372 * x[5] / x[4]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8452, 'const'), ('mul', 'binary'), (-0.3486, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.7818, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.436, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.4242, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.5251, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.6437, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.8417, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.6806, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.8568, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.6839, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5372, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.914, 'const'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8646, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3723, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5182, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2862, 'const'), ('X_1', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1166, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4883, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1507, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9298, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5504, 'const'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7633, 'const'), ('X_7', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.422, 'const'), ('X_4', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4918, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1887, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7257, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6219, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3743, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7568, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0173, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_4(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_4'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2243 * x[0] * sympy.cos(x[4]) - 0.6148 * x[1] - 0.9377 * x[2] * x[7] - 0.6363 * x[2] * x[8] - 0.304 * x[
            2] * sympy.sin(x[6]) - 0.1708 * x[3] * x[7] + 0.2693 * x[3] * sympy.cos(x[8]) + 0.9574 * x[3] - 0.916 * x[4] * x[5] - 0.3233 * \
                        x[4] / x[6] - 0.1442 * x[5] * x[8] - 0.1673 * x[5] * sympy.sin(x[0]) + 0.0242 * x[5] / x[7] - 0.8939 * x[
                            7] + 0.1863 * x[8] * sympy.sin(x[7]) + 0.5787 * x[8] * sympy.cos(x[6]) - 0.1314 * x[8] - 0.1528 * x[
                            9] + 0.9482 * sympy.sin(x[0]) + 0.7503 * sympy.sin(x[1]) * sympy.sin(x[3]) + 0.9907 * sympy.sin(
            x[2]) + 0.2527 * sympy.sin(x[3]) * sympy.cos(x[5]) - 0.1853 * sympy.sin(x[5]) - 0.9023 * sympy.sin(
            x[6]) + 0.4095 + 0.7799 * sympy.cos(x[8]) / x[9] - 0.7116 * sympy.sin(x[4]) / x[8] - 0.4423 / x[4] + 0.3374 * sympy.cos(x[4]) / \
                        x[2] + 0.1571 * x[9] / x[1] + 0.0264 * sympy.cos(x[9]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.4095, 'const'), ('mul', 'binary'), (-0.1853, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.8939, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.9482, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.9023, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.4423, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.1314, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.9907, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.9574, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.1528, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.6148, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5787, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2693, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1863, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7116, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2243, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.304, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0242, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1708, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.916, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3233, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1673, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6363, 'const'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9377, 'const'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7503, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3374, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1442, 'const'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2527, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1571, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7799, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0264, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_45(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_45'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9947 * x[0] * sympy.sin(x[8]) - 0.6196 * x[0] * sympy.cos(x[2]) + 0.4223 * x[0] * sympy.cos(x[5]) - 0.03 * x[
            0] * sympy.cos(x[9]) + 0.304 * x[0] - 0.8948 * x[1] * x[7] - 0.0694 * x[1] - 0.7982 * x[1] / x[6] - 0.5204 * x[2] * x[
                            4] + 0.3498 * x[2] * x[7] - 0.343 * x[2] * x[9] - 0.5374 * x[2] + 0.3796 * x[3] * sympy.sin(x[7]) - 0.1144 * x[
                            4] * x[9] - 0.6776 * x[5] - 0.6397 * x[6] * sympy.sin(x[7]) + 0.5482 * x[6] - 0.9928 * x[7] + 0.4428 * x[8] * x[
                            9] - 0.3157 * x[8] * sympy.cos(x[7]) - 0.8472 * x[8] - 0.4657 * x[9] + 0.8558 * sympy.sin(
            x[3]) - 0.7658 * sympy.sin(x[4]) * sympy.cos(x[0]) + 0.8028 * sympy.sin(x[5]) * sympy.sin(x[7]) + 0.9556 * sympy.cos(
            x[4]) + 0.8033 - 0.8605 * x[6] / x[5] - 0.8085 * sympy.cos(x[3]) / x[5] - 0.2366 * sympy.cos(x[8]) / x[4] - 0.3171 * sympy.sin(
            x[2]) / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8033, 'const'), ('mul', 'binary'), (-0.5374, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.5482, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.8558, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.8472, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.9556, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.9928, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.0694, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.4657, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.304, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.6776, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1144, 'const'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3171, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.03, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9947, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7982, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8605, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8948, 'const'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6397, 'const'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8028, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8085, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5204, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2366, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3498, 'const'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3157, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7658, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3796, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4428, 'const'), ('X_8', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4223, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.343, 'const'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6196, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_49(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_49'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7557 * x[0] * x[4] + 0.2686 * x[0] * sympy.sin(x[3]) + 0.1714 * x[0] / x[7] - 0.6833 * x[1] * sympy.cos(
            x[9]) + 0.1453 * x[1] + 0.8991 * x[3] * sympy.cos(x[4]) + 0.1977 * x[3] + 0.1895 * x[4] * sympy.cos(x[8]) + 0.6788 * x[
                            5] * sympy.sin(x[3]) - 0.3112 * x[5] * sympy.cos(x[1]) + 0.0774 * x[5] * sympy.cos(x[7]) + 0.0949 * x[
                            6] - 0.4463 * x[6] / x[9] - 0.839 * x[6] / x[8] + 0.8434 * x[7] - 0.0786 * x[8] * sympy.sin(x[5]) + 0.5653 * x[
                            8] + 0.7376 * sympy.sin(x[2]) + 0.2654 * sympy.sin(x[3]) * sympy.cos(x[6]) + 0.3323 * sympy.sin(
            x[7]) * sympy.sin(x[9]) + 0.0093 * sympy.sin(x[9]) + 0.1025 * sympy.cos(x[4]) - 0.6586 - 0.457 * sympy.cos(x[0]) / x[
                            9] + 0.4537 * sympy.sin(x[3]) / x[7] - 0.4454 / x[5] + 0.7787 * sympy.sin(x[7]) / x[4] + 0.3502 * sympy.cos(
            x[8]) / x[3] - 0.2481 * sympy.cos(x[1]) / x[2] + 0.6309 * sympy.cos(x[6]) / x[0] - 0.6868 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6586, 'const'), ('mul', 'binary'), (-0.4454, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.1977, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.0093, 'const'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.1025, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.7376, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.1453, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.6868, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.8434, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.0949, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.5653, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6833, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4463, 'const'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4537, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.839, 'const'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3502, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1714, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3112, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2654, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6788, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1895, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8991, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7557, 'const'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.457, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0774, 'const'),
                                            ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7787, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0786, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6309, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2686, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2481, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3323, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('sin', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_11(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_11'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.2077 * x[0] * x[1] + 0.3169 * x[0] * sympy.cos(x[9]) + 0.4814 * x[0] / x[5] - 0.4838 * x[1] * x[7] - 0.1436 * x[
            1] + 0.8899 * x[2] * x[4] + 0.8371 * x[2] * x[5] - 0.8484 * x[2] * sympy.sin(x[9]) + 0.1018 * x[2] - 0.72 * x[3] * x[
                            4] + 0.1355 * x[3] + 0.443 * x[4] * x[5] + 0.0556 * x[4] + 0.8868 * x[5] * sympy.cos(x[3]) - 0.8851 * x[
                            5] + 0.7451 * x[6] - 0.6564 * x[7] * x[8] - 0.8514 * x[7] * sympy.cos(x[4]) + 0.6825 * sympy.sin(
            x[2]) * sympy.cos(x[6]) - 0.2459 * sympy.cos(x[0]) - 0.2827 * sympy.cos(x[1]) * sympy.cos(x[9]) - 0.857 * sympy.cos(
            x[3]) * sympy.cos(x[9]) - 0.9073 * sympy.cos(x[5]) * sympy.cos(x[6]) - 0.6253 * sympy.cos(x[7]) + 0.859 + 0.6427 / x[
                            9] - 0.5231 / x[8] + 0.3279 * sympy.cos(x[7]) / x[5] - 0.2863 / (x[5] * x[9]) - 0.2774 * x[3] / x[2] - 0.8662 * \
                        x[5] / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.859, 'const'), ('mul', 'binary'), (-0.5231, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.1018, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.1355, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.2459, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.6427, 'const'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.1436, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.0556, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.7451, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.6253, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.8851, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8514, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4814, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3169, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3279, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2827, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8371, 'const'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9073, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6564, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8662, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2863, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.443, 'const'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.72, 'const'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6825, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2077, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2774, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.857, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4838, 'const'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8899, 'const'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8484, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8868, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_10(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_10'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9066 * x[0] * x[2] + 0.4698 * x[0] * sympy.cos(x[4]) - 0.6407 * x[0] / x[8] - 0.4762 * x[1] * sympy.sin(
            x[2]) - 0.4285 * x[1] * sympy.sin(x[9]) - 0.3528 * x[1] + 0.8651 * x[2] * x[3] + 0.4991 * x[2] * sympy.cos(x[9]) - 0.1529 * x[
                            2] + 0.0561 * x[2] / x[7] - 0.2635 * x[3] * x[6] + 0.6112 * x[3] * x[9] + 0.6742 * x[3] * sympy.cos(
            x[1]) + 0.3512 * x[3] * sympy.cos(x[5]) - 0.7352 * x[3] + 0.1802 * x[4] * x[8] - 0.7316 * x[4] + 0.0372 * x[5] * sympy.cos(
            x[7]) - 0.4644 * x[6] * x[7] - 0.5128 * x[6] * sympy.cos(x[2]) - 0.4625 * x[6] + 0.6586 * x[7] - 0.0511 * x[9] * sympy.sin(
            x[7]) - 0.2173 * sympy.sin(x[0]) - 0.8533 * sympy.sin(x[5]) * sympy.cos(x[1]) - 0.112 * sympy.sin(x[5]) + 0.6637 * sympy.sin(
            x[8]) + 0.9548 - 0.6336 / x[9] - 0.4987 * sympy.cos(x[8]) / x[2] + 0.8615 * x[7] / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.9548, 'const'), ('mul', 'binary'), (-0.3528, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.112, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.6586, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.7316, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.1529, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.4625, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.7352, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.6336, 'const'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.6637, 'const'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.2173, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4987, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5128, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4644, 'const'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4762, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8533, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8651, 'const'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0511, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4991, 'const'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0372, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4698, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3512, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8615, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6742, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6407, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9066, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0561, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4285, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6112, 'const'), ('X_3', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2635, 'const'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1802, 'const'), ('X_4', 'var'),
                                            ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_1(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_1'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9171 * x[0] * x[5] - 0.8774 * x[0] * x[6] - 0.8032 * x[0] * x[8] + 0.4013 * x[0] * sympy.cos(x[3]) + 0.1648 * x[
            1] * sympy.cos(x[7]) + 0.2296 * x[1] * sympy.cos(x[8]) + 0.9599 * x[1] - 0.1476 * x[2] * x[6] + 0.6559 * x[2] - 0.9807 * x[
                            3] * sympy.sin(x[1]) - 0.8252 * x[4] - 0.1375 * x[7] * sympy.sin(x[3]) + 0.4281 * x[7] * sympy.sin(
            x[6]) - 0.149 * x[7] * sympy.sin(x[8]) + 0.8118 * x[8] * sympy.cos(x[3]) + 0.2772 * x[8] - 0.4849 * x[9] * sympy.sin(
            x[8]) - 0.2669 * x[9] * sympy.cos(x[3]) + 0.5238 * x[9] * sympy.cos(x[5]) - 0.3951 * sympy.cos(x[5]) + 0.3824 * sympy.cos(
            x[6]) * sympy.cos(x[9]) + 0.0963 * sympy.cos(x[6]) - 0.2837 * sympy.cos(x[9]) - 0.2134 + 0.173 / x[7] - 0.6566 * x[8] / x[
                            6] + 0.5702 * sympy.cos(x[6]) / x[4] - 0.0733 / x[3] - 0.355 * sympy.cos(x[5]) / x[1] + 0.3945 * sympy.cos(
            x[1]) / x[0] - 0.9987 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2134, 'const'), ('mul', 'binary'), (-0.2837, 'const'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.0963, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.8252, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.3951, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.9599, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.173, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.6559, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.2772, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.0733, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.9987, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9171, 'const'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4281, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2296, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9807, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1648, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8774, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2669, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4013, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8032, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5702, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5238, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3824, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6566, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.149, 'const'), ('X_7', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4849, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1476, 'const'), ('X_2', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1375, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.355, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8118, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3945, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_1', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_40(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_40'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9633 * x[0] * x[5] - 0.288 * x[1] * x[4] + 0.5009 * x[1] * sympy.cos(x[2]) + 0.9475 * x[1] * sympy.cos(
            x[3]) + 0.9798 * x[1] * sympy.cos(x[5]) + 0.3061 * x[2] * sympy.sin(x[3]) + 0.3124 * x[2] + 0.5683 * x[3] + 0.0214 * x[4] / x[
                            9] - 0.0726 * x[5] * sympy.sin(x[3]) - 0.6203 * x[6] * sympy.cos(x[8]) - 0.1894 * x[7] * sympy.sin(
            x[8]) - 0.4644 * x[7] - 0.3763 * x[8] - 0.9596 * x[9] * sympy.sin(x[7]) + 0.6308 * sympy.sin(x[0]) * sympy.cos(
            x[6]) + 0.4302 * sympy.sin(x[3]) * sympy.sin(x[4]) + 0.5188 * sympy.sin(x[3]) * sympy.cos(x[8]) + 0.7749 * sympy.sin(
            x[5]) * sympy.cos(x[9]) - 0.1746 * sympy.sin(x[9]) * sympy.cos(x[0]) + 0.3115 * sympy.cos(x[1]) + 0.8364 * sympy.cos(
            x[6]) + 0.7649 + 0.4452 / x[9] + 0.8369 / x[5] - 0.2797 * sympy.cos(x[5]) / x[4] + 0.1927 / x[4] + 0.2144 * sympy.cos(x[9]) / x[
                            2] + 0.7597 * x[2] / x[0] + 0.6026 / x[0] - 0.0429 / (x[0] * x[7])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7649, 'const'), ('mul', 'binary'), (0.1927, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.3124, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.8369, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.3763, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.5683, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.3115, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.4452, 'const'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.4644, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.6026, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.8364, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6308, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9596, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1746, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2144, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9633, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1894, 'const'), ('X_7', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7749, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9475, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.288, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9798, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3061, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6203, 'const'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7597, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5009, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0429, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0726, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2797, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4302, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5188, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0214, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_29(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_29'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.6264 * x[1] * x[8] + 0.9323 * x[1] * sympy.cos(x[7]) - 0.3659 * x[2] * x[6] - 0.3207 * x[2] - 0.0246 * x[2] / x[
            3] - 0.6516 * x[3] * x[6] + 0.8478 * x[3] * x[9] - 0.5665 * x[3] - 0.1823 * x[4] * x[6] + 0.1495 * x[4] - 0.4401 * x[
                            5] * sympy.sin(x[1]) + 0.7828 * x[5] * sympy.cos(x[3]) + 0.7361 * x[5] + 0.0705 * x[5] / x[9] + 0.4224 * x[5] / \
                        x[7] + 0.4732 * x[6] + 0.5348 * x[7] / x[9] - 0.3011 * x[8] * sympy.cos(x[2]) + 0.7187 * x[8] / x[9] + 0.8552 * x[
                            9] + 0.3033 * sympy.sin(x[7]) - 0.5322 * sympy.cos(x[0]) * sympy.cos(x[1]) - 0.9138 * sympy.cos(
            x[0]) + 0.4963 * sympy.cos(x[1]) - 0.6253 * sympy.cos(x[6]) * sympy.cos(x[8]) + 0.5065 - 0.0777 / x[8] + 0.8206 * x[8] / x[
                            3] + 0.4585 * sympy.sin(x[4]) / x[2] + 0.2871 * x[7] / x[0] + 0.3416 / (x[0] * x[4])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5065, 'const'), ('mul', 'binary'), (0.1495, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.0777, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.3207, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.3033, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.8552, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.5665, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.4732, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.7361, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.4963, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.9138, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3416, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6253, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9323, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5322, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0705, 'const'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8478, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3011, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6264, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4401, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2871, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3659, 'const'), ('X_2', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8206, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4585, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5348, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7187, 'const'), ('X_8', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7828, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1823, 'const'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4224, 'const'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6516, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0246, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_3', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_22(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_22'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4689 * x[0] * x[8] - 0.6621 * x[0] * sympy.sin(x[2]) - 0.0316 * x[0] - 0.3209 * x[0] / x[6] + 0.4643 * x[1] / x[
            3] - 0.0905 * x[2] * x[8] - 0.7194 * x[2] * sympy.cos(x[3]) + 0.6853 * x[2] - 0.1197 * x[2] / x[7] + 0.0789 * x[3] * sympy.cos(
            x[9]) - 0.2188 * x[4] * x[6] + 0.2478 * x[4] * sympy.cos(x[0]) + 0.3093 * x[4] * sympy.cos(x[5]) - 0.6153 * x[4] + 0.3184 * x[
                            5] + 0.3422 * x[7] * sympy.sin(x[0]) + 0.6905 * x[8] * x[9] - 0.4943 * x[8] + 0.9467 * sympy.sin(
            x[5]) * sympy.sin(x[8]) - 0.7009 * sympy.sin(x[6]) + 0.2538 * sympy.sin(x[7]) + 0.8745 * sympy.cos(x[1]) + 0.3753 * sympy.cos(
            x[3]) - 0.403 * sympy.cos(x[9]) - 0.3123 - 0.7304 * sympy.sin(x[6]) / x[5] + 0.4721 * sympy.cos(x[3]) / x[
                            5] + 0.9061 * sympy.cos(x[2]) / x[4] + 0.1509 * x[2] / x[1] + 0.6084 * sympy.cos(x[7]) / x[1] + 0.107 * x[5] / \
                        x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3123, 'const'), ('mul', 'binary'), (0.2538, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.3753, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.0316, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.6853, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.7009, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.6153, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.8745, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.3184, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.4943, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.403, 'const'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1509, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4689, 'const'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6621, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7194, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9061, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0789, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6084, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7304, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3093, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4643, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.107, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3422, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2478, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3209, 'const'), ('X_0', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2188, 'const'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1197, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4721, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6905, 'const'), ('X_8', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0905, 'const'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9467, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_27(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_27'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.6442 * x[0] * x[1] - 0.8529 * x[1] * x[2] + 0.7795 * x[1] * sympy.sin(x[7]) - 0.9201 * x[1] + 0.628 * x[2] * x[
            8] + 0.1896 * x[2] * x[9] + 0.9893 * x[3] * sympy.sin(x[2]) - 0.6775 * x[3] + 0.6955 * x[4] * x[7] - 0.2761 * x[4] * sympy.sin(
            x[3]) + 0.8806 * x[5] * x[9] - 0.7337 * x[5] * sympy.sin(x[8]) + 0.2417 * x[6] * sympy.sin(x[1]) - 0.3669 * x[6] - 0.5072 * x[
                            7] + 0.5825 * x[8] - 0.3494 * x[9] * sympy.sin(x[1]) - 0.4286 * x[9] - 0.5899 * sympy.sin(x[0]) * sympy.sin(
            x[6]) - 0.6603 * sympy.sin(x[0]) + 0.6813 * sympy.sin(x[1]) * sympy.cos(x[8]) + 0.8158 * sympy.sin(x[4]) * sympy.sin(
            x[8]) - 0.8177 * sympy.sin(x[5]) - 0.479 * sympy.cos(x[0]) * sympy.cos(x[8]) - 0.0749 + 0.2958 * sympy.cos(x[6]) / x[
                            7] - 0.4225 * sympy.sin(x[2]) / x[4] + 0.6494 / x[4] - 0.3854 * x[5] / x[3] + 0.4683 * sympy.sin(x[7]) / x[
                            2] - 0.8765 / x[2]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.0749, 'const'), ('mul', 'binary'), (-0.9201, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.8177, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.3669, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.8765, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.5072, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.6775, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.4286, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.6603, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.6494, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.5825, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3854, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8806, 'const'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.479, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6813, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4683, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8529, 'const'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9893, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7795, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1896, 'const'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6442, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2958, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2417, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4225, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6955, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7337, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2761, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8158, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3494, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.628, 'const'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5899, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_34(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_34'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.3157 * x[0] * sympy.cos(x[9]) + 0.7867 * x[0] - 0.1241 * x[0] / x[3] + 0.4137 * x[1] * x[6] + 0.5492 * x[
            1] * sympy.cos(x[3]) - 0.7742 * x[2] * x[6] + 0.2756 * x[2] * sympy.cos(x[1]) + 0.7738 * x[2] - 0.2707 * x[2] / x[7] + 0.6272 * \
                        x[3] * x[6] - 0.3937 * x[3] * sympy.sin(x[7]) - 0.5183 * x[3] * sympy.sin(x[8]) + 0.4912 * x[3] + 0.2854 * x[4] * x[
                            8] + 0.131 * x[4] * sympy.cos(x[0]) - 0.7493 * x[5] * x[8] - 0.8413 * x[5] * sympy.cos(x[7]) - 0.6909 * x[
                            6] + 0.8471 * x[6] / x[8] - 0.2191 * x[7] + 0.7116 * x[7] / x[8] - 0.1499 * x[8] - 0.5382 * x[9] * sympy.sin(
            x[3]) + 0.8697 * x[9] + 0.9925 * sympy.sin(x[1]) + 0.4752 * sympy.sin(x[4]) * sympy.sin(x[5]) + 0.7237 * sympy.sin(
            x[4]) - 0.1469 * sympy.sin(x[5]) - 0.479 * sympy.sin(x[6]) * sympy.sin(x[7]) - 0.828 - 0.124 * x[5] / x[2]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.828, 'const'), ('mul', 'binary'), (0.7237, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.6909, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.4912, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.1469, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.9925, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.7738, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.1499, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.8697, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.2191, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.7867, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.124, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2756, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2707, 'const'), ('X_2', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.131, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5382, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6272, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3937, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1241, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7493, 'const'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7116, 'const'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8471, 'const'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2854, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7742, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5492, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5183, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4137, 'const'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4752, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8413, 'const'),
                                            ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.479, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3157, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_16(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_16'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.6243 * x[0] * x[6] - 0.2505 * x[0] * sympy.cos(x[9]) - 0.3805 * x[1] * x[2] - 0.3124 * x[1] * x[6] - 0.768 * x[
            1] * sympy.sin(x[4]) - 0.6668 * x[2] + 0.2571 * x[2] / x[7] + 0.9238 * x[3] * sympy.sin(x[9]) - 0.1382 * x[4] * x[8] + 0.8115 * \
                        x[4] - 0.0014 * x[4] / x[5] - 0.879 * x[5] * x[8] - 0.3641 * x[5] * sympy.sin(x[9]) + 0.1801 * x[8] * sympy.sin(
            x[3]) - 0.9633 * x[9] * sympy.sin(x[1]) - 0.1221 * x[9] - 0.4299 * sympy.sin(x[0]) * sympy.sin(x[7]) - 0.0532 * sympy.sin(
            x[8]) - 0.938 * sympy.cos(x[1]) * sympy.cos(x[8]) + 0.9216 * sympy.cos(x[1]) - 0.3492 * sympy.cos(x[3]) * sympy.cos(
            x[5]) + 0.2838 * sympy.cos(x[5]) - 0.3639 * sympy.cos(x[6]) - 0.2427 + 0.3722 / x[7] - 0.9386 * x[7] / x[6] + 0.7391 / x[
                            3] + 0.6143 * x[9] / x[2] + 0.2493 * x[2] / x[0] + 0.1562 * sympy.cos(x[5]) / x[0] - 0.6922 / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2427, 'const'), ('mul', 'binary'), (-0.1221, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.8115, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.0532, 'const'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.2838, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.6922, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.3639, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.7391, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.9216, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.3722, 'const'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.6668, 'const'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6143, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1382, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3641, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9238, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4299, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2493, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.879, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.938, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9633, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3805, 'const'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1562, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2505, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3124, 'const'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6243, 'const'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3492, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0014, 'const'),
                                            ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1801, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2571, 'const'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9386, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.768, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_13(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_13'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.901 * x[0] * x[7] + 0.4787 * x[0] * x[8] - 0.7035 * x[0] / x[2] + 0.6808 * x[1] + 0.4891 * x[3] * x[9] + 0.1125 * \
                        x[3] * sympy.sin(x[2]) - 0.61 * x[3] + 0.9532 * x[3] / x[8] - 0.8198 * x[4] * x[6] - 0.5215 * x[5] * sympy.cos(
            x[1]) + 0.8686 * x[5] - 0.7475 * x[6] * sympy.sin(x[8]) + 0.9768 * x[6] - 0.5253 * x[7] - 0.9538 * x[8] * sympy.sin(
            x[2]) + 0.5861 * x[9] * sympy.cos(x[6]) + 0.5247 * x[9] + 0.4459 * sympy.sin(x[0]) - 0.4595 * sympy.sin(x[3]) * sympy.cos(
            x[1]) + 0.8147 * sympy.sin(x[4]) * sympy.sin(x[7]) - 0.0255 * sympy.sin(x[5]) * sympy.sin(x[8]) + 0.199 * sympy.sin(
            x[8]) - 0.4284 - 0.5779 * sympy.cos(x[4]) / x[8] + 0.2862 * sympy.cos(x[2]) / x[7] + 0.2634 * sympy.cos(x[6]) / x[
                            7] - 0.4163 * sympy.sin(x[2]) / x[4] + 0.1797 / x[4] - 0.2601 / x[2] + 0.0704 * sympy.cos(x[2]) / x[
                            1] + 0.3472 * sympy.sin(x[9]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4284, 'const'), ('mul', 'binary'), (0.5247, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.9768, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.8686, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.5253, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.199, 'const'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.1797, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.2601, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.4459, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.61, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6808, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9538, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0255, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5779, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7475, 'const'), ('X_6', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2634, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3472, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9532, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4595, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.901, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4163, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4787, 'const'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7035, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1125, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5861, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2862, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5215, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8147, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4891, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0704, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8198, 'const'), ('X_4', 'var'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_47(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_47'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0186 * x[0] * x[4] + 0.8658 * x[0] * sympy.sin(x[7]) - 0.2733 * x[0] - 0.7899 * x[1] * x[7] - 0.8747 * x[
            1] - 0.5989 * x[1] / x[8] - 0.0984 * x[2] * sympy.cos(x[4]) - 0.9599 * x[3] * sympy.cos(x[2]) + 0.9202 * x[3] / x[4] - 0.3017 * \
                        x[4] * sympy.sin(x[5]) - 0.3151 * x[4] * sympy.cos(x[7]) + 0.0884 * x[4] - 0.8504 * x[5] * sympy.sin(
            x[6]) + 0.1223 * x[5] - 0.9195 * x[7] * sympy.sin(x[6]) - 0.1728 * x[7] - 0.0888 * x[8] * x[9] + 0.7606 * x[8] * sympy.cos(
            x[4]) - 0.0339 * x[8] + 0.0474 * x[9] + 0.8704 * sympy.sin(x[2]) * sympy.sin(x[7]) + 0.3184 * sympy.sin(
            x[3]) + 0.1057 * sympy.sin(x[6]) - 0.1458 * sympy.cos(x[1]) * sympy.cos(x[3]) + 0.0725 - 0.3347 * x[9] / x[
                            7] - 0.7681 * sympy.cos(x[6]) / x[3] + 0.5791 * sympy.cos(x[8]) / x[3] - 0.4879 * x[9] / x[2] + 0.9411 / x[
                            2] + 0.1156 * x[4] / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.0725, 'const'), ('mul', 'binary'), (0.9411, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.0884, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.3184, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.1728, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.8747, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.1223, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.1057, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.2733, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.0474, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.0339, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7899, 'const'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8704, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1458, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1156, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9599, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9202, 'const'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0984, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0186, 'const'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7681, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4879, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5989, 'const'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9195, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3347, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8504, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7606, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8658, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5791, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3151, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3017, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0888, 'const'), ('X_8', 'var'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_36(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_36'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.763 * x[0] * sympy.sin(x[2]) - 0.9676 * x[0] - 0.1321 * x[1] * sympy.cos(x[4]) - 0.6969 * x[1] - 0.3161 * x[1] / \
                        x[9] + 0.1553 * x[1] / x[8] - 0.6635 * x[3] * x[4] + 0.7725 * x[3] - 0.68 * x[4] * x[6] + 0.4102 * x[4] * x[
                            8] - 0.6585 * x[4] * sympy.cos(x[0]) + 0.854 * x[4] - 0.2835 * x[5] * x[8] + 0.2915 * x[5] * sympy.cos(
            x[0]) + 0.75 * x[5] + 0.8002 * x[6] + 0.4036 * x[6] / x[9] - 0.9344 * x[6] / x[8] + 0.1013 * x[7] * sympy.sin(x[4]) - 0.0896 * \
                        x[7] + 0.8178 * x[8] * sympy.sin(x[9]) + 0.868 * x[8] + 0.9578 * x[9] + 0.5309 * sympy.sin(
            x[2]) + 0.7114 + 0.7214 / (x[7] * x[9]) - 0.0699 / (x[5] * x[6]) - 0.9616 * x[9] / x[4] - 0.6183 * x[5] / x[3] + 0.6406 * x[8] / \
                        x[2] - 0.4497 * x[9] / x[2]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7114, 'const'), ('mul', 'binary'), (0.8002, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.868, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.75, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.0896, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.9578, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.6969, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.5309, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.854, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.7725, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.9676, 'const'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2835, 'const'),
                                            ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.763, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6406, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3161, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9344, 'const'), ('X_6', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6585, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2915, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6183, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7214, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0699, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8178, 'const'), ('X_8', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4102, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.68, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4036, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6635, 'const'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4497, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9616, 'const'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1553, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1013, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1321, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_44(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_44'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4245 * x[0] * sympy.sin(x[2]) + 0.2849 * x[0] * sympy.cos(x[1]) + 0.1207 * x[0] + 0.418 * x[1] / x[7] + 0.7166 * \
                        x[2] * sympy.sin(x[1]) - 0.5867 * x[2] + 0.7561 * x[3] * x[5] - 0.0413 * x[3] * x[8] - 0.9741 * x[3] * sympy.cos(
            x[7]) - 0.9889 * x[3] * sympy.cos(x[9]) + 0.578 * x[4] * sympy.sin(x[6]) - 0.9283 * x[4] + 0.491 * x[4] / x[5] + 0.7343 * x[
                            7] * sympy.cos(x[0]) - 0.0787 * sympy.sin(x[0]) * sympy.sin(x[6]) + 0.0249 * sympy.sin(
            x[1]) + 0.2676 * sympy.sin(x[2]) * sympy.sin(x[9]) - 0.397 * sympy.sin(x[3]) * sympy.cos(x[1]) + 0.3558 * sympy.sin(
            x[7]) - 0.1296 * sympy.sin(x[8]) * sympy.sin(x[9]) - 0.6378 * sympy.cos(x[5]) - 0.461 * sympy.cos(x[6]) + 0.1939 * sympy.cos(
            x[8]) + 0.7919 * sympy.cos(x[9]) - 0.7363 + 0.2697 * sympy.cos(x[4]) / x[9] + 0.5029 * sympy.cos(x[5]) / x[9] + 0.65 * x[7] / x[
                            4] + 0.696 / x[3] - 0.1373 * x[4] / x[2] - 0.4438 * x[4] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7363, 'const'), ('mul', 'binary'), (-0.461, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.6378, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.9283, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.696, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.0249, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.1207, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.5867, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.7919, 'const'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.1939, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.3558, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.65, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5029, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.397, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2849, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9741, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0787, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7561, 'const'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7166, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9889, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1373, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4438, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7343, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2676, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.578, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0413, 'const'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1296, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2697, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.491, 'const'), ('X_4', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4245, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.418, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_6(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_6'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9639 * x[0] * x[2] - 0.8319 * x[0] - 0.4755 * x[1] * x[4] - 0.7529 * x[1] * x[8] - 0.0332 * x[1] * sympy.sin(
            x[5]) - 0.2341 * x[1] * sympy.sin(x[7]) + 0.5619 * x[2] + 0.4536 * x[3] + 0.2817 * x[4] * x[7] - 0.2955 * x[4] * sympy.cos(
            x[8]) + 0.4527 * x[5] * sympy.sin(x[0]) - 0.646 * x[5] - 0.8073 * x[5] / x[6] - 0.7636 * x[6] * sympy.sin(x[1]) + 0.6557 * x[
                            7] + 0.1849 * x[8] * x[9] - 0.1387 * x[8] - 0.6707 * x[9] + 0.2849 * sympy.sin(x[4]) * sympy.cos(
            x[6]) + 0.4847 * sympy.cos(x[0]) * sympy.cos(x[7]) - 0.8911 * sympy.cos(x[1]) - 0.0831 * sympy.cos(x[6]) + 0.4732 - 0.3582 / (
                                    x[7] * x[8]) - 0.111 * x[9] / x[5] - 0.6412 * x[5] / x[4] - 0.6062 / x[4] - 0.7889 * sympy.cos(x[1]) / \
                        x[3] - 0.6432 * x[8] / x[2] - 0.7558 * x[3] / x[0] + 0.9541 * x[4] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.4732, 'const'), ('mul', 'binary'), (0.6557, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.8911, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.6707, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.0831, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.646, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.4536, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.6062, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.1387, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.5619, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.8319, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.111, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9541, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6432, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3582, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7889, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7558, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2955, 'const'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4755, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7529, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6412, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4847, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8073, 'const'), ('X_5', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0332, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9639, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2849, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2341, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1849, 'const'), ('X_8', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2817, 'const'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4527, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7636, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_6', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_18(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_18'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0846 * x[0] * x[1] - 0.0893 * x[0] * sympy.sin(x[7]) + 0.8712 * x[1] * x[3] + 0.889 * x[1] * sympy.sin(
            x[7]) - 0.4306 * x[2] * x[4] - 0.3044 * x[2] * x[9] + 0.7154 * x[2] + 0.6651 * x[3] * sympy.sin(x[4]) + 0.9882 * x[4] - 0.7984 * \
                        x[4] / x[6] + 0.0168 * x[5] * sympy.cos(x[9]) - 0.7205 * x[6] * sympy.sin(x[1]) + 0.9088 * x[7] * x[8] + 0.2876 * x[
                            7] * x[9] - 0.5562 * x[7] * sympy.sin(x[5]) + 0.1175 * x[7] - 0.4926 * x[8] * sympy.cos(x[4]) + 0.2882 * x[
                            8] - 0.3815 * x[9] - 0.6997 * sympy.sin(x[3]) + 0.0126 * sympy.cos(x[0]) - 0.444 * sympy.cos(
            x[1]) - 0.0543 * sympy.cos(x[5]) - 0.1475 * sympy.cos(x[6]) + 0.3052 + 0.1818 * sympy.sin(x[0]) / x[9] + 0.5343 * x[8] / x[
                            5] - 0.2186 * sympy.sin(x[1]) / x[5] - 0.3879 * x[5] / x[4] + 0.5243 * x[7] / x[3] - 0.7427 * sympy.sin(x[5]) / \
                        x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3052, 'const'), ('mul', 'binary'), (-0.444, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.9882, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.6997, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.2882, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.1175, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.1475, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.0543, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.7154, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.3815, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.0126, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7205, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4306, 'const'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3879, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2186, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0893, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8712, 'const'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7984, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0846, 'const'),
                                            ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4926, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9088, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3044, 'const'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.889, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6651, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7427, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1818, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5343, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5243, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0168, 'const'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5562, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2876, 'const'), ('X_7', 'var'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_3(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_3'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.6911 * x[0] * sympy.cos(x[8]) + 0.5787 * x[0] + 0.9207 * x[1] * x[7] - 0.9587 * x[2] * x[7] - 0.6191 * x[2] * x[
            8] + 0.5893 * x[2] * sympy.cos(x[0]) + 0.2977 * x[2] * sympy.cos(x[1]) - 0.1972 * x[2] + 0.5954 * x[3] * x[9] - 0.3788 * x[
                            3] * sympy.sin(x[4]) + 0.3042 * x[3] + 0.4247 * x[4] * sympy.cos(x[9]) - 0.2973 * x[6] / x[7] + 0.8683 * x[7] * \
                        x[9] - 0.3393 * x[8] * x[9] - 0.0039 * x[9] * sympy.sin(x[2]) - 0.3707 * x[9] * sympy.sin(
            x[6]) + 0.7096 * sympy.sin(x[3]) * sympy.cos(x[1]) + 0.6653 * sympy.sin(x[5]) - 0.3703 * sympy.sin(x[6]) * sympy.cos(
            x[8]) - 0.4806 * sympy.sin(x[9]) * sympy.cos(x[1]) - 0.0858 * sympy.sin(x[9]) - 0.554 * sympy.cos(x[4]) - 0.393 * sympy.cos(
            x[7]) + 0.7323 * sympy.cos(x[8]) + 0.6171 + 0.9354 / x[6] + 0.1392 / (x[2] * x[4]) - 0.754 / x[1] - 0.6033 * x[5] / x[
                            0] + 0.6333 * sympy.sin(x[7]) / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6171, 'const'), ('mul', 'binary'), (0.3042, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.5787, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.0858, 'const'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.6653, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.9354, 'const'), ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.1972, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.554, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.7323, 'const'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.393, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.754, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6033, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8683, 'const'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3703, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5893, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9587, 'const'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3707, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2977, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0039, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4806, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6191, 'const'),
                                            ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9207, 'const'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6333, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6911, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4247, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2973, 'const'), ('X_6', 'var'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3393, 'const'),
                                            ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1392, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7096, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3788, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5954, 'const'),
                                            ('X_3', 'var'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_24(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_24'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4814 * x[0] * x[8] - 0.3391 * x[0] * sympy.cos(x[4]) + 0.4403 * x[0] * sympy.cos(x[5]) - 0.6005 * x[0] + 0.3219 * \
                        x[2] * x[6] + 0.6152 * x[2] * sympy.cos(x[4]) - 0.9201 * x[3] * x[7] + 0.1753 * x[4] * x[6] + 0.9153 * x[
                            4] + 0.6599 * x[5] - 0.4191 * x[6] * sympy.sin(x[1]) + 0.581 * x[6] * sympy.sin(x[5]) - 0.8171 * x[6] + 0.4533 * \
                        x[6] / x[7] + 0.4201 * x[7] * x[8] + 0.4615 * x[8] * sympy.sin(x[2]) + 0.3469 * x[9] * sympy.sin(x[5]) + 0.3402 * x[
                            9] + 0.2976 * sympy.sin(x[3]) * sympy.sin(x[4]) + 0.9942 * sympy.sin(x[7]) + 0.5078 * sympy.cos(
            x[1]) * sympy.cos(x[7]) - 0.4288 * sympy.cos(x[1]) + 0.6319 * sympy.cos(x[3]) - 0.6367 - 0.802 * sympy.cos(x[3]) / x[
                            8] - 0.1004 / x[8] - 0.8715 * x[7] / x[5] + 0.565 * sympy.cos(x[3]) / x[5] - 0.0908 / (x[4] * x[8]) - 0.8897 / \
                        x[2] + 0.4452 * x[2] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6367, 'const'), ('mul', 'binary'), (-0.1004, 'const'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.6005, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.4288, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.8171, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.6599, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.8897, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.9153, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.9942, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.6319, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.3402, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3469, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.802, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4533, 'const'), ('X_6', 'var'), ('inv', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4615, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4452, 'const'), ('inv', 'unary'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1753, 'const'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5078, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.581, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8715, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.565, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3219, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6152, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4201, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9201, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4403, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0908, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4814, 'const'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2976, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4191, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3391, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_12(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_12'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.3726 * x[0] * x[3] - 0.2478 * x[0] * x[4] + 0.9608 * x[0] * sympy.cos(x[5]) - 0.6308 * x[0] * sympy.cos(
            x[8]) + 0.9031 * x[0] / x[9] + 0.9113 * x[1] / x[2] + 0.6754 * x[2] * x[5] + 0.623 * x[2] * sympy.cos(x[8]) - 0.7192 * x[3] * x[
                            6] + 0.2112 * x[3] * x[9] + 0.7177 * x[3] * sympy.sin(x[1]) - 0.9272 * x[3] - 0.9322 * x[3] / x[8] - 0.3135 * x[
                            4] * x[9] - 0.868 * x[4] * sympy.sin(x[3]) - 0.6299 * x[4] - 0.6946 * x[5] - 0.0454 * x[6] - 0.1049 * x[
                            7] * sympy.cos(x[9]) + 0.0877 * x[8] + 0.9696 * x[9] - 0.6427 * sympy.sin(x[0]) - 0.8462 * sympy.sin(
            x[7]) + 0.014 * sympy.sin(x[8]) * sympy.cos(x[7]) - 0.61 * sympy.cos(x[1]) + 0.2004 + 0.2318 * sympy.cos(x[4]) / x[
                            8] - 0.8849 * sympy.cos(x[6]) / x[4] - 0.0225 / x[2] + 0.5427 * sympy.sin(x[7]) / x[1] + 0.123 * x[1] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.2004, 'const'), ('mul', 'binary'), (-0.0454, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.6299, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.0225, 'const'), ('inv', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.61, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.8462, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.9696, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.6946, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.9272, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.6427, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.0877, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3726, 'const'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2318, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.123, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.014, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.868, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6754, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3135, 'const'), ('X_4', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7177, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7192, 'const'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9113, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1049, 'const'), ('X_7', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6308, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2478, 'const'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2112, 'const'), ('X_3', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9031, 'const'), ('X_0', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.623, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5427, 'const'),
                                            ('inv', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9322, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8849, 'const'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9608, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_25(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_25'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4538 * x[0] * x[6] + 0.5986 * x[0] * x[7] + 0.7105 * x[1] * x[2] + 0.2008 * x[1] * x[4] - 0.8406 * x[1] * x[
            5] + 0.9684 * x[1] * sympy.cos(x[3]) + 0.4913 * x[2] * x[5] + 0.1835 * x[2] * x[9] - 0.5254 * x[2] * sympy.cos(x[0]) + 0.2256 * \
                        x[3] * sympy.sin(x[8]) - 0.87 * x[3] + 0.4091 * x[4] * x[9] - 0.2326 * x[4] + 0.2561 * x[5] - 0.4647 * x[
                            6] * sympy.sin(x[7]) - 0.1246 * x[6] * sympy.cos(x[4]) + 0.55 * x[6] + 0.6037 * x[7] * sympy.cos(
            x[4]) - 0.1474 * x[7] * sympy.cos(x[8]) - 0.9609 * x[7] * sympy.cos(x[9]) + 0.0452 * x[7] + 0.1818 * x[8] * sympy.cos(
            x[0]) - 0.214 * x[9] - 0.7932 * sympy.sin(x[0]) + 0.8945 * sympy.sin(x[3]) * sympy.cos(x[5]) + 0.7676 * sympy.cos(
            x[2]) + 0.8222 + 0.0872 * sympy.sin(x[5]) / x[9] - 0.7155 / x[8] + 0.3954 * x[7] / x[5] + 0.7011 / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8222, 'const'), ('mul', 'binary'), (-0.87, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.7155, 'const'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.55, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.7676, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.7011, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.0452, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.2326, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.7932, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.2561, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.214, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1246, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4647, 'const'), ('X_6', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4091, 'const'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9609, 'const'),
                                            ('X_7', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2256, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7105, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2008, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1474, 'const'), ('X_7', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5986, 'const'), ('X_0', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8945, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9684, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1818, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0872, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('inv', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3954, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4538, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1835, 'const'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8406, 'const'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6037, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5254, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4913, 'const'), ('X_2', 'var'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_21(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_21'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.3271 * x[0] * x[5] + 0.6124 * x[1] * x[3] + 0.4143 * x[1] / x[2] + 0.5189 * x[2] * x[6] + 0.1723 * x[2] * x[
            7] + 0.9486 * x[2] * sympy.sin(x[8]) - 0.9474 * x[2] - 0.5386 * x[3] * x[4] + 0.0733 * x[4] * x[7] - 0.8927 * x[4] * sympy.cos(
            x[0]) - 0.6453 * x[4] + 0.74 * x[6] * sympy.cos(x[9]) + 0.5163 * x[6] - 0.6261 * x[8] * sympy.sin(x[5]) - 0.8505 * x[
                            8] - 0.1882 * x[9] * sympy.sin(x[0]) - 0.5493 * x[9] * sympy.sin(x[4]) + 0.1921 * x[9] + 0.6012 * sympy.sin(
            x[2]) * sympy.cos(x[9]) - 0.7498 * sympy.sin(x[3]) - 0.9038 * sympy.cos(x[0]) - 0.5792 * sympy.cos(x[1]) * sympy.cos(
            x[9]) + 0.1838 * sympy.cos(x[6]) * sympy.cos(x[8]) + 0.7837 + 0.5377 / x[7] + 0.5798 * x[9] / x[5] - 0.2477 * sympy.cos(x[1]) / \
                        x[5] + 0.272 / x[5] - 0.8467 * x[5] / x[3] + 0.2454 * sympy.cos(x[4]) / x[2] - 0.1737 / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7837, 'const'), ('mul', 'binary'), (-0.6453, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.9474, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.5377, 'const'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.1737, 'const'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.5163, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.7498, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.1921, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.8505, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.272, 'const'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.9038, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6012, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2454, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3271, 'const'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1838, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9486, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6124, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.74, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5386, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6261, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5792, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1723, 'const'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8927, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0733, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5189, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2477, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5798, 'const'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5493, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4143, 'const'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1882, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8467, 'const'), ('inv', 'unary'), ('X_3', 'var'), ('X_5', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_26(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_26'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8409 * x[0] * sympy.sin(x[6]) - 0.2247 * x[1] * x[2] + 0.309 * x[1] * sympy.sin(x[5]) - 0.3879 * x[1] - 0.468 * x[
            2] * sympy.cos(x[0]) - 0.8485 * x[2] * sympy.cos(x[5]) - 0.4119 * x[3] * x[9] - 0.483 * x[3] * sympy.cos(x[6]) - 0.295 * x[
                            3] + 0.6004 * x[4] - 0.3502 * x[4] / x[6] - 0.1615 * x[6] * x[8] - 0.573 * x[6] + 0.5119 * x[7] * sympy.sin(
            x[4]) - 0.411 * x[7] * sympy.sin(x[5]) + 0.1329 * x[7] - 0.0669 * sympy.sin(x[1]) * sympy.sin(x[9]) + 0.5409 * sympy.sin(
            x[5]) - 0.0371 * sympy.sin(x[8]) * sympy.cos(x[5]) + 0.5074 * sympy.cos(x[0]) + 0.1536 * sympy.cos(x[2]) * sympy.cos(
            x[6]) + 0.4743 * sympy.cos(x[2]) + 0.005 * sympy.cos(x[8]) - 0.8918 - 0.4951 * sympy.cos(x[2]) / x[9] - 0.3785 / x[
                            9] - 0.6752 * sympy.sin(x[4]) / x[5] + 0.4581 * sympy.cos(x[3]) / x[4] + 0.2647 / (x[3] * x[8]) + 0.3904 * x[
                            6] / x[1] + 0.6366 * x[4] / x[0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8918, 'const'), ('mul', 'binary'), (-0.3785, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.5409, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.6004, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.573, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.5074, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.295, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.4743, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.3879, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.005, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.1329, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5119, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2247, 'const'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2647, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4581, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('inv', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1615, 'const'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.483, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8409, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0371, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3502, 'const'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.309, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4951, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4119, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6366, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.468, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8485, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1536, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3904, 'const'), ('inv', 'unary'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6752, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.411, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0669, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_39(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_39'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.3757 * x[0] * x[1] + 0.2201 * x[0] * x[2] - 0.1114 * x[0] * sympy.cos(x[6]) + 0.9324 * x[0] / x[5] + 0.2959 * x[
            2] / x[7] - 0.4811 * x[3] - 0.1101 * x[4] * sympy.cos(x[7]) + 0.1304 * x[4] - 0.1437 * x[4] / x[6] - 0.9543 * x[5] * sympy.sin(
            x[4]) + 0.2253 * x[5] - 0.8908 * x[6] - 0.9056 * x[8] - 0.2003 * x[9] * sympy.sin(x[1]) + 0.7882 * sympy.sin(x[0]) * sympy.sin(
            x[3]) - 0.1395 * sympy.sin(x[0]) + 0.7156 * sympy.sin(x[3]) * sympy.cos(x[5]) - 0.7332 * sympy.cos(x[1]) * sympy.cos(
            x[5]) + 0.8761 * sympy.cos(x[1]) - 0.2445 * sympy.cos(x[2]) * sympy.cos(x[8]) + 0.968 * sympy.cos(x[2]) - 0.3595 * sympy.cos(
            x[5]) * sympy.cos(x[8]) + 0.2302 - 0.8748 / x[9] - 0.289 * sympy.cos(x[7]) / x[8] - 0.2328 * sympy.sin(x[0]) / x[7] - 0.7729 / \
                        x[7] + 0.7618 / (x[6] * x[8]) - 0.512 * x[7] / x[5] + 0.9546 * x[9] / x[4] - 0.4917 * x[6] / x[2]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.2302, 'const'), ('mul', 'binary'), (-0.8748, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.1395, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.2253, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.9056, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.8761, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.8908, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.968, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.1304, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.7729, 'const'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.4811, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1437, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4917, 'const'),
                                            ('inv', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7156, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2445, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9543, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1114, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1101, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7882, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2328, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9324, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.289, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7618, 'const'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9546, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2959, 'const'), ('X_2', 'var'), ('inv', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2003, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3757, 'const'),
                                            ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7332, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2201, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3595, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.512, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('X_7', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_19(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_19'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.1585 * x[0] * x[1] - 0.1854 * x[0] * x[8] - 0.0658 * x[0] - 0.3813 * x[1] * x[3] - 0.6091 * x[1] * x[7] + 0.5601 * \
                        x[1] * x[9] + 0.9501 * x[1] / x[4] - 0.8954 * x[2] / x[8] - 0.0843 * x[3] * sympy.sin(x[4]) - 0.946 * x[
                            3] * sympy.cos(x[5]) + 0.1289 * x[3] / x[9] + 0.1938 * x[4] - 0.4784 * x[4] / x[9] + 0.2865 * x[5] - 0.8332 * x[
                            6] + 0.4287 * x[7] * x[9] + 0.0879 * x[7] * sympy.cos(x[6]) - 0.3458 * x[7] / x[8] - 0.33 * x[8] * sympy.cos(
            x[3]) - 0.0323 * x[8] * sympy.cos(x[6]) + 0.7968 * sympy.sin(x[0]) * sympy.cos(x[6]) + 0.9847 * sympy.sin(
            x[3]) - 0.6825 * sympy.sin(x[8]) - 0.2162 * sympy.cos(x[2]) * sympy.cos(x[4]) - 0.5607 * sympy.cos(x[7]) + 0.127 * sympy.cos(
            x[9]) + 0.6168 + 0.9476 * x[9] / x[5] - 0.5742 / (x[4] * x[8]) - 0.773 / x[2] + 0.5045 / x[1]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6168, 'const'), ('mul', 'binary'), (0.1938, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.9847, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.2865, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.773, 'const'), ('inv', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.0658, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.6825, 'const'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.5045, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.5607, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.127, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.8332, 'const'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2162, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0323, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0843, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5601, 'const'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0879, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6091, 'const'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1854, 'const'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8954, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3458, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9501, 'const'), ('X_1', 'var'), ('inv', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7968, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3813, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.946, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1585, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9476, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5742, 'const'), ('inv', 'unary'), ('X_4', 'var'), ('inv', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4784, 'const'), ('X_4', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.33, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1289, 'const'), ('X_3', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4287, 'const'), ('X_7', 'var'), ('X_9', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_38(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_38'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9588 * x[0] * x[7] - 0.6446 * x[1] * x[9] - 0.6751 * x[1] / x[6] - 0.0528 * x[2] * x[7] + 0.4337 * x[
            3] * sympy.cos(x[1]) + 0.627 * x[3] - 0.7899 * x[3] / x[9] + 0.6323 * x[4] * sympy.cos(x[7]) - 0.7028 * x[4] + 0.1763 * x[5] * \
                        x[6] - 0.6285 * x[5] * sympy.sin(x[0]) + 0.9809 * x[5] * sympy.cos(x[7]) + 0.04 * x[5] * sympy.cos(x[8]) - 0.7246 * \
                        x[5] + 0.2618 * x[6] / x[9] - 0.5688 * x[7] / x[8] + 0.0652 * x[8] * sympy.cos(x[3]) - 0.0569 * x[8] + 0.2542 * x[
                            9] * sympy.sin(x[5]) - 0.2162 * x[9] * sympy.cos(x[7]) + 0.2483 * x[9] - 0.0126 * sympy.sin(
            x[1]) + 0.8203 * sympy.sin(x[2]) - 0.3513 * sympy.sin(x[5]) * sympy.cos(x[1]) - 0.4355 * sympy.sin(x[8]) * sympy.cos(
            x[2]) + 0.7127 * sympy.cos(x[7]) + 0.6575 + 0.916 / x[6] + 0.3116 * x[6] / x[4] - 0.8187 * sympy.cos(x[5]) / x[2] - 0.4004 / x[
                            0]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6575, 'const'), ('mul', 'binary'), (0.7127, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.4004, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.2483, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.7028, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.0569, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.7246, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.916, 'const'), ('inv', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.0126, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.627, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.8203, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2162, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2618, 'const'),
                                            ('X_6', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.04, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9809, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0652, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6323, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4337, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6285, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8187, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6751, 'const'), ('X_1', 'var'),
                                            ('inv', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2542, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5688, 'const'), ('X_7', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0528, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1763, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6446, 'const'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3513, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7899, 'const'), ('X_3', 'var'),
                                            ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3116, 'const'),
                                            ('inv', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9588, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4355, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_9(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_9'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.399 * x[0] * sympy.sin(x[2]) - 0.4706 * x[0] * sympy.sin(x[5]) + 0.4907 * x[1] * x[2] - 0.1864 * x[1] * sympy.sin(
            x[8]) + 0.1825 * x[1] - 0.4928 * x[2] * sympy.sin(x[3]) - 0.2608 * x[2] * sympy.cos(x[5]) - 0.2302 * x[3] * x[5] - 0.8519 * x[
                            3] * x[9] - 0.3162 * x[3] * sympy.sin(x[4]) - 0.5657 * x[4] * sympy.sin(x[7]) + 0.3372 * x[4] - 0.8843 * x[5] / \
                        x[8] - 0.2211 * x[6] - 0.5134 * x[7] * sympy.sin(x[5]) - 0.9457 * x[7] * sympy.sin(x[8]) - 0.5572 * x[
                            8] * sympy.cos(x[0]) - 0.4056 * x[8] * sympy.cos(x[9]) + 0.8059 * x[8] - 0.9566 * sympy.sin(
            x[0]) + 0.0921 * sympy.sin(x[2]) + 0.7173 * sympy.sin(x[5]) + 0.4191 * sympy.sin(x[6]) * sympy.cos(x[0]) + 0.8346 * sympy.sin(
            x[7]) + 0.4405 * sympy.cos(x[9]) - 0.371 - 0.5279 * sympy.cos(x[6]) / x[5] + 0.5595 * sympy.cos(x[9]) / x[
                            5] - 0.8562 * sympy.cos(x[1]) / x[3] + 0.8743 * sympy.cos(x[8]) / x[3] + 0.6375 / x[3]
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.371, 'const'), ('mul', 'binary'), (0.3372, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.0921, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.9566, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.8059, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.2211, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.1825, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.6375, 'const'), ('inv', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.4405, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.7173, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.8346, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8743, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4191, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8562, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('inv', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1864, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5595, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4056, 'const'), ('X_8', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4928, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8519, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5657, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5279, 'const'), ('inv', 'unary'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4907, 'const'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2608, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.399, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8843, 'const'), ('X_5', 'var'), ('inv', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9457, 'const'), ('X_7', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2302, 'const'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5572, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5134, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4706, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3162, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_32(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_32'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4267 * x[0] * x[1] - 0.4672 * x[0] * sympy.sin(x[2]) + 0.9734 * x[0] * sympy.cos(x[8]) + 0.6018 * x[0] / x[
            4] + 0.7229 * x[1] * sympy.cos(x[4]) - 0.7325 * x[1] + 0.2001 * x[2] * x[6] + 0.8876 * x[2] * sympy.sin(x[9]) - 0.1407 * x[
                            2] - 0.548 * x[3] * sympy.sin(x[5]) + 0.3944 * x[3] + 0.3977 * x[4] * sympy.sin(x[7]) + 0.8192 * x[4] - 0.1806 * \
                        x[5] * x[9] + 0.6308 * x[5] * sympy.sin(x[8]) - 0.5322 * x[6] * sympy.cos(x[7]) + 0.8235 * x[7] * sympy.sin(
            x[0]) - 0.6877 * x[9] - 0.3653 * sympy.sin(x[8]) * sympy.cos(x[9]) - 0.7794 * sympy.cos(x[4]) * sympy.cos(
            x[8]) - 0.8747 * sympy.cos(x[5]) + 0.554 * sympy.cos(x[6]) + 0.4932 * sympy.cos(x[7]) - 0.4442 * sympy.cos(
            x[8]) + 0.1649 + 0.7062 * x[7] / x[5] - 0.3295 * sympy.sin(x[8]) / x[3] - 0.2123 * sympy.sin(x[7]) / x[2] + 0.5243 * sympy.sin(
            x[8]) / x[1] + 0.1755 / x[0] - 0.3721 / (x[0] * x[9])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1649, 'const'), ('mul', 'binary'), (0.1755, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.6877, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.4932, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.8192, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.1407, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.7325, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.8747, 'const'), ('cos', 'unary'), ('X_5', 'var'), \
                                            ('mul', 'binary'), (-0.4442, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.3944, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.554, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5243, 'const'), ('inv', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5322, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.548, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8235, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8876, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3295, 'const'),
                                            ('inv', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2123, 'const'), ('inv', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7794, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1806, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4672, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3653, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7062, 'const'), ('inv', 'unary'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4267, 'const'),
                                            ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3721, 'const'),
                                            ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9734, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6308, 'const'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7229, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3977, 'const'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2001, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6018, 'const'), ('X_0', 'var'), ('inv', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincosinv_nv10_nt1020_prog_5(KnownEquation):
    _eq_name = 'sincosinv_nv10_nt1020_prog_5'
    _function_set = ['add', 'sub', 'mul', 'div', 'inv', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4647 * x[0] * sympy.sin(x[3]) + 0.8329 * x[0] * sympy.sin(x[5]) - 0.5003 * x[0] * sympy.sin(x[7]) + 0.3459 * x[
            1] * sympy.sin(x[6]) + 0.1637 * x[1] * sympy.cos(x[3]) - 0.9155 * x[1] * sympy.cos(x[4]) + 0.0912 * x[1] * sympy.cos(
            x[7]) - 0.1779 * x[1] + 0.6652 * x[2] * x[4] + 0.4397 * x[2] * x[5] + 0.7932 * x[2] * sympy.cos(x[3]) - 0.3781 * x[2] / x[
                            9] + 0.2617 * x[3] + 0.31 * x[4] - 0.3652 * x[5] * x[7] - 0.2892 * x[5] * sympy.sin(x[4]) + 0.086 * x[
                            5] + 0.457 * x[6] * x[7] - 0.7688 * x[6] + 0.2945 * x[8] - 0.6729 * sympy.sin(x[2]) + 0.302 * sympy.sin(
            x[7]) - 0.8926 * sympy.cos(x[2]) * sympy.cos(x[7]) - 0.2389 + 0.8775 / x[9] + 0.469 * x[9] / x[7] + 0.2532 * sympy.sin(x[1]) / \
                        x[5] + 0.7385 * sympy.sin(x[7]) / x[3] - 0.8944 * x[4] / x[0] + 0.8848 / x[0] + 0.4974 / (x[0] * x[1])
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.2389, 'const'), ('mul', 'binary'), (0.086, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.31, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.1779, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.8848, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.7688, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.6729, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.8775, 'const'), ('inv', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.2617, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.302, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.2945, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8926, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6652, 'const'),
                                            ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3459, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4974, 'const'), ('inv', 'unary'), ('X_0', 'var'), ('inv', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2892, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4397, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1637, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.457, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3781, 'const'),
                                            ('X_2', 'var'), ('inv', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9155, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7932, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0912, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3652, 'const'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7385, 'const'), ('inv', 'unary'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2532, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('inv', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8944, 'const'), ('inv', 'unary'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5003, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.469, 'const'),
                                            ('inv', 'unary'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8329, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4647, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_46(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_46'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5708 * x[0] * x[4] - 0.9918 * x[0] * sympy.cos(x[7]) - 0.2259 * x[0] + 0.5764 * x[2] * x[3] - 0.196 * x[2] * x[
            4] - 0.7279 * x[2] * sympy.sin(x[0]) + 0.2389 * x[2] * sympy.sin(x[5]) - 0.0908 * x[2] * sympy.sin(x[8]) - 0.4195 * x[
                            3] * sympy.sin(x[5]) + 0.1673 * x[3] - 0.2642 * x[5] * sympy.sin(x[0]) + 0.8621 * x[5] * sympy.sin(
            x[1]) + 0.3907 * x[5] + 0.5512 * x[7] * x[8] + 0.3874 * x[8] - 0.4306 * x[9] * sympy.cos(x[1]) + 0.2653 * x[
                            9] + 0.6701 * sympy.sin(x[0]) * sympy.cos(x[6]) + 0.773 * sympy.sin(x[1]) * sympy.sin(
            x[8]) - 0.1279 * sympy.sin(x[2]) + 0.9072 * sympy.sin(x[3]) * sympy.sin(x[6]) - 0.3774 * sympy.sin(x[3]) * sympy.cos(
            x[7]) + 0.3441 * sympy.sin(x[3]) * sympy.cos(x[9]) + 0.1262 * sympy.sin(x[5]) * sympy.sin(x[6]) + 0.4891 * sympy.sin(
            x[5]) * sympy.sin(x[9]) + 0.3382 * sympy.sin(x[6]) - 0.0787 * sympy.sin(x[7]) - 0.388 * sympy.sin(x[9]) * sympy.cos(
            x[6]) - 0.4401 * sympy.cos(x[1]) + 0.2891 * sympy.cos(x[4]) - 0.3051
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3051, 'const'), ('mul', 'binary'), (0.3874, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.2891, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.4401, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.2653, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.3907, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.1673, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.3382, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.1279, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.2259, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.0787, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.388, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3441, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5764, 'const'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3774, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4891, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5708, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5512, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9072, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2642, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2389, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.196, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1262, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.773, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4195, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8621, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6701, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9918, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0908, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4306, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7279, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_2', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_0(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_0'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.866 * x[0] * x[2] - 0.2681 * x[1] * x[9] - 0.9706 * x[2] * sympy.cos(x[4]) + 0.1585 * x[2] + 0.529 * x[
            3] * sympy.sin(x[1]) + 0.3632 * x[3] * sympy.cos(x[0]) + 0.753 * x[3] * sympy.cos(x[4]) - 0.604 * x[3] * sympy.cos(
            x[8]) - 0.1592 * x[3] - 0.9778 * x[4] * sympy.cos(x[0]) + 0.8826 * x[4] * sympy.cos(x[7]) + 0.7064 * x[5] * x[9] - 0.8999 * x[
                            5] * sympy.sin(x[8]) + 0.9724 * x[5] * sympy.cos(x[3]) + 0.8315 * x[6] * x[9] - 0.8612 * x[6] * sympy.sin(
            x[3]) + 0.5269 * x[6] * sympy.cos(x[8]) + 0.1254 * x[6] + 0.2498 * x[7] * sympy.cos(x[9]) - 0.4366 * x[8] * sympy.sin(
            x[7]) - 0.5233 * x[8] - 0.3178 * x[9] + 0.5795 * sympy.sin(x[1]) + 0.4935 * sympy.sin(x[2]) * sympy.cos(
            x[3]) + 0.6158 * sympy.sin(x[2]) * sympy.cos(x[7]) - 0.9345 * sympy.sin(x[4]) - 0.4518 * sympy.sin(x[5]) + 0.7388 * sympy.sin(
            x[7]) + 0.0812 * sympy.cos(x[0]) * sympy.cos(x[6]) - 0.6185 * sympy.cos(x[0]) + 0.8968
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8968, 'const'), ('mul', 'binary'), (-0.6185, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.3178, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.9345, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.5795, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.7388, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.1592, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.4518, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.1254, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.5233, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.1585, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5269, 'const'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4935, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9706, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0812, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8315, 'const'),
                                            ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8999, 'const'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.604, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8826, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7064, 'const'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8612, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.866, 'const'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3632, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.753, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2498, 'const'), ('X_7', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9724, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4366, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9778, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6158, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.529, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2681, 'const'), ('X_1', 'var'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_35(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_35'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.5956 * x[0] * x[8] - 0.3549 * x[0] * sympy.sin(x[2]) - 0.5164 * x[0] * sympy.sin(x[9]) - 0.4881 * x[0] + 0.5551 * \
                        x[1] * x[6] - 0.8365 * x[1] * sympy.cos(x[0]) + 0.0142 * x[1] * sympy.cos(x[3]) - 0.9437 * x[1] - 0.3464 * x[
                            3] * sympy.cos(x[0]) + 0.6441 * x[3] * sympy.cos(x[5]) - 0.2025 * x[3] * sympy.cos(x[7]) + 0.906 * x[
                            3] - 0.7927 * x[4] + 0.1184 * x[5] - 0.7006 * x[6] * x[7] - 0.064 * x[6] * x[8] - 0.9132 * x[6] * x[
                            9] + 0.2563 * x[6] * sympy.cos(x[4]) + 0.4629 * x[7] + 0.4006 * x[8] * sympy.sin(x[4]) - 0.5591 * x[
                            9] + 0.5248 * sympy.sin(x[0]) * sympy.sin(x[4]) + 0.9537 * sympy.sin(x[2]) * sympy.sin(
            x[4]) - 0.296 * sympy.sin(x[2]) - 0.4305 * sympy.sin(x[5]) * sympy.cos(x[9]) + 0.217 * sympy.sin(x[6]) - 0.8595 * sympy.sin(
            x[8]) + 0.5959 * sympy.cos(x[1]) * sympy.cos(x[8]) + 0.97 * sympy.cos(x[4]) * sympy.cos(x[9]) - 0.0945 * sympy.cos(
            x[7]) * sympy.cos(x[9]) + 0.3789
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3789, 'const'), ('mul', 'binary'), (0.1184, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.9437, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.296, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.7927, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.4881, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.906, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.217, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.4629, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.5591, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.8595, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3464, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.064, 'const'), ('X_6', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.97, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9537, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5164, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5248, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5959, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8365, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0142, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9132, 'const'), ('X_6', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2563, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4305, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5551, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4006, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6441, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5956, 'const'), ('X_0', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3549, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2025, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0945, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7006, 'const'), ('X_6', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_8(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_8'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.6815 * x[0] * x[5] - 0.6406 * x[0] * sympy.cos(x[8]) - 0.2268 * x[1] * sympy.sin(x[9]) + 0.5217 * x[2] * x[
            6] + 0.3318 * x[2] + 0.51 * x[3] * x[6] + 0.5238 * x[3] * x[7] - 0.3456 * x[3] - 0.7735 * x[4] * sympy.sin(x[0]) + 0.84 * x[
                            4] * sympy.sin(x[9]) + 0.7245 * x[5] * x[7] - 0.3447 * x[5] * sympy.sin(x[8]) + 0.8176 * x[5] * sympy.cos(
            x[2]) - 0.027 * x[6] * sympy.cos(x[9]) + 0.881 * x[7] * x[8] + 0.5074 * x[7] * sympy.sin(x[6]) + 0.9511 * x[7] * sympy.cos(
            x[9]) + 0.3301 * x[7] - 0.2517 * x[9] - 0.7004 * sympy.sin(x[1]) * sympy.cos(x[8]) - 0.2926 * sympy.sin(x[2]) * sympy.cos(
            x[0]) - 0.8228 * sympy.sin(x[3]) * sympy.cos(x[9]) + 0.6635 * sympy.sin(x[4]) * sympy.cos(x[1]) - 0.7297 * sympy.sin(
            x[4]) * sympy.cos(x[2]) + 0.7971 * sympy.sin(x[4]) - 0.4426 * sympy.sin(x[8]) - 0.6666 * sympy.cos(x[0]) - 0.6453 * sympy.cos(
            x[1]) - 0.8847 * sympy.cos(x[5]) - 0.0024 * sympy.cos(x[6]) + 0.3857
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3857, 'const'), ('mul', 'binary'), (-0.4426, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.7971, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.3456, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.6453, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.0024, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.3318, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.2517, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.6666, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.8847, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.3301, 'const'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9511, 'const'),
                                            ('X_7', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6406, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2926, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7297, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.51, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.881, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7245, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5238, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5074, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7735, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6635, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2268, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6815, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5217, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7004, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.027, 'const'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.84, 'const'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8228, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8176, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3447, 'const'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_42(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_42'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.8074 * x[0] * x[2] - 0.9427 * x[0] * x[6] - 0.6424 * x[0] * sympy.cos(x[1]) - 0.3729 * x[0] - 0.0011 * x[1] * x[
            4] + 0.2671 * x[2] * sympy.sin(x[6]) - 0.0811 * x[2] * sympy.cos(x[1]) - 0.3914 * x[3] * sympy.sin(x[4]) - 0.8838 * x[
                            3] - 0.576 * x[4] * x[5] + 0.4047 * x[4] * x[7] + 0.0428 * x[4] * x[9] - 0.118 * x[4] * sympy.cos(
            x[6]) + 0.8675 * x[4] - 0.3606 * x[5] + 0.4579 * x[6] + 0.1232 * x[7] + 0.8956 * x[8] * sympy.sin(x[3]) - 0.6135 * x[
                            8] * sympy.sin(x[5]) + 0.0728 * x[9] * sympy.sin(x[1]) + 0.048 * x[9] * sympy.cos(x[0]) + 0.7236 * sympy.sin(
            x[0]) * sympy.cos(x[5]) + 0.7876 * sympy.sin(x[1]) - 0.7682 * sympy.sin(x[2]) + 0.5074 * sympy.sin(x[3]) * sympy.sin(
            x[9]) + 0.9981 * sympy.sin(x[5]) * sympy.sin(x[9]) - 0.5703 * sympy.sin(x[5]) * sympy.cos(x[6]) - 0.6746 * sympy.sin(
            x[6]) * sympy.cos(x[7]) + 0.6403 * sympy.sin(x[8]) - 0.6758 * sympy.cos(x[9]) + 0.5296
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.5296, 'const'), ('mul', 'binary'), (-0.7682, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.6758, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.4579, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.6403, 'const'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.8675, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.3606, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.8838, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.1232, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.3729, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.7876, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6746, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6135, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3914, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4047, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.118, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2671, 'const'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9427, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6424, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5703, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9981, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.048, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7236, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0728, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0428, 'const'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0811, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0011, 'const'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8074, 'const'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.576, 'const'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5074, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8956, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_33(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_33'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.1963 * x[0] * x[2] - 0.3813 * x[0] * x[8] + 0.1322 * x[1] * x[3] - 0.0962 * x[1] * x[4] + 0.6622 * x[1] * x[
            6] + 0.6873 * x[1] + 0.3825 * x[2] * sympy.cos(x[1]) - 0.3919 * x[2] * sympy.cos(x[4]) + 0.6583 * x[2] - 0.2322 * x[3] * x[
                            8] + 0.4989 * x[4] * sympy.sin(x[3]) + 0.1096 * x[4] * sympy.sin(x[7]) + 0.2318 * x[5] * sympy.cos(
            x[2]) + 0.0789 * x[6] * sympy.cos(x[2]) - 0.7146 * x[7] * sympy.cos(x[6]) - 0.6663 * x[8] * sympy.cos(x[1]) + 0.561 * x[
                            9] * sympy.sin(x[4]) + 0.2156 * x[9] * sympy.cos(x[3]) - 0.1159 * x[9] * sympy.cos(x[8]) + 0.6224 * x[
                            9] + 0.3246 * sympy.sin(x[0]) * sympy.sin(x[4]) + 0.8411 * sympy.sin(x[3]) + 0.527 * sympy.sin(
            x[4]) * sympy.sin(x[5]) + 0.9627 * sympy.sin(x[4]) + 0.1072 * sympy.sin(x[6]) + 0.0618 * sympy.sin(x[7]) * sympy.cos(
            x[5]) - 0.4739 * sympy.sin(x[7]) + 0.8209 * sympy.cos(x[0]) - 0.1744 * sympy.cos(x[5]) + 0.8338 * sympy.cos(x[8]) + 0.9234
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.9234, 'const'), ('mul', 'binary'), (0.8209, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.1744, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.8411, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.4739, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.6583, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.6873, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.1072, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.6224, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.9627, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.8338, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3246, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6622, 'const'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.527, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0962, 'const'),
                                            ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2318, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4989, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7146, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1096, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.561, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2156, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3919, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1322, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6663, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3813, 'const'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2322, 'const'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1159, 'const'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0789, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0618, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1963, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3825, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_2', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_20(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_20'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0416 * x[0] * x[4] + 0.2358 * x[0] * x[7] + 0.4809 * x[0] - 0.1203 * x[1] * x[2] + 0.5458 * x[2] * sympy.cos(
            x[0]) - 0.2108 * x[2] * sympy.cos(x[8]) + 0.6511 * x[2] + 0.0818 * x[3] * x[7] + 0.749 * x[3] * sympy.sin(x[9]) - 0.8352 * x[
                            3] + 0.104 * x[4] * sympy.cos(x[6]) - 0.6419 * x[5] * sympy.sin(x[3]) - 0.7524 * x[5] + 0.8157 * x[6] * x[
                            7] + 0.5786 * x[6] * sympy.cos(x[2]) + 0.5582 * x[6] * sympy.cos(x[9]) - 0.2424 * x[7] * sympy.cos(
            x[2]) + 0.9774 * x[7] + 0.3153 * x[8] + 0.7432 * x[9] * sympy.sin(x[5]) + 0.003 * x[9] * sympy.sin(x[8]) - 0.5084 * x[
                            9] + 0.3383 * sympy.sin(x[1]) * sympy.sin(x[6]) + 0.7258 * sympy.sin(x[1]) + 0.8043 * sympy.sin(
            x[3]) * sympy.sin(x[4]) + 0.2038 * sympy.sin(x[4]) * sympy.cos(x[5]) - 0.1539 * sympy.sin(x[4]) - 0.8963 * sympy.cos(
            x[2]) * sympy.cos(x[9]) + 0.7921 * sympy.cos(x[6]) - 0.7325 * sympy.cos(x[7]) * sympy.cos(x[9]) + 0.2823
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.2823, 'const'), ('mul', 'binary'), (0.4809, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.1539, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.8352, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.7921, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.6511, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.9774, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.7524, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.3153, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.5084, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.7258, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.104, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1203, 'const'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.749, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.003, 'const'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8157, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8043, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7325, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0416, 'const'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7432, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8963, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5786, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6419, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2108, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5582, 'const'),
                                            ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0818, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3383, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5458, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2424, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2038, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2358, 'const'), ('X_0', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_14(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_14'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7189 * x[0] * sympy.sin(x[5]) + 0.868 * x[0] - 0.1086 * x[1] * x[3] + 0.8497 * x[1] * x[5] - 0.9622 * x[1] * x[
            6] + 0.3125 * x[1] * x[7] + 0.5871 * x[1] * sympy.cos(x[4]) + 0.5788 * x[1] + 0.911 * x[2] * x[8] + 0.8379 * x[2] + 0.2182 * x[
                            3] * x[8] - 0.48 * x[3] * sympy.sin(x[6]) - 0.7364 * x[3] - 0.9055 * x[4] * sympy.sin(x[0]) + 0.2973 * x[
                            4] * sympy.cos(x[7]) - 0.3675 * x[5] - 0.3136 * x[7] * sympy.cos(x[5]) + 0.2091 * x[8] * sympy.cos(
            x[1]) - 0.2008 * x[8] * sympy.cos(x[6]) + 0.0684 * x[8] - 0.5317 * x[9] * sympy.cos(x[2]) - 0.6112 * x[9] - 0.3426 * sympy.sin(
            x[0]) * sympy.sin(x[6]) + 0.0206 * sympy.sin(x[1]) * sympy.cos(x[2]) + 0.7451 * sympy.sin(x[5]) * sympy.cos(
            x[3]) + 0.6988 * sympy.sin(x[6]) + 0.9406 * sympy.sin(x[7]) + 0.6054 * sympy.cos(x[2]) * sympy.cos(x[4]) - 0.907 * sympy.cos(
            x[4]) * sympy.cos(x[5]) + 0.357 * sympy.cos(x[4]) + 0.4907
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.4907, 'const'), ('mul', 'binary'), (-0.7364, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.9406, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.8379, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.0684, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.868, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.6988, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.5788, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.357, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.3675, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.6112, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.907, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7189, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5871, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2973, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7451, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9622, 'const'), ('X_1', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3426, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0206, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.48, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1086, 'const'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5317, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8497, 'const'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3136, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.911, 'const'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2008, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9055, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3125, 'const'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2182, 'const'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6054, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2091, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_31(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_31'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2588 * x[0] + 0.8079 * x[1] * sympy.sin(x[3]) + 0.5744 * x[1] * sympy.cos(x[2]) + 0.7973 * x[1] * sympy.cos(
            x[9]) - 0.9339 * x[2] * x[4] - 0.2971 * x[2] * x[5] - 0.7775 * x[2] + 0.1611 * x[3] * x[9] - 0.702 * x[3] - 0.5108 * x[
                            4] * sympy.sin(x[9]) - 0.7161 * x[5] * sympy.cos(x[0]) - 0.1755 * x[5] * sympy.cos(x[4]) - 0.5337 * x[
                            5] + 0.3168 * x[6] + 0.9827 * x[7] * sympy.cos(x[6]) + 0.2155 * x[8] * sympy.sin(x[9]) + 0.9818 * x[
                            8] + 0.3212 * x[9] * sympy.sin(x[5]) + 0.9157 * x[9] * sympy.cos(x[0]) - 0.3723 * x[9] + 0.7035 * sympy.sin(
            x[1]) + 0.7232 * sympy.sin(x[2]) * sympy.cos(x[9]) + 0.641 * sympy.sin(x[4]) * sympy.sin(x[7]) - 0.0392 * sympy.sin(
            x[4]) - 0.9641 * sympy.sin(x[7]) * sympy.cos(x[0]) - 0.5202 * sympy.cos(x[0]) * sympy.cos(x[6]) - 0.4623 * sympy.cos(
            x[3]) * sympy.cos(x[5]) - 0.9737 * sympy.cos(x[3]) * sympy.cos(x[8]) + 0.0438 * sympy.cos(x[7]) * sympy.cos(
            x[9]) - 0.121 * sympy.cos(x[7]) + 0.3617
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3617, 'const'), ('mul', 'binary'), (-0.5337, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.702, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.3168, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.7775, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.121, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.9818, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.7035, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.0392, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.2588, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.3723, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9641, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3212, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9157, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4623, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8079, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5108, 'const'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7161, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.641, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9339, 'const'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5202, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9827, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9737, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2971, 'const'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0438, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7973, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5744, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7232, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1755, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2155, 'const'),
                                            ('X_8', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1611, 'const'), ('X_3', 'var'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_48(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_48'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7772 * x[0] * x[4] - 0.1091 * x[0] * x[8] + 0.9621 * x[0] * sympy.sin(x[3]) + 0.8741 * x[0] * sympy.sin(
            x[6]) - 0.2925 * x[0] * sympy.sin(x[7]) + 0.1351 * x[1] * x[6] - 0.4343 * x[1] - 0.1371 * x[2] * sympy.cos(x[0]) - 0.0975 * x[
                            2] * sympy.cos(x[3]) - 0.2113 * x[2] * sympy.cos(x[9]) + 0.4342 * x[3] - 0.5023 * x[4] * sympy.sin(
            x[6]) - 0.2629 * x[4] - 0.4246 * x[5] + 0.8146 * x[6] * x[8] + 0.5472 * x[6] * sympy.cos(x[5]) + 0.2824 * x[7] * sympy.sin(
            x[8]) - 0.6399 * x[7] * sympy.cos(x[2]) + 0.0509 * x[8] * sympy.sin(x[9]) - 0.2457 * x[8] + 0.5859 * x[9] * sympy.sin(
            x[5]) + 0.4146 * x[9] + 0.4088 * sympy.sin(x[0]) - 0.7793 * sympy.sin(x[1]) * sympy.cos(x[3]) + 0.397 * sympy.sin(
            x[2]) - 0.7634 * sympy.sin(x[3]) * sympy.cos(x[8]) - 0.4628 * sympy.sin(x[6]) - 0.4994 * sympy.sin(x[7]) * sympy.cos(
            x[6]) - 0.5796 * sympy.cos(x[4]) * sympy.cos(x[7]) - 0.3016 * sympy.cos(x[7]) + 0.2224
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.2224, 'const'), ('mul', 'binary'), (0.4088, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.3016, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.4146, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.4342, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.2457, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.4628, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.2629, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.397, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.4343, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.4246, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0509, 'const'), ('X_8', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7772, 'const'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5796, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5472, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1351, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1371, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8741, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0975, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7793, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9621, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2113, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2824, 'const'), ('X_7', 'var'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5859, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8146, 'const'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1091, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7634, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5023, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4994, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6399, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2925, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_41(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_41'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4382 * x[0] * sympy.sin(x[3]) + 0.5618 * x[1] * x[3] + 0.7517 * x[2] * x[8] - 0.084 * x[2] * x[9] + 0.4191 * x[
            2] + 0.263 * x[3] * x[5] + 0.4958 * x[3] * x[6] - 0.0643 * x[3] + 0.5143 * x[4] * x[5] + 0.8026 * x[4] * x[6] + 0.4718 * x[
                            4] * sympy.sin(x[7]) + 0.1495 * x[4] - 0.5186 * x[5] * sympy.sin(x[1]) + 0.0234 * x[5] * sympy.sin(
            x[8]) - 0.6273 * x[5] * sympy.cos(x[6]) + 0.6594 * x[6] * sympy.sin(x[1]) - 0.3551 * x[7] * x[9] + 0.8287 * x[7] * sympy.sin(
            x[1]) - 0.7269 * x[7] - 0.2072 * x[8] + 0.1603 * sympy.sin(x[0]) + 0.6632 * sympy.sin(x[2]) * sympy.cos(
            x[4]) - 0.692 * sympy.sin(x[5]) + 0.1692 * sympy.sin(x[6]) * sympy.cos(x[0]) + 0.3457 * sympy.sin(x[9]) * sympy.cos(
            x[5]) - 0.0448 * sympy.sin(x[9]) + 0.0111 * sympy.cos(x[0]) * sympy.cos(x[9]) + 0.4494 * sympy.cos(x[1]) - 0.6124 * sympy.cos(
            x[6]) * sympy.cos(x[8]) + 0.4215 * sympy.cos(x[6]) - 0.9386
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9386, 'const'), ('mul', 'binary'), (-0.2072, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.692, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.4494, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.0643, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.0448, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.1603, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.1495, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.4191, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.7269, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.4215, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3457, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6594, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6124, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8287, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.263, 'const'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4958, 'const'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6632, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4382, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1692, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6273, 'const'),
                                            ('X_5', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4718, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5186, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5618, 'const'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8026, 'const'), ('X_4', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.084, 'const'), ('X_2', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3551, 'const'), ('X_7', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0234, 'const'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7517, 'const'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5143, 'const'), ('X_4', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0111, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_7(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_7'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.0966 * x[0] * x[4] - 0.7444 * x[0] * x[9] + 0.5299 * x[0] * sympy.cos(x[5]) + 0.3566 * x[1] * x[3] - 0.4452 * x[
            2] * sympy.sin(x[4]) + 0.6592 * x[2] * sympy.cos(x[0]) + 0.5928 * x[2] + 0.7485 * x[3] * sympy.sin(x[2]) - 0.4554 * x[
                            3] * sympy.sin(x[9]) + 0.4591 * x[3] + 0.1836 * x[4] * sympy.sin(x[8]) + 0.1 * x[5] * x[9] + 0.1415 * x[
                            5] - 0.2932 * x[6] * sympy.cos(x[3]) + 0.3632 * x[7] * x[8] - 0.8877 * x[8] * sympy.sin(x[0]) - 0.0175 * x[
                            8] * sympy.sin(x[3]) + 0.1909 * sympy.sin(x[0]) * sympy.sin(x[6]) + 0.4311 * sympy.sin(
            x[1]) + 0.6834 * sympy.sin(x[4]) * sympy.cos(x[1]) + 0.1754 * sympy.sin(x[4]) - 0.5674 * sympy.sin(x[7]) * sympy.cos(
            x[9]) + 0.2774 * sympy.sin(x[7]) + 0.7438 * sympy.sin(x[8]) * sympy.cos(x[5]) + 0.0015 * sympy.sin(x[8]) - 0.0249 * sympy.sin(
            x[9]) - 0.0195 * sympy.cos(x[0]) + 0.9246 * sympy.cos(x[2]) * sympy.cos(x[8]) + 0.2685 * sympy.cos(x[6]) * sympy.cos(
            x[9]) + 0.1595 * sympy.cos(x[6]) - 0.9451
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9451, 'const'), ('mul', 'binary'), (0.1595, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.0195, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.0249, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.5928, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.1754, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.2774, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.0015, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.4311, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.1415, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.4591, 'const'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3632, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4554, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3566, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7438, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5299, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2932, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7444, 'const'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1909, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5674, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7485, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6834, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4452, 'const'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1, 'const'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0175, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1836, 'const'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8877, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9246, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6592, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2685, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0966, 'const'), ('X_0', 'var'), ('X_4', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_37(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_37'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.0809 * x[0] * x[6] + 0.0002 * x[0] * sympy.sin(x[1]) - 0.6486 * x[1] * sympy.sin(x[2]) + 0.6312 * x[
            1] * sympy.sin(x[3]) - 0.6619 * x[3] * x[6] - 0.6261 * x[3] - 0.1332 * x[4] * x[9] - 0.4487 * x[4] * sympy.cos(x[2]) + 0.7303 * \
                        x[5] * sympy.sin(x[8]) - 0.0132 * x[5] * sympy.cos(x[0]) - 0.5091 * x[6] * x[9] - 0.1342 * x[6] * sympy.sin(
            x[5]) - 0.0019 * x[7] * sympy.sin(x[4]) - 0.8001 * x[7] * sympy.sin(x[8]) + 0.8406 * x[7] + 0.7637 * x[8] * sympy.sin(
            x[3]) + 0.4307 * x[8] * sympy.sin(x[6]) + 0.3974 * x[8] * sympy.cos(x[4]) + 0.9853 * x[8] - 0.1687 * x[9] * sympy.sin(
            x[8]) + 0.0885 * sympy.sin(x[0]) * sympy.sin(x[8]) + 0.7676 * sympy.sin(x[0]) - 0.719 * sympy.sin(x[1]) - 0.0888 * sympy.sin(
            x[5]) * sympy.cos(x[2]) + 0.5663 * sympy.sin(x[9]) - 0.4826 * sympy.cos(x[1]) * sympy.cos(x[7]) + 0.212 * sympy.cos(
            x[2]) - 0.9619 * sympy.cos(x[4]) + 0.8098 * sympy.cos(x[5]) - 0.0984 * sympy.cos(x[6]) - 0.4472
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4472, 'const'), ('mul', 'binary'), (0.7676, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.0984, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.9853, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.719, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.9619, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.5663, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.8098, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.212, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.6261, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.8406, 'const'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1332, 'const'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0132, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0809, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1687, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4307, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7637, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0002, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0019, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1342, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6486, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0888, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5091, 'const'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6619, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0885, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6312, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3974, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4826, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8001, 'const'), ('X_7', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7303, 'const'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4487, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_4', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_15(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_15'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0471 * x[0] * x[7] - 0.1528 * x[0] * sympy.cos(x[2]) + 0.7491 * x[0] + 0.7001 * x[1] * x[6] - 0.8094 * x[
            1] * sympy.sin(x[0]) - 0.5141 * x[1] * sympy.sin(x[3]) - 0.7836 * x[2] + 0.9379 * x[3] * sympy.cos(x[6]) - 0.9289 * x[
                            3] + 0.4326 * x[4] * sympy.sin(x[5]) + 0.5246 * x[4] * sympy.cos(x[2]) + 0.4805 * x[4] * sympy.cos(
            x[3]) + 0.8029 * x[4] - 0.46 * x[5] * sympy.cos(x[3]) + 0.6087 * x[5] * sympy.cos(x[9]) - 0.9859 * x[6] * sympy.sin(
            x[9]) + 0.1326 * x[6] * sympy.cos(x[2]) - 0.0012 * x[6] - 0.4051 * x[7] * sympy.sin(x[1]) + 0.7664 * x[7] - 0.7582 * x[
                            8] * sympy.cos(x[6]) - 0.321 * x[8] * sympy.cos(x[9]) - 0.8581 * x[9] * sympy.sin(x[0]) + 0.9254 * x[
                            9] * sympy.sin(x[2]) + 0.8727 * x[9] + 0.4815 * sympy.sin(x[2]) * sympy.sin(x[3]) - 0.1165 * sympy.sin(
            x[3]) * sympy.cos(x[7]) + 0.7818 * sympy.cos(x[1]) - 0.7358 * sympy.cos(x[5]) + 0.3816 * sympy.cos(x[8]) + 0.0816
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.0816, 'const'), ('mul', 'binary'), (0.8029, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.8727, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.9289, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.7358, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.7491, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.3816, 'const'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.0012, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.7836, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.7664, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.7818, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5141, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4051, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0471, 'const'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8581, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.321, 'const'),
                                            ('X_8', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9859, 'const'), ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.46, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4326, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1528, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4805, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7001, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4815, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5246, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1165, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7582, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8094, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9254, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1326, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9379, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6087, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_23(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_23'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5809 * x[0] * sympy.sin(x[7]) + 0.2828 * x[3] * sympy.sin(x[1]) + 0.9656 * x[3] - 0.1794 * x[4] * sympy.sin(
            x[7]) + 0.6389 * x[4] * sympy.sin(x[8]) + 0.6981 * x[4] * sympy.cos(x[3]) + 0.662 * x[4] * sympy.cos(x[9]) + 0.2589 * x[6] * x[
                            8] + 0.8843 * x[6] * x[9] - 0.8788 * x[6] * sympy.sin(x[0]) + 0.8542 * x[6] * sympy.sin(x[1]) - 0.6276 * x[
                            6] * sympy.cos(x[3]) + 0.4825 * x[6] - 0.7377 * x[7] * sympy.sin(x[6]) + 0.8781 * x[7] - 0.2619 * x[
                            8] + 0.0537 * x[9] * sympy.cos(x[1]) - 0.725 * x[9] - 0.9372 * sympy.sin(x[0]) * sympy.sin(
            x[3]) + 0.2792 * sympy.sin(x[0]) * sympy.cos(x[1]) + 0.5699 * sympy.sin(x[0]) + 0.1583 * sympy.sin(x[1]) * sympy.cos(
            x[2]) + 0.9467 * sympy.sin(x[2]) - 0.0263 * sympy.sin(x[3]) * sympy.sin(x[8]) + 0.2761 * sympy.sin(x[3]) * sympy.cos(
            x[7]) + 0.6519 * sympy.sin(x[5]) + 0.071 * sympy.sin(x[8]) * sympy.cos(x[2]) + 0.1239 * sympy.cos(x[1]) * sympy.cos(
            x[5]) + 0.4884 * sympy.cos(x[1]) - 0.0072 * sympy.cos(x[4]) + 0.6838
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6838, 'const'), ('mul', 'binary'), (0.8781, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.725, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.4884, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.5699, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.0072, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.9656, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6519, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.2619, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.9467, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.4825, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8542, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1583, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5809, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6276, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6981, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.662, 'const'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2589, 'const'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8843, 'const'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2828, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8788, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7377, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0263, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.071, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2792, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9372, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1794, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1239, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2761, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0537, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6389, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_30(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_30'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4369 * x[0] * x[1] - 0.0558 * x[0] * x[2] - 0.7714 * x[0] * sympy.cos(x[9]) - 0.1869 * x[0] + 0.9433 * x[1] * x[
            5] + 0.4422 * x[1] * x[6] - 0.7596 * x[2] * x[7] - 0.8297 * x[2] * sympy.sin(x[5]) + 0.8513 * x[2] * sympy.sin(x[8]) - 0.0003 * \
                        x[2] - 0.2763 * x[3] * x[8] + 0.4108 * x[3] * sympy.sin(x[6]) - 0.3992 * x[3] * sympy.cos(x[0]) - 0.5937 * x[
                            3] * sympy.cos(x[5]) + 0.1897 * x[4] * sympy.sin(x[7]) + 0.6651 * x[4] * sympy.cos(x[5]) - 0.0924 * x[
                            4] - 0.7326 * x[5] * x[8] + 0.5949 * x[5] + 0.9113 * x[6] - 0.8485 * x[7] + 0.1397 * x[8] * sympy.sin(
            x[7]) + 0.2696 * x[8] + 0.0386 * x[9] * sympy.cos(x[1]) + 0.8988 * sympy.sin(x[1]) * sympy.sin(x[3]) + 0.5408 * sympy.sin(
            x[1]) + 0.6365 * sympy.sin(x[3]) - 0.1096 * sympy.sin(x[6]) * sympy.cos(x[7]) + 0.843 * sympy.sin(x[9]) - 0.2162 * sympy.cos(
            x[0]) * sympy.cos(x[5]) - 0.8927
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.8927, 'const'), ('mul', 'binary'), (-0.1869, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.5949, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.9113, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.6365, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.0924, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.843, 'const'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.0003, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.5408, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.2696, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.8485, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3992, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2763, 'const'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7714, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1397, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8988, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9433, 'const'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1096, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0558, 'const'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1897, 'const'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7596, 'const'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6651, 'const'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4422, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0386, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8513, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5937, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7326, 'const'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8297, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2162, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4108, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4369, 'const'), ('X_0', 'var'), ('X_1', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_28(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_28'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7679 * x[0] * x[5] + 0.2502 * x[0] * x[6] - 0.4476 * x[0] * x[8] + 0.3145 * x[2] * x[5] + 0.0262 * x[
            2] * sympy.cos(x[3]) - 0.8671 * x[2] + 0.0626 * x[3] * x[4] - 0.0922 * x[3] * sympy.cos(x[0]) + 0.4875 * x[3] * sympy.cos(
            x[9]) + 0.8455 * x[3] + 0.7165 * x[4] * x[6] + 0.6852 * x[4] * x[7] + 0.6242 * x[4] * x[9] + 0.8583 * x[4] + 0.1388 * x[
                            5] * sympy.cos(x[1]) + 0.7143 * x[5] * sympy.cos(x[6]) + 0.3664 * x[6] * x[7] + 0.6404 * x[7] * x[8] - 0.2029 * \
                        x[7] * sympy.cos(x[3]) + 0.6156 * x[8] * sympy.cos(x[2]) + 0.2321 * x[8] * sympy.cos(x[3]) + 0.5417 * x[
                            8] + 0.7292 * x[9] + 0.5152 * sympy.sin(x[0]) - 0.9078 * sympy.sin(x[1]) * sympy.sin(x[9]) - 0.8681 * sympy.sin(
            x[1]) - 0.4196 * sympy.cos(x[1]) * sympy.cos(x[8]) + 0.5148 * sympy.cos(x[5]) + 0.3614 * sympy.cos(x[6]) - 0.3677 * sympy.cos(
            x[7]) + 0.8718
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8718, 'const'), ('mul', 'binary'), (0.5152, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.8671, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.5417, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.8681, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.5148, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.7292, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.8583, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.8455, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.3677, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.3614, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7165, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2502, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6852, 'const'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6404, 'const'), ('X_7', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1388, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4196, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7679, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2321, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0262, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0626, 'const'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6242, 'const'), ('X_4', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3664, 'const'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9078, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0922, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4875, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4476, 'const'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7143, 'const'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6156, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2029, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3145, 'const'), ('X_2', 'var'), ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_17(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_17'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9509 * x[0] * sympy.sin(x[5]) + 0.6366 * x[1] * sympy.sin(x[9]) + 0.4153 * x[1] * sympy.cos(x[0]) - 0.9106 * x[
            1] - 0.2866 * x[2] * sympy.sin(x[4]) - 0.5251 * x[2] * sympy.cos(x[0]) + 0.0089 * x[2] + 0.0016 * x[3] * x[4] + 0.3034 * x[
                            3] + 0.6278 * x[4] * sympy.cos(x[6]) + 0.0126 * x[4] * sympy.cos(x[7]) - 0.6181 * x[4] + 0.1829 * x[
                            5] * sympy.sin(x[2]) + 0.3299 * x[6] * sympy.cos(x[2]) + 0.4913 * x[6] - 0.5018 * x[7] * sympy.cos(
            x[6]) - 0.3266 * x[8] * sympy.cos(x[0]) - 0.9842 * x[8] * sympy.cos(x[3]) - 0.9198 * x[8] - 0.0075 * x[9] * sympy.cos(
            x[2]) - 0.2061 * x[9] + 0.048 * sympy.sin(x[0]) * sympy.cos(x[3]) + 0.6764 * sympy.sin(x[1]) * sympy.cos(
            x[3]) - 0.3149 * sympy.sin(x[3]) * sympy.cos(x[5]) - 0.9247 * sympy.sin(x[5]) + 0.4455 * sympy.sin(x[8]) * sympy.cos(
            x[6]) - 0.733 * sympy.sin(x[9]) * sympy.cos(x[0]) + 0.4015 * sympy.cos(x[0]) + 0.4042 * sympy.cos(x[5]) * sympy.cos(
            x[8]) + 0.0656 * sympy.cos(x[7]) - 0.7654
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7654, 'const'), ('mul', 'binary'), (0.3034, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.0656, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.0089, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.4913, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.9106, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.6181, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.9247, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.4015, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.2061, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.9198, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2866, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9842, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4455, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3266, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1829, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0016, 'const'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9509, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3299, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4042, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4153, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0126, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6366, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.733, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6278, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5018, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5251, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.048, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3149, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0075, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6764, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_43(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_43'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7482 * x[1] * x[5] + 0.112 * x[1] * x[8] - 0.1398 * x[2] * sympy.sin(x[5]) - 0.6627 * x[2] - 0.6086 * x[3] * x[
            5] - 0.5427 * x[3] * sympy.sin(x[1]) + 0.9531 * x[3] + 0.4882 * x[4] * sympy.sin(x[8]) - 0.6254 * x[4] * sympy.cos(
            x[9]) + 0.5191 * x[4] + 0.4189 * x[5] * sympy.sin(x[7]) - 0.7698 * x[5] + 0.9298 * x[6] * sympy.cos(x[4]) - 0.6617 * x[
                            6] + 0.4655 * x[7] * sympy.sin(x[0]) - 0.1188 * x[7] * sympy.sin(x[2]) + 0.7714 * x[7] - 0.0743 * x[
                            8] * sympy.sin(x[6]) + 0.5434 * x[9] * sympy.sin(x[3]) + 0.652 * x[9] * sympy.sin(x[5]) - 0.0283 * sympy.sin(
            x[0]) * sympy.sin(x[1]) + 0.7251 * sympy.sin(x[0]) * sympy.cos(x[8]) + 0.8816 * sympy.sin(x[0]) - 0.6133 * sympy.sin(
            x[1]) - 0.4383 * sympy.sin(x[9]) * sympy.cos(x[1]) + 0.4175 * sympy.cos(x[1]) * sympy.cos(x[4]) + 0.0567 * sympy.cos(
            x[2]) * sympy.cos(x[8]) - 0.5657 * sympy.cos(x[3]) * sympy.cos(x[7]) - 0.8823 * sympy.cos(x[8]) - 0.7139 * sympy.cos(
            x[9]) + 0.815
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.815, 'const'), ('mul', 'binary'), (-0.6617, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.6627, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.9531, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.7714, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.7698, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.7139, 'const'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.6133, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.8823, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.8816, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.5191, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4383, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.652, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5657, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0283, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4882, 'const'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7251, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5434, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6254, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1188, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0567, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6086, 'const'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4655, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4189, 'const'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.112, 'const'),
                                            ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5427, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0743, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4175, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9298, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1398, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7482, 'const'), ('X_1', 'var'), ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_2(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_2'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.6214 * x[0] * sympy.cos(x[7]) + 0.8268 * x[0] - 0.5346 * x[1] * sympy.sin(x[9]) + 0.1485 * x[1] * sympy.cos(
            x[4]) + 0.6439 * x[3] * x[6] - 0.3394 * x[3] * sympy.sin(x[1]) - 0.4107 * x[3] * sympy.sin(x[2]) + 0.1923 * x[3] * sympy.sin(
            x[4]) + 0.382 * x[4] - 0.2127 * x[5] * x[8] + 0.1462 * x[5] * sympy.cos(x[6]) + 0.9368 * x[6] * sympy.cos(x[2]) + 0.8902 * x[
                            6] - 0.9055 * x[7] * sympy.sin(x[2]) + 0.0365 * x[7] * sympy.cos(x[3]) - 0.8976 * x[9] * sympy.sin(
            x[5]) + 0.8423 * x[9] * sympy.cos(x[4]) + 0.7565 * sympy.sin(x[3]) + 0.993 * sympy.sin(x[4]) * sympy.sin(
            x[5]) + 0.1028 * sympy.sin(x[4]) * sympy.sin(x[8]) + 0.2623 * sympy.sin(x[7]) - 0.3117 * sympy.sin(x[8]) * sympy.cos(
            x[9]) - 0.7935 * sympy.sin(x[9]) * sympy.cos(x[2]) + 0.4083 * sympy.sin(x[9]) - 0.0908 * sympy.cos(x[0]) * sympy.cos(
            x[1]) - 0.4854 * sympy.cos(x[1]) * sympy.cos(x[7]) + 0.9504 * sympy.cos(x[1]) + 0.1156 * sympy.cos(x[2]) - 0.7521 * sympy.cos(
            x[5]) + 0.7019 * sympy.cos(x[8]) + 0.3696
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3696, 'const'), ('mul', 'binary'), (0.4083, 'const'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.7565, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.8268, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.7521, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.1156, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.2623, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.9504, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.382, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.8902, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.7019, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0908, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4107, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7935, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1485, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9368, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.993, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3394, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8976, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4854, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1462, 'const'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1923, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1028, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9055, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8423, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5346, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3117, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0365, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6439, 'const'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2127, 'const'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6214, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_4(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_4'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8127 * x[0] * x[2] + 0.8189 * x[0] * x[4] - 0.926 * x[0] * x[5] - 0.708 * x[1] * sympy.cos(x[2]) + 0.2576 * x[
            1] * sympy.cos(x[3]) - 0.249 * x[2] * x[5] - 0.4049 * x[2] * x[6] + 0.3467 * x[3] * sympy.sin(x[8]) + 0.9337 * x[4] * sympy.cos(
            x[2]) + 0.6367 * x[4] * sympy.cos(x[9]) + 0.009 * x[5] - 0.8687 * x[7] * sympy.sin(x[1]) + 0.1972 * x[7] * sympy.sin(
            x[5]) + 0.2026 * x[7] * sympy.cos(x[0]) - 0.6757 * x[8] * sympy.sin(x[9]) - 0.0991 * x[9] * sympy.sin(x[5]) + 0.4785 * x[
                            9] * sympy.cos(x[7]) - 0.1855 * sympy.sin(x[0]) * sympy.sin(x[9]) - 0.188 * sympy.sin(
            x[2]) + 0.2843 * sympy.sin(x[3]) + 0.803 * sympy.sin(x[4]) - 0.8067 * sympy.sin(x[5]) * sympy.cos(x[3]) + 0.3781 * sympy.sin(
            x[6]) - 0.678 * sympy.sin(x[7]) - 0.0011 * sympy.sin(x[8]) - 0.5859 * sympy.cos(x[0]) + 0.6386 * sympy.cos(
            x[1]) - 0.9256 * sympy.cos(x[6]) * sympy.cos(x[8]) + 0.0713 * sympy.cos(x[6]) * sympy.cos(x[9]) + 0.9854 * sympy.cos(
            x[9]) + 0.0157
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.0157, 'const'), ('mul', 'binary'), (0.2843, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.009, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.3781, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.9854, 'const'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.6386, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.0011, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.5859, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.188, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.803, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.678, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.249, 'const'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2026, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.708, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3467, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1855, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6367, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6757, 'const'), ('X_8', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2576, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8189, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.926, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9256, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4049, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9337, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8067, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1972, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0991, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4785, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8127, 'const'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8687, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0713, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_45(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_45'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.6207 * x[0] * sympy.cos(x[4]) + 0.3662 * x[1] * sympy.sin(x[0]) + 0.264 * x[1] + 0.8211 * x[2] * x[4] + 0.1192 * \
                        x[2] * x[6] + 0.4533 * x[2] * sympy.sin(x[8]) - 0.4472 * x[2] + 0.8299 * x[3] * sympy.cos(x[2]) + 0.343 * x[
                            3] * sympy.cos(x[6]) + 0.0447 * x[4] * x[8] - 0.6022 * x[5] * x[8] - 0.9643 * x[5] * x[9] - 0.5889 * x[
                            5] * sympy.sin(x[2]) + 0.3257 * x[5] * sympy.cos(x[1]) + 0.0566 * x[6] * sympy.cos(x[4]) + 0.8024 * x[
                            6] * sympy.cos(x[8]) + 0.335 * x[6] + 0.8892 * x[7] * sympy.cos(x[4]) + 0.9674 * x[8] * sympy.cos(
            x[0]) + 0.4751 * x[8] * sympy.cos(x[7]) - 0.1124 * x[9] - 0.8214 * sympy.sin(x[0]) * sympy.sin(x[7]) + 0.9365 * sympy.cos(
            x[0]) + 0.4696 * sympy.cos(x[3]) * sympy.cos(x[8]) - 0.5892 * sympy.cos(x[3]) + 0.1355 * sympy.cos(x[4]) + 0.9256 * sympy.cos(
            x[5]) * sympy.cos(x[6]) - 0.4289 * sympy.cos(x[5]) + 0.9383 * sympy.cos(x[7]) + 0.5584 * sympy.cos(x[8]) + 0.6047
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6047, 'const'), ('mul', 'binary'), (0.5584, 'const'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.5892, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.335, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.4472, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.1355, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.264, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.1124, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.9365, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.4289, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.9383, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0566, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9256, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1192, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8214, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4533, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8024, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4751, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3662, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3257, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8892, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6022, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9643, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8299, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4696, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6207, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.343, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8211, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0447, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9674, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5889, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_49(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_49'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.875 * x[0] * x[8] + 0.3051 * x[0] * sympy.cos(x[5]) + 0.4384 * x[0] + 0.1742 * x[1] * sympy.cos(x[4]) + 0.8558 * \
                        x[1] * sympy.cos(x[5]) + 0.8251 * x[1] + 0.4566 * x[2] * x[5] + 0.7455 * x[2] * x[6] + 0.0629 * x[2] * x[
                            8] - 0.1697 * x[2] * sympy.sin(x[9]) + 0.9608 * x[3] * sympy.sin(x[4]) + 0.4012 * x[3] * sympy.sin(
            x[9]) + 0.6888 * x[4] * x[9] + 0.6008 * x[4] * sympy.sin(x[8]) + 0.9497 * x[4] - 0.0368 * x[5] + 0.6291 * x[6] * sympy.cos(
            x[7]) + 0.8303 * x[6] - 0.7933 * x[7] * sympy.sin(x[9]) - 0.6409 * x[8] - 0.6275 * sympy.sin(x[0]) * sympy.cos(
            x[1]) - 0.4851 * sympy.sin(x[1]) * sympy.cos(x[2]) - 0.1998 * sympy.sin(x[3]) * sympy.cos(x[8]) + 0.1657 * sympy.sin(
            x[6]) * sympy.sin(x[8]) - 0.6575 * sympy.sin(x[9]) * sympy.cos(x[1]) + 0.7595 * sympy.sin(x[9]) - 0.9192 * sympy.cos(
            x[2]) * sympy.cos(x[4]) - 0.4364 * sympy.cos(x[2]) - 0.9236 * sympy.cos(x[3]) + 0.7951 * sympy.cos(x[7]) - 0.9699
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9699, 'const'), ('mul', 'binary'), (0.4384, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.6409, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.0368, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.7595, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.7951, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.4364, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.9236, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.8303, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.9497, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.8251, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8558, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6291, 'const'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1697, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4566, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4012, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6575, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1742, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.875, 'const'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9192, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7933, 'const'), ('X_7', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7455, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6275, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9608, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1657, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6888, 'const'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6008, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1998, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4851, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0629, 'const'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3051, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_11(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_11'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9084 * x[0] * x[2] + 0.4682 * x[0] * x[5] + 0.2177 * x[0] * x[7] + 0.716 * x[0] * x[9] - 0.9773 * x[0] + 0.9067 * \
                        x[1] * x[5] + 0.6022 * x[1] * x[8] - 0.9375 * x[1] * sympy.cos(x[7]) - 0.0871 * x[1] + 0.918 * x[2] * x[
                            5] + 0.9649 * x[2] * sympy.sin(x[4]) + 0.1677 * x[3] - 0.8164 * x[5] * x[7] - 0.1726 * x[6] * sympy.sin(
            x[2]) + 0.5297 * x[6] - 0.2265 * x[8] * sympy.sin(x[9]) + 0.6645 * x[8] * sympy.cos(x[3]) - 0.2125 * sympy.sin(
            x[0]) * sympy.sin(x[3]) - 0.5813 * sympy.sin(x[5]) * sympy.sin(x[6]) - 0.0012 * sympy.sin(x[5]) * sympy.cos(
            x[8]) + 0.4863 * sympy.sin(x[6]) * sympy.cos(x[7]) - 0.3483 * sympy.sin(x[7]) * sympy.cos(x[4]) + 0.2922 * sympy.sin(
            x[7]) * sympy.cos(x[9]) + 0.0121 * sympy.sin(x[7]) + 0.3534 * sympy.sin(x[9]) * sympy.cos(x[6]) + 0.8592 * sympy.cos(
            x[2]) + 0.2642 * sympy.cos(x[4]) + 0.6913 * sympy.cos(x[5]) - 0.3136 * sympy.cos(x[8]) + 0.2002 * sympy.cos(x[9]) + 0.1127
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1127, 'const'), ('mul', 'binary'), (-0.9773, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.1677, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.6913, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.0871, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.8592, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.5297, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.0121, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.2002, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.2642, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.3136, 'const'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9649, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8164, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6645, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3483, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5813, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0012, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2922, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1726, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3534, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4863, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4682, 'const'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6022, 'const'),
                                            ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2265, 'const'),
                                            ('X_8', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2125, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9375, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9084, 'const'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9067, 'const'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.918, 'const'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2177, 'const'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.716, 'const'), ('X_0', 'var'),
                                            ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_10(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_10'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7707 * x[0] * x[4] + 0.4012 * x[0] * x[6] + 0.2538 * x[0] * x[7] + 0.8759 * x[0] * sympy.sin(x[5]) + 0.5583 * x[
            1] * x[9] - 0.9635 * x[1] + 0.8892 * x[2] - 0.0466 * x[3] * sympy.sin(x[9]) - 0.701 * x[3] - 0.3764 * x[4] - 0.5345 * x[5] * x[
                            6] + 0.9582 * x[5] * sympy.cos(x[4]) - 0.9471 * x[7] * sympy.sin(x[2]) - 0.7164 * x[7] * sympy.cos(
            x[3]) + 0.1955 * x[7] * sympy.cos(x[5]) - 0.4183 * x[8] * sympy.sin(x[4]) + 0.587 * x[8] + 0.1973 * x[9] * sympy.sin(
            x[2]) - 0.7353 * x[9] * sympy.cos(x[4]) - 0.736 * sympy.sin(x[0]) * sympy.sin(x[1]) - 0.864 * sympy.sin(
            x[0]) - 0.5342 * sympy.sin(x[2]) * sympy.cos(x[3]) - 0.3362 * sympy.sin(x[5]) * sympy.cos(x[1]) + 0.8369 * sympy.sin(
            x[5]) * sympy.cos(x[2]) + 0.5155 * sympy.sin(x[6]) * sympy.sin(x[8]) - 0.515 * sympy.sin(x[6]) * sympy.cos(
            x[1]) - 0.9607 * sympy.sin(x[6]) + 0.2402 * sympy.sin(x[9]) - 0.15 * sympy.cos(x[5]) - 0.2871 * sympy.cos(x[7]) + 0.1779
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1779, 'const'), ('mul', 'binary'), (0.587, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.864, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.8892, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.3764, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.15, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.2871, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.9607, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.2402, 'const'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.9635, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.701, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1955, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8759, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5345, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4183, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5155, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7353, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8369, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9471, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.515, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3362, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5583, 'const'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9582, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.736, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1973, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0466, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4012, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7707, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2538, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5342, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7164, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_1(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_1'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8628 * x[0] * x[1] + 0.2561 * x[0] * sympy.sin(x[5]) - 0.0187 * x[2] * sympy.sin(x[0]) - 0.3413 * x[3] * x[
            7] + 0.8566 * x[3] * sympy.cos(x[9]) - 0.9723 * x[5] * x[7] + 0.2888 * x[5] * sympy.sin(x[6]) - 0.4103 * x[6] * sympy.sin(
            x[3]) - 0.2286 * x[6] * sympy.sin(x[4]) + 0.473 * x[6] * sympy.cos(x[0]) + 0.2174 * x[6] * sympy.cos(x[1]) - 0.6748 * x[
                            6] * sympy.cos(x[8]) - 0.0734 * x[7] * sympy.cos(x[2]) + 0.839 * x[7] + 0.6798 * x[8] * sympy.sin(
            x[5]) + 0.2812 * x[8] * sympy.cos(x[9]) - 0.0459 * x[9] * sympy.sin(x[0]) + 0.1885 * x[9] * sympy.cos(
            x[7]) - 0.7486 * sympy.sin(x[1]) - 0.3319 * sympy.sin(x[3]) * sympy.cos(x[8]) + 0.4604 * sympy.sin(x[3]) - 0.4265 * sympy.sin(
            x[5]) + 0.0061 * sympy.sin(x[6]) * sympy.cos(x[7]) + 0.1661 * sympy.sin(x[9]) * sympy.cos(x[6]) + 0.8571 * sympy.cos(
            x[0]) + 0.808 * sympy.cos(x[2]) - 0.4942 * sympy.cos(x[4]) + 0.1147 * sympy.cos(x[6]) - 0.8381 * sympy.cos(
            x[8]) - 0.5926 * sympy.cos(x[9]) - 0.0106
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.0106, 'const'), ('mul', 'binary'), (-0.4265, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.8571, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.808, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.839, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.7486, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.1147, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.4942, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.4604, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.5926, 'const'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.8381, 'const'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3319, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4103, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2888, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2174, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8628, 'const'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0459, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0734, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3413, 'const'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2561, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6798, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2812, 'const'), ('X_8', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0187, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6748, 'const'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9723, 'const'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1885, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1661, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0061, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8566, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2286, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.473, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_6', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_40(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_40'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.6501 * x[0] * x[5] - 0.8478 * x[0] - 0.4951 * x[1] * x[7] - 0.8566 * x[2] * sympy.sin(x[5]) - 0.047 * x[3] * x[
            6] - 0.5923 * x[3] * x[8] + 0.1614 * x[3] * sympy.cos(x[1]) - 0.1411 * x[3] * sympy.cos(x[5]) + 0.6935 * x[4] * sympy.sin(
            x[0]) - 0.9561 * x[4] + 0.1152 * x[5] * x[7] - 0.1117 * x[6] * x[9] - 0.1987 * x[6] * sympy.sin(x[1]) - 0.3455 * x[
                            6] * sympy.sin(x[4]) + 0.6116 * x[6] * sympy.cos(x[0]) - 0.3095 * x[6] - 0.4189 * x[7] * sympy.cos(
            x[2]) + 0.4253 * x[7] * sympy.cos(x[6]) - 0.3296 * x[8] * sympy.sin(x[0]) + 0.744 * x[8] - 0.6076 * sympy.sin(
            x[3]) + 0.8271 * sympy.sin(x[5]) + 0.4465 * sympy.sin(x[7]) * sympy.cos(x[8]) - 0.4648 * sympy.cos(x[0]) * sympy.cos(
            x[2]) - 0.4464 * sympy.cos(x[1]) + 0.9135 * sympy.cos(x[2]) * sympy.cos(x[8]) + 0.7262 * sympy.cos(x[2]) + 0.5285 * sympy.cos(
            x[4]) * sympy.cos(x[9]) - 0.8819 * sympy.cos(x[7]) - 0.2383 * sympy.cos(x[9]) + 0.4079
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.4079, 'const'), ('mul', 'binary'), (0.7262, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.4464, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.744, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.8819, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.3095, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.9561, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.8478, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.2383, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.6076, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.8271, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6116, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1614, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4648, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1152, 'const'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1117, 'const'), ('X_6', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1411, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4465, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6935, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9135, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5923, 'const'),
                                            ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.047, 'const'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3296, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6501, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8566, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5285, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3455, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1987, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4189, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4253, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4951, 'const'), ('X_1', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_29(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_29'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7355 * x[0] * x[3] + 0.5987 * x[0] * x[8] + 0.7001 * x[0] + 0.4068 * x[1] * sympy.sin(x[6]) - 0.1236 * x[
            1] - 0.8369 * x[3] * x[8] - 0.5048 * x[3] + 0.8503 * x[4] * x[9] + 0.8049 * x[4] * sympy.cos(x[1]) + 0.9548 * x[4] * sympy.cos(
            x[6]) - 0.0144 * x[4] * sympy.cos(x[8]) + 0.5119 * x[4] + 0.5979 * x[5] * x[7] + 0.1688 * x[5] * x[8] + 0.6766 * x[5] * x[
                            9] + 0.0807 * x[6] * x[8] - 0.4172 * x[6] - 0.718 * sympy.sin(x[2]) * sympy.sin(x[8]) + 0.2465 * sympy.sin(
            x[2]) * sympy.cos(x[7]) - 0.9987 * sympy.sin(x[5]) * sympy.cos(x[0]) - 0.2094 * sympy.sin(x[8]) + 0.2938 * sympy.sin(
            x[9]) + 0.6577 * sympy.cos(x[0]) * sympy.cos(x[7]) + 0.476 * sympy.cos(x[1]) * sympy.cos(x[3]) - 0.984 * sympy.cos(
            x[1]) * sympy.cos(x[5]) + 0.7453 * sympy.cos(x[1]) * sympy.cos(x[8]) + 0.9565 * sympy.cos(x[2]) + 0.421 * sympy.cos(
            x[5]) - 0.9883 * sympy.cos(x[6]) * sympy.cos(x[7]) + 0.0878 * sympy.cos(x[7]) + 0.3956
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3956, 'const'), ('mul', 'binary'), (-0.4172, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.2094, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.7001, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.5048, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.2938, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.5119, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.421, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.0878, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.9565, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.1236, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5979, 'const'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9548, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5987, 'const'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.476, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7453, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2465, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1688, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6577, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8369, 'const'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0807, 'const'), ('X_6', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8503, 'const'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.984, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7355, 'const'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4068, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9883, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8049, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0144, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9987, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.718, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6766, 'const'), ('X_5', 'var'),
                                            ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_22(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_22'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2946 * x[0] * x[9] - 0.3436 * x[0] * sympy.cos(x[7]) + 0.1836 * x[0] * sympy.cos(x[8]) + 0.515 * x[0] - 0.9725 * \
                        x[1] * x[4] + 0.233 * x[1] * x[9] - 0.9203 * x[1] * sympy.sin(x[5]) + 0.6371 * x[2] * x[8] - 0.4006 * x[
                            2] * sympy.sin(x[1]) - 0.8571 * x[2] - 0.7273 * x[3] * sympy.sin(x[8]) - 0.9627 * x[3] - 0.4188 * x[
                            4] * sympy.sin(x[6]) + 0.6973 * x[4] + 0.0238 * x[5] * sympy.sin(x[3]) - 0.7142 * x[5] * sympy.sin(
            x[8]) + 0.5285 * x[5] + 0.3163 * x[6] * sympy.cos(x[1]) + 0.6674 * x[7] * x[8] + 0.1531 * x[8] * sympy.sin(x[9]) + 0.9962 * x[
                            9] * sympy.sin(x[5]) + 0.7711 * x[9] * sympy.cos(x[6]) + 0.6446 * sympy.sin(x[1]) * sympy.cos(
            x[8]) - 0.5633 * sympy.sin(x[6]) + 0.2635 * sympy.sin(x[7]) * sympy.cos(x[1]) + 0.4665 * sympy.sin(x[9]) + 0.4807 * sympy.cos(
            x[1]) + 0.5672 * sympy.cos(x[4]) * sympy.cos(x[5]) + 0.4625 * sympy.cos(x[7]) + 0.6407 * sympy.cos(x[8]) + 0.6329
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6329, 'const'), ('mul', 'binary'), (0.5285, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.4665, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.8571, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.4625, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.9627, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.4807, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.515, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.6407, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.6973, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.5633, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5672, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4006, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.233, 'const'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2635, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3436, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4188, 'const'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6674, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9203, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3163, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6446, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7142, 'const'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1531, 'const'), ('X_8', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7711, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7273, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1836, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9962, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6371, 'const'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2946, 'const'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0238, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9725, 'const'), ('X_1', 'var'), ('X_4', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_27(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_27'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0087 * x[0] * x[6] - 0.0611 * x[0] * sympy.cos(x[7]) - 0.392 * x[1] * x[3] + 0.6237 * x[1] * sympy.sin(
            x[6]) + 0.6482 * x[1] * sympy.sin(x[7]) - 0.3291 * x[1] * sympy.cos(x[2]) + 0.5243 * x[1] * sympy.cos(x[4]) + 0.8397 * x[
                            1] - 0.3452 * x[2] * x[8] + 0.0747 * x[2] * sympy.sin(x[7]) + 0.4549 * x[2] * sympy.cos(x[0]) + 0.8127 * x[
                            2] + 0.6648 * x[3] * x[9] - 0.7903 * x[3] * sympy.cos(x[2]) + 0.5917 * x[3] + 0.4235 * x[4] * x[8] - 0.0199 * x[
                            4] - 0.519 * x[5] + 0.6648 * x[8] * sympy.sin(x[1]) - 0.5729 * x[9] * sympy.sin(x[2]) + 0.0564 * x[
                            9] - 0.5273 * sympy.sin(x[0]) - 0.7884 * sympy.sin(x[5]) * sympy.cos(x[1]) - 0.0722 * sympy.sin(
            x[6]) * sympy.sin(x[7]) + 0.1467 * sympy.sin(x[6]) * sympy.sin(x[8]) - 0.4982 * sympy.sin(x[8]) - 0.2965 * sympy.cos(
            x[0]) * sympy.cos(x[3]) - 0.5788 * sympy.cos(x[6]) - 0.4406 * sympy.cos(x[7]) - 0.8479 * sympy.cos(x[8]) * sympy.cos(
            x[9]) - 0.3491
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3491, 'const'), ('mul', 'binary'), (-0.4406, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.0199, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.8127, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.5273, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.5917, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.4982, 'const'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.519, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.8397, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.0564, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.5788, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4235, 'const'), ('X_4', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7884, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3291, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0722, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1467, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3452, 'const'),
                                            ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6482, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6648, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0747, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4549, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7903, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0087, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2965, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.392, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6648, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5243, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6237, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5729, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8479, 'const'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0611, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_34(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_34'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4153 * x[0] * x[6] - 0.2667 * x[0] * x[9] - 0.7943 * x[0] * sympy.cos(x[5]) - 0.251 * x[0] + 0.7981 * x[1] * x[
            7] + 0.4807 * x[1] * sympy.cos(x[4]) - 0.6828 * x[1] - 0.0405 * x[2] * x[4] - 0.2197 * x[2] * sympy.sin(x[7]) + 0.4883 * x[
                            2] * sympy.cos(x[0]) + 0.1006 * x[2] * sympy.cos(x[9]) - 0.8878 * x[2] + 0.6649 * x[4] * x[7] + 0.6896 * x[4] * \
                        x[9] + 0.9168 * x[6] * x[8] + 0.9669 * x[6] * sympy.cos(x[5]) - 0.7233 * x[6] * sympy.cos(x[9]) - 0.2462 * x[
                            6] - 0.2427 * x[7] - 0.5022 * x[8] * x[9] - 0.2111 * x[8] + 0.3918 * x[9] + 0.1327 * sympy.sin(
            x[1]) * sympy.sin(x[5]) + 0.0196 * sympy.sin(x[2]) * sympy.cos(x[6]) - 0.441 * sympy.sin(x[5]) * sympy.cos(
            x[4]) - 0.4686 * sympy.sin(x[5]) + 0.3819 * sympy.sin(x[8]) * sympy.cos(x[2]) + 0.7035 * sympy.cos(x[3]) - 0.6063 * sympy.cos(
            x[4]) - 0.1249 * sympy.cos(x[5]) * sympy.cos(x[9]) + 0.1492
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1492, 'const'), ('mul', 'binary'), (-0.2427, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.251, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.6828, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.2111, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.8878, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.4686, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.2462, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.3918, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.6063, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.7035, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1006, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2197, 'const'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9669, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4807, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7943, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0196, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6896, 'const'), ('X_4', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7233, 'const'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6649, 'const'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4883, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2667, 'const'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3819, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4153, 'const'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0405, 'const'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5022, 'const'), ('X_8', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7981, 'const'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.441, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9168, 'const'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1327, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1249, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_16(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_16'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9306 * x[0] * x[5] - 0.9743 * x[1] * sympy.sin(x[6]) + 0.0676 * x[2] * x[5] - 0.7535 * x[2] + 0.7295 * x[3] * x[
            8] + 0.8985 * x[3] + 0.0453 * x[4] * sympy.sin(x[2]) + 0.1578 * x[4] * sympy.cos(x[6]) + 0.5275 * x[4] * sympy.cos(
            x[8]) - 0.0665 * x[4] - 0.2988 * x[5] * x[6] + 0.6578 * x[5] * sympy.cos(x[7]) + 0.8946 * x[6] * x[7] + 0.048 * x[
                            6] * sympy.cos(x[3]) - 0.2137 * x[6] - 0.9297 * x[7] * sympy.sin(x[3]) + 0.1621 * x[8] * sympy.cos(
            x[0]) - 0.4629 * x[8] * sympy.cos(x[5]) + 0.2194 * x[8] - 0.8863 * x[9] * sympy.sin(x[3]) + 0.1597 * x[9] * sympy.cos(
            x[2]) - 0.6551 * x[9] * sympy.cos(x[8]) + 0.1734 * sympy.sin(x[2]) * sympy.sin(x[7]) + 0.8569 * sympy.sin(x[3]) * sympy.cos(
            x[2]) + 0.4588 * sympy.sin(x[5]) - 0.0322 * sympy.sin(x[7]) - 0.3037 * sympy.sin(x[9]) - 0.4689 * sympy.cos(
            x[0]) - 0.0691 * sympy.cos(x[1]) + 0.1628 * sympy.cos(x[6]) * sympy.cos(x[8]) + 0.4154
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.4154, 'const'), ('mul', 'binary'), (0.2194, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.4689, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.2137, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.0665, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.3037, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.7535, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.8985, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.4588, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.0322, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.0691, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1734, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1621, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8569, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7295, 'const'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2988, 'const'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9306, 'const'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4629, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5275, 'const'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6551, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9743, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1597, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1628, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0453, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8946, 'const'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0676, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.048, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1578, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8863, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6578, 'const'),
                                            ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9297, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_13(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_13'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.1731 * x[0] * x[1] - 0.4507 * x[0] * sympy.sin(x[3]) + 0.9669 * x[0] * sympy.cos(x[7]) + 0.7355 * x[1] * x[
            2] - 0.0917 * x[1] * x[4] - 0.7392 * x[1] * x[9] - 0.8475 * x[2] * sympy.sin(x[9]) + 0.3597 * x[3] * x[5] + 0.1347 * x[
                            3] * sympy.cos(x[8]) - 0.5389 * x[4] + 0.095 * x[5] * x[6] - 0.338 * x[6] * sympy.cos(x[2]) + 0.9551 * x[
                            6] * sympy.cos(x[3]) + 0.6363 * x[6] * sympy.cos(x[4]) + 0.2409 * x[7] + 0.9643 * x[8] * x[9] + 0.1569 * x[
                            9] * sympy.sin(x[0]) - 0.5511 * x[9] * sympy.sin(x[5]) - 0.0416 * x[9] * sympy.sin(x[6]) - 0.2688 * x[
                            9] * sympy.sin(x[7]) + 0.4226 * sympy.sin(x[0]) + 0.0378 * sympy.sin(x[2]) * sympy.cos(
            x[8]) + 0.253 * sympy.sin(x[2]) + 0.1174 * sympy.sin(x[3]) - 0.7235 * sympy.sin(x[8]) - 0.9281 * sympy.sin(
            x[9]) - 0.7885 * sympy.cos(x[1]) + 0.8824 * sympy.cos(x[5]) - 0.0783 * sympy.cos(x[6]) * sympy.cos(x[8]) - 0.1831 * sympy.cos(
            x[6]) + 0.7668
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7668, 'const'), ('mul', 'binary'), (-0.5389, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.253, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.4226, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.1174, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.8824, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.7885, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.1831, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.2409, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.7235, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.9281, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0378, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0783, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0917, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1731, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7355, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4507, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1347, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8475, 'const'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1569, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9669, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3597, 'const'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6363, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7392, 'const'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9643, 'const'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9551, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2688, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.338, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5511, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.095, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0416, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_47(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_47'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.3462 * x[0] * x[5] + 0.5902 * x[0] * sympy.cos(x[6]) - 0.9038 * x[1] * x[7] - 0.8872 * x[1] * sympy.sin(
            x[8]) + 0.4515 * x[1] * sympy.cos(x[6]) - 0.3681 * x[2] * sympy.sin(x[5]) - 0.706 * x[2] * sympy.cos(x[8]) - 0.9072 * x[
                            3] * sympy.cos(x[0]) - 0.6819 * x[3] * sympy.cos(x[2]) + 0.9299 * x[3] - 0.398 * x[5] * sympy.cos(
            x[3]) + 0.6074 * x[6] * sympy.sin(x[4]) + 0.0467 * x[6] * sympy.sin(x[9]) - 0.565 * x[6] * sympy.cos(x[7]) - 0.713 * x[7] * x[
                            8] - 0.9558 * x[7] * sympy.cos(x[0]) - 0.514 * x[8] - 0.2666 * x[9] + 0.2522 * sympy.sin(
            x[0]) + 0.4157 * sympy.sin(x[1]) * sympy.sin(x[4]) - 0.4485 * sympy.sin(x[2]) * sympy.sin(x[7]) - 0.6075 * sympy.sin(
            x[2]) * sympy.cos(x[0]) - 0.0864 * sympy.sin(x[2]) - 0.7588 * sympy.sin(x[4]) * sympy.cos(x[7]) - 0.1108 * sympy.sin(
            x[4]) + 0.6532 * sympy.sin(x[6]) - 0.1993 * sympy.sin(x[8]) * sympy.cos(x[6]) - 0.2773 * sympy.cos(x[1]) - 0.5491 * sympy.cos(
            x[5]) - 0.0752 * sympy.cos(x[7]) + 0.0534
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.0534, 'const'), ('mul', 'binary'), (-0.0752, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.6532, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.0864, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.5491, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.2522, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.2773, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.2666, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.1108, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.514, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.9299, 'const'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7588, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.706, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6819, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3681, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4157, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9038, 'const'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8872, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9072, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9558, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.398, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6074, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0467, 'const'), ('X_6', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5902, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3462, 'const'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6075, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.713, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4485, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.565, 'const'), ('X_6', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4515, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1993, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_36(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_36'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7856 * x[0] * x[9] + 0.5022 * x[0] * sympy.cos(x[2]) - 0.8286 * x[1] * sympy.sin(x[6]) - 0.2873 * x[
            3] * sympy.sin(x[5]) + 0.802 * x[3] - 0.1266 * x[4] - 0.9228 * x[5] * sympy.cos(x[7]) + 0.3929 * x[6] * sympy.sin(
            x[8]) - 0.1675 * x[6] + 0.4875 * x[7] * sympy.sin(x[3]) - 0.1487 * x[8] * sympy.sin(x[5]) + 0.6325 * x[8] * sympy.cos(
            x[2]) - 0.0908 * x[8] - 0.2724 * sympy.sin(x[0]) * sympy.sin(x[1]) - 0.1375 * sympy.sin(x[0]) * sympy.sin(
            x[3]) + 0.3676 * sympy.sin(x[1]) + 0.0549 * sympy.sin(x[2]) * sympy.sin(x[3]) + 0.4604 * sympy.sin(x[2]) * sympy.sin(
            x[7]) - 0.2672 * sympy.sin(x[2]) * sympy.cos(x[1]) - 0.0018 * sympy.sin(x[2]) * sympy.cos(x[6]) - 0.0246 * sympy.sin(
            x[4]) * sympy.sin(x[7]) - 0.6552 * sympy.sin(x[5]) * sympy.sin(x[9]) - 0.2074 * sympy.sin(x[5]) + 0.035 * sympy.sin(
            x[9]) - 0.4366 * sympy.cos(x[0]) * sympy.cos(x[4]) - 0.7861 * sympy.cos(x[0]) * sympy.cos(x[7]) + 0.4765 * sympy.cos(
            x[0]) - 0.4749 * sympy.cos(x[2]) + 0.704 * sympy.cos(x[3]) * sympy.cos(x[4]) - 0.7067 * sympy.cos(x[7]) - 0.3003
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3003, 'const'), ('mul', 'binary'), (-0.0908, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.2074, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.802, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.4765, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.4749, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.1266, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.3676, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.1675, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.7067, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (0.035, 'const'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.704, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7861, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5022, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3929, 'const'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0018, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2724, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9228, 'const'),
                                            ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4366, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0549, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2672, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4604, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8286, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2873, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4875, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0246, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1375, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6325, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6552, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1487, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7856, 'const'),
                                            ('X_0', 'var'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_44(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_44'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4028 * x[0] * sympy.sin(x[4]) - 0.3628 * x[0] * sympy.cos(x[2]) + 0.1345 * x[0] - 0.2681 * x[1] * x[5] - 0.9493 * \
                        x[1] * sympy.cos(x[6]) - 0.1801 * x[2] * x[8] + 0.329 * x[2] - 0.8481 * x[3] * sympy.sin(x[5]) + 0.4689 * x[
                            3] * sympy.cos(x[9]) - 0.8774 * x[4] * sympy.sin(x[1]) - 0.9793 * x[4] * sympy.cos(x[8]) + 0.4477 * x[
                            4] + 0.5339 * x[5] * sympy.cos(x[0]) - 0.4122 * x[5] - 0.7621 * x[6] * sympy.sin(x[4]) - 0.6336 * x[
                            6] * sympy.cos(x[2]) - 0.7643 * x[6] - 0.3855 * x[7] - 0.7225 * x[9] * sympy.sin(x[2]) + 0.7667 * x[
                            9] * sympy.sin(x[8]) + 0.6809 * sympy.sin(x[0]) * sympy.sin(x[1]) + 0.4396 * sympy.sin(x[0]) * sympy.cos(
            x[9]) + 0.4073 * sympy.sin(x[1]) * sympy.sin(x[8]) - 0.4452 * sympy.sin(x[1]) + 0.4792 * sympy.sin(x[2]) * sympy.sin(
            x[3]) - 0.1699 * sympy.sin(x[3]) * sympy.cos(x[6]) - 0.8506 * sympy.sin(x[7]) * sympy.cos(x[9]) - 0.2131 * sympy.cos(
            x[3]) - 0.8799 * sympy.cos(x[8]) - 0.8381 * sympy.cos(x[9]) + 0.4614
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.4614, 'const'), ('mul', 'binary'), (-0.8799, 'const'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.7643, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.8381, 'const'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.3855, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.329, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.4122, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.4477, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.2131, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.1345, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (-0.4452, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7667, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4396, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6809, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4028, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2681, 'const'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7621, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5339, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6336, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4689, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1699, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4792, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8506, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7225, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8481, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9793, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8774, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9493, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3628, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1801, 'const'),
                                            ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4073, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_6(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_6'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.341 * x[0] * sympy.sin(x[3]) + 0.2026 * x[0] * sympy.sin(x[8]) - 0.0652 * x[0] * sympy.cos(x[5]) - 0.2961 * x[
            0] - 0.6012 * x[1] * x[6] + 0.9288 * x[1] * sympy.cos(x[4]) + 0.9642 * x[1] + 0.3303 * x[2] * sympy.cos(x[6]) - 0.6588 * x[
                            3] * sympy.sin(x[2]) + 0.1797 * x[3] + 0.1687 * x[4] * x[7] + 0.8737 * x[4] * sympy.sin(x[8]) + 0.509 * x[
                            4] - 0.4962 * x[5] * x[6] - 0.8371 * x[5] * sympy.sin(x[3]) - 0.2442 * x[5] * sympy.cos(x[1]) + 0.0696 * x[
                            5] * sympy.cos(x[9]) + 0.2156 * x[6] * sympy.sin(x[3]) + 0.5 * x[6] * sympy.cos(x[9]) + 0.1491 * x[6] - 0.1553 * \
                        x[7] - 0.107 * x[9] * sympy.cos(x[2]) - 0.965 * sympy.sin(x[5]) * sympy.cos(x[2]) + 0.9466 * sympy.sin(
            x[5]) - 0.237 * sympy.sin(x[7]) * sympy.cos(x[8]) + 0.8345 * sympy.cos(x[1]) * sympy.cos(x[7]) - 0.3853 * sympy.cos(
            x[2]) - 0.4852 * sympy.cos(x[3]) * sympy.cos(x[4]) + 0.1547 * sympy.cos(x[8]) + 0.8493 * sympy.cos(x[9]) - 0.9383
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.9383, 'const'), ('mul', 'binary'), (0.9466, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.1797, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.1491, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.1547, 'const'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.509, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.3853, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.2961, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.1553, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.8493, 'const'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.9642, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8345, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.237, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2442, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6012, 'const'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9288, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8371, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2156, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0696, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8737, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5, 'const'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4852, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0652, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6588, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2026, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4962, 'const'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.965, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3303, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.341, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1687, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.107, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_18(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_18'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4394 * x[0] * x[3] + 0.6086 * x[0] * sympy.sin(x[2]) + 0.4364 * x[0] * sympy.sin(x[4]) - 0.6843 * x[0] - 0.3721 * \
                        x[1] * x[9] + 0.287 * x[1] * sympy.sin(x[3]) + 0.8169 * x[3] * x[5] + 0.536 * x[3] - 0.3985 * x[4] * sympy.sin(
            x[2]) + 0.41 * x[5] * x[7] + 0.1979 * x[5] * sympy.sin(x[1]) + 0.6275 * x[5] - 0.9012 * x[6] - 0.2339 * x[7] * sympy.sin(
            x[6]) + 0.4978 * x[7] + 0.0587 * x[8] * sympy.sin(x[1]) - 0.4808 * x[8] * sympy.sin(x[9]) - 0.0653 * x[8] + 0.5753 * x[
                            9] + 0.0465 * sympy.sin(x[0]) * sympy.sin(x[5]) + 0.3946 * sympy.sin(x[1]) - 0.7522 * sympy.sin(
            x[2]) * sympy.sin(x[7]) + 0.9103 * sympy.sin(x[4]) * sympy.sin(x[8]) - 0.1857 * sympy.sin(x[6]) * sympy.sin(
            x[8]) + 0.2587 * sympy.sin(x[9]) * sympy.cos(x[4]) + 0.8753 * sympy.cos(x[1]) * sympy.cos(x[6]) + 0.6684 * sympy.cos(
            x[2]) * sympy.cos(x[6]) - 0.8523 * sympy.cos(x[2]) - 0.1883 * sympy.cos(x[3]) * sympy.cos(x[6]) + 0.9904 * sympy.cos(
            x[4]) + 0.8897
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8897, 'const'), ('mul', 'binary'), (0.5753, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.3946, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.4978, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.536, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.8523, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.6275, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.6843, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.9904, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.0653, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.9012, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3721, 'const'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3985, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8169, 'const'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8753, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6086, 'const'), \
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7522, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0587, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2339, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6684, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4808, 'const'), ('X_8', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2587, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.287, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1979, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4394, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0465, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9103, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1857, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.41, 'const'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4364, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1883, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_3(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_3'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.5164 * x[0] * x[2] + 0.0171 * x[0] * x[4] + 0.8061 * x[1] * x[7] - 0.1614 * x[1] * x[9] - 0.9128 * x[
            1] * sympy.sin(x[4]) + 0.8013 * x[1] * sympy.cos(x[5]) - 0.3127 * x[2] * x[6] + 0.7165 * x[2] * x[9] - 0.3967 * x[
                            2] * sympy.sin(x[1]) + 0.813 * x[2] + 0.3888 * x[3] - 0.2433 * x[4] * sympy.cos(x[5]) + 0.9263 * x[5] - 0.1253 * \
                        x[7] * sympy.sin(x[9]) - 0.4419 * x[7] + 0.8775 * x[8] * sympy.sin(x[9]) + 0.4672 * x[8] + 0.8239 * x[
                            9] * sympy.cos(x[6]) + 0.8959 * sympy.sin(x[0]) * sympy.cos(x[9]) - 0.1185 * sympy.sin(
            x[0]) + 0.1729 * sympy.sin(x[1]) - 0.4816 * sympy.sin(x[2]) * sympy.sin(x[7]) + 0.0666 * sympy.sin(x[4]) + 0.9971 * sympy.sin(
            x[5]) * sympy.cos(x[0]) + 0.7467 * sympy.sin(x[6]) + 0.7411 * sympy.sin(x[9]) * sympy.cos(x[4]) - 0.9543 * sympy.cos(
            x[0]) * sympy.cos(x[6]) - 0.6682 * sympy.cos(x[0]) * sympy.cos(x[8]) + 0.9495 * sympy.cos(x[3]) * sympy.cos(
            x[6]) + 0.7588 * sympy.cos(x[9]) + 0.8835
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8835, 'const'), ('mul', 'binary'), (0.9263, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.813, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.7467, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.0666, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.3888, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.4672, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.4419, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.7588, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.1729, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.1185, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8775, 'const'), ('X_8', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9971, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3127, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7411, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6682, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1253, 'const'), ('X_7', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2433, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7165, 'const'), ('X_2', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8061, 'const'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4816, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1614, 'const'),
                                            ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9495, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9128, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8013, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9543, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5164, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0171, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8239, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8959, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3967, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_2', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_24(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_24'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7445 * x[0] * sympy.sin(x[3]) - 0.5338 * x[0] * sympy.sin(x[5]) + 0.873 * x[0] * sympy.cos(x[1]) + 0.1367 * x[
            0] * sympy.cos(x[9]) - 0.7178 * x[0] + 0.1645 * x[1] * x[8] - 0.4307 * x[1] * sympy.sin(x[4]) - 0.5666 * x[2] - 0.0453 * x[3] * \
                        x[6] - 0.6226 * x[3] + 0.5992 * x[4] * sympy.sin(x[3]) + 0.4803 * x[4] * sympy.cos(x[5]) + 0.3017 * x[
                            4] * sympy.cos(x[8]) - 0.1774 * x[5] + 0.8927 * x[6] * x[7] - 0.2464 * x[6] * sympy.cos(x[8]) - 0.3926 * x[
                            6] + 0.8881 * x[7] * sympy.cos(x[4]) - 0.7164 * x[8] + 0.389 * x[9] * sympy.sin(x[3]) + 0.3786 * x[
                            9] * sympy.sin(x[5]) + 0.9015 * sympy.sin(x[1]) * sympy.sin(x[6]) - 0.7815 * sympy.sin(
            x[1]) + 0.3136 * sympy.sin(x[4]) * sympy.sin(x[9]) + 0.2398 * sympy.sin(x[4]) + 0.3724 * sympy.sin(x[5]) * sympy.cos(
            x[1]) - 0.7012 * sympy.sin(x[7]) - 0.4973 * sympy.cos(x[0]) * sympy.cos(x[2]) + 0.0839 * sympy.cos(x[2]) * sympy.cos(
            x[6]) + 0.5597 * sympy.cos(x[9]) + 0.3218
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3218, 'const'), ('mul', 'binary'), (-0.6226, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.7164, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.1774, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.7012, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.5666, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.5597, 'const'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.3926, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.7178, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.2398, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.7815, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3724, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4307, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1645, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1367, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0453, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0839, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3017, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7445, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3136, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4973, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.873, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5992, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8927, 'const'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9015, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3786, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8881, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2464, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4803, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.389, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5338, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_12(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_12'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7174 * x[0] * x[3] - 0.1749 * x[0] * x[5] - 0.8652 * x[0] * x[6] + 0.5096 * x[0] * sympy.sin(x[1]) + 0.3205 * x[
            1] * sympy.sin(x[6]) - 0.3792 * x[1] - 0.766 * x[2] * sympy.sin(x[0]) - 0.9775 * x[3] * x[8] + 0.8361 * x[3] * sympy.sin(
            x[4]) + 0.1371 * x[3] * sympy.sin(x[9]) - 0.5483 * x[4] * sympy.cos(x[0]) - 0.3329 * x[4] * sympy.cos(x[1]) - 0.3103 * x[
                            4] * sympy.cos(x[6]) + 0.9499 * x[5] * x[8] - 0.8473 * x[6] * sympy.sin(x[9]) - 0.2097 * x[7] * sympy.sin(
            x[3]) - 0.072 * x[7] - 0.8504 * x[8] * sympy.sin(x[2]) + 0.4239 * x[8] * sympy.sin(x[6]) - 0.9628 * x[9] - 0.5302 * sympy.sin(
            x[0]) - 0.2219 * sympy.sin(x[2]) * sympy.cos(x[1]) - 0.7443 * sympy.sin(x[2]) + 0.7351 * sympy.sin(x[5]) + 0.4307 * sympy.sin(
            x[6]) * sympy.cos(x[3]) + 0.6316 * sympy.sin(x[6]) + 0.7409 * sympy.sin(x[7]) * sympy.sin(x[8]) - 0.9693 * sympy.sin(
            x[8]) - 0.5393 * sympy.cos(x[3]) + 0.6618 * sympy.cos(x[4]) - 0.3442
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.3442, 'const'), ('mul', 'binary'), (-0.5302, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.072, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.7443, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.3792, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.9693, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.6618, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.9628, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.7351, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.6316, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.5393, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5096, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7174, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8361, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3329, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7409, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8473, 'const'), ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4307, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3103, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5483, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1749, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2097, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8504, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3205, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4239, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9499, 'const'),
                                            ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2219, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1371, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.766, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8652, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9775, 'const'), ('X_3', 'var'),
                                            ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_25(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_25'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9052 * x[0] * sympy.sin(x[1]) - 0.3807 * x[1] - 0.938 * x[2] * x[3] - 0.2914 * x[2] * x[7] - 0.4591 * x[
            2] * sympy.sin(x[6]) + 0.1333 * x[2] * sympy.sin(x[8]) - 0.0043 * x[3] * sympy.cos(x[0]) + 0.159 * x[3] * sympy.cos(
            x[7]) + 0.9363 * x[4] * x[9] + 0.6953 * x[4] * sympy.sin(x[5]) + 0.8098 * x[4] - 0.4514 * x[5] - 0.7208 * x[6] * sympy.cos(
            x[0]) - 0.9736 * x[6] - 0.8681 * x[7] * x[8] + 0.2973 * x[9] * sympy.sin(x[3]) - 0.7439 * sympy.sin(x[1]) * sympy.sin(
            x[5]) - 0.5071 * sympy.sin(x[1]) * sympy.sin(x[6]) + 0.7585 * sympy.sin(x[2]) * sympy.cos(x[0]) - 0.8278 * sympy.sin(
            x[3]) * sympy.sin(x[4]) + 0.3039 * sympy.sin(x[3]) * sympy.sin(x[5]) + 0.5936 * sympy.sin(x[3]) - 0.1885 * sympy.sin(
            x[7]) + 0.458 * sympy.sin(x[8]) * sympy.cos(x[9]) + 0.2923 * sympy.sin(x[9]) * sympy.cos(x[2]) - 0.7401 * sympy.cos(
            x[0]) * sympy.cos(x[9]) - 0.8054 * sympy.cos(x[0]) - 0.1567 * sympy.cos(x[2]) - 0.3271 * sympy.cos(x[8]) - 0.6445 * sympy.cos(
            x[9]) + 0.6724
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.6724, 'const'), ('mul', 'binary'), (-0.8054, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.9736, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.3807, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.4514, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.8098, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.5936, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.1885, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.6445, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.3271, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.1567, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8681, 'const'),
                                            ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2914, 'const'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2923, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6953, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0043, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7439, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.159, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9363, 'const'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4591, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7585, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8278, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2973, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.458, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1333, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.938, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5071, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3039, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7401, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7208, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9052, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_1', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_21(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_21'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0533 * x[1] * x[7] - 0.0081 * x[1] * sympy.sin(x[5]) - 0.0103 * x[1] * sympy.cos(x[0]) - 0.4121 * x[2] * x[
            9] + 0.3844 * x[2] + 0.9326 * x[3] - 0.7807 * x[5] * sympy.cos(x[0]) - 0.6266 * x[5] * sympy.cos(x[2]) - 0.1446 * x[
                            5] * sympy.cos(x[3]) - 0.6898 * x[6] * x[8] + 0.1262 * x[6] * sympy.sin(x[0]) + 0.5381 * x[6] * sympy.cos(
            x[1]) + 0.5627 * x[6] - 0.721 * x[7] * sympy.cos(x[4]) - 0.9245 * x[8] * x[9] - 0.4547 * x[8] * sympy.sin(x[1]) + 0.5443 * x[
                            9] * sympy.sin(x[4]) + 0.5125 * x[9] + 0.7899 * sympy.sin(x[0]) * sympy.cos(x[2]) + 0.1798 * sympy.sin(
            x[0]) - 0.9345 * sympy.sin(x[1]) * sympy.sin(x[9]) + 0.9469 * sympy.sin(x[2]) * sympy.sin(x[3]) + 0.7025 * sympy.sin(
            x[2]) * sympy.cos(x[8]) + 0.4139 * sympy.sin(x[4]) - 0.1938 * sympy.sin(x[7]) - 0.0004 * sympy.cos(x[1]) + 0.43 * sympy.cos(
            x[5]) * sympy.cos(x[6]) + 0.9833 * sympy.cos(x[5]) + 0.7124 * sympy.cos(x[7]) * sympy.cos(x[9]) - 0.637 * sympy.cos(
            x[8]) + 0.7753
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.7753, 'const'), ('mul', 'binary'), (0.1798, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.1938, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.3844, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.0004, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.9833, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.4139, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.5125, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.9326, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.5627, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.637, 'const'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0533, 'const'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9469, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9245, 'const'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1262, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4121, 'const'), ('X_2', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5443, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7899, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7807, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6266, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5381, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7124, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.43, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.721, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6898, 'const'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0081, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0103, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7025, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4547, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9345, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1446, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_26(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_26'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5844 * x[0] * sympy.sin(x[6]) + 0.9711 * x[0] - 0.8334 * x[1] * x[6] + 0.8488 * x[1] * sympy.sin(x[4]) - 0.5425 * \
                        x[1] * sympy.cos(x[8]) + 0.4961 * x[1] + 0.3426 * x[2] + 0.6767 * x[3] * sympy.cos(x[5]) - 0.7569 * x[
                            4] * sympy.sin(x[3]) + 0.2358 * x[4] * sympy.sin(x[6]) + 0.5249 * x[4] * sympy.sin(x[8]) - 0.2419 * x[
                            5] * sympy.cos(x[4]) - 0.8441 * x[5] + 0.8916 * x[6] * x[9] - 0.9738 * x[6] * sympy.cos(x[8]) + 0.7172 * x[
                            6] - 0.4535 * x[7] * x[9] + 0.7235 * x[7] + 0.5965 * x[8] * sympy.cos(x[0]) + 0.8873 * x[8] * sympy.cos(
            x[5]) + 0.0953 * x[8] - 0.7654 * x[9] * sympy.sin(x[4]) + 0.1295 * x[9] * sympy.cos(x[3]) + 0.4905 * x[9] * sympy.cos(
            x[8]) + 0.2492 * x[9] - 0.0184 * sympy.sin(x[2]) * sympy.sin(x[3]) - 0.6616 * sympy.sin(x[6]) * sympy.sin(
            x[7]) + 0.4806 * sympy.sin(x[9]) * sympy.cos(x[5]) + 0.8499 * sympy.cos(x[3]) - 0.6657 * sympy.cos(x[4]) - 0.589
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.589, 'const'), ('mul', 'binary'), (-0.8441, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.9711, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.4961, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.3426, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.6657, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.7235, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.0953, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.8499, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.2492, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.7172, 'const'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5249, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2419, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4905, 'const'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5965, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6767, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9738, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7654, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5425, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8488, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6616, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7569, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4806, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4535, 'const'),
                                            ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8334, 'const'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1295, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2358, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8873, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5844, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0184, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8916, 'const'), ('X_6', 'var'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_39(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_39'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.574 * x[0] * x[7] + 0.9753 * x[1] * x[4] - 0.5673 * x[1] * x[6] - 0.0352 * x[1] * sympy.sin(x[9]) - 0.4628 * x[
            2] * x[4] + 0.1323 * x[2] * sympy.sin(x[5]) - 0.7318 * x[2] - 0.0046 * x[3] * x[4] - 0.9522 * x[3] * x[8] - 0.5396 * x[
                            3] * sympy.cos(x[7]) - 0.8084 * x[3] - 0.7112 * x[4] * x[8] - 0.6301 * x[4] + 0.7955 * x[5] * x[9] + 0.0634 * x[
                            5] * sympy.sin(x[3]) - 0.2871 * x[5] + 0.2621 * x[6] * x[8] - 0.9535 * x[6] * sympy.sin(x[5]) + 0.2416 * x[
                            8] * sympy.cos(x[0]) - 0.6234 * x[9] + 0.31 * sympy.sin(x[0]) * sympy.sin(x[9]) + 0.2339 * sympy.sin(
            x[0]) * sympy.cos(x[3]) + 0.1432 * sympy.sin(x[0]) + 0.967 * sympy.sin(x[3]) * sympy.sin(x[6]) - 0.6164 * sympy.sin(
            x[4]) * sympy.cos(x[7]) - 0.0969 * sympy.sin(x[6]) + 0.4056 * sympy.sin(x[8]) + 0.861 * sympy.sin(x[9]) * sympy.cos(
            x[3]) + 0.6956 * sympy.cos(x[1]) + 0.8933 * sympy.cos(x[7]) - 0.4825
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.4825, 'const'), ('mul', 'binary'), (-0.6301, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.0969, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.6956, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.6234, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.8933, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.2871, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.1432, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.4056, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.8084, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.7318, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2621, 'const'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5396, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5673, 'const'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1323, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0352, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.861, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9522, 'const'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7955, 'const'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0046, 'const'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9535, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.574, 'const'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.967, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6164, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4628, 'const'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9753, 'const'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2416, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.31, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2339, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0634, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7112, 'const'),
                                            ('X_4', 'var'), ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_19(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_19'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.675 * x[0] * x[8] + 0.2321 * x[0] * sympy.cos(x[4]) - 0.0321 * x[0] - 0.8194 * x[1] * x[2] + 0.7297 * x[
            1] * sympy.sin(x[6]) - 0.7826 * x[1] * sympy.cos(x[8]) - 0.6741 * x[2] * x[7] + 0.5587 * x[2] * sympy.cos(x[4]) + 0.3588 * x[
                            2] - 0.9115 * x[3] * x[9] + 0.3665 * x[4] * x[7] + 0.597 * x[4] * sympy.sin(x[5]) + 0.524 * x[5] - 0.1711 * x[
                            6] * x[8] + 0.8529 * x[6] - 0.6292 * x[7] * x[9] - 0.0473 * x[7] * sympy.sin(x[3]) + 0.9227 * x[7] + 0.7525 * x[
                            8] + 0.3118 * x[9] * sympy.cos(x[0]) - 0.0616 * sympy.sin(x[0]) * sympy.sin(x[2]) + 0.8445 * sympy.sin(
            x[3]) * sympy.sin(x[6]) - 0.934 * sympy.sin(x[4]) * sympy.cos(x[1]) - 0.0749 * sympy.sin(x[4]) - 0.8058 * sympy.sin(
            x[8]) * sympy.cos(x[9]) + 0.8685 * sympy.sin(x[9]) * sympy.cos(x[1]) + 0.818 * sympy.sin(x[9]) + 0.0881 * sympy.cos(
            x[0]) * sympy.cos(x[5]) - 0.9292 * sympy.cos(x[1]) + 0.4739 * sympy.cos(x[3]) - 0.7526
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.7526, 'const'), ('mul', 'binary'), (-0.0321, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.9227, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.9292, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.818, 'const'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.4739, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.0749, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.8529, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.3588, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.7525, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.524, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7297, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8194, 'const'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0616, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3118, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.675, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.934, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1711, 'const'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2321, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8445, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6741, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5587, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3665, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8685, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7826, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0473, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8058, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.597, 'const'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0881, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9115, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6292, 'const'), ('X_7', 'var'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_38(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_38'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7679 * x[0] * x[6] - 0.5607 * x[0] * x[8] - 0.3788 * x[1] + 0.3826 * x[2] * sympy.cos(x[5]) + 0.727 * x[
            2] + 0.8308 * x[3] * x[4] + 0.2693 * x[3] * sympy.sin(x[9]) + 0.806 * x[3] * sympy.cos(x[5]) - 0.903 * x[3] * sympy.cos(
            x[7]) + 0.2492 * x[4] * x[6] + 0.8269 * x[5] * sympy.cos(x[4]) + 0.4688 * x[5] + 0.868 * x[6] * sympy.sin(x[7]) - 0.783 * x[
                            7] + 0.3357 * x[8] * sympy.sin(x[5]) - 0.3626 * x[8] - 0.7072 * x[9] * sympy.cos(x[2]) + 0.5037 * sympy.sin(
            x[0]) * sympy.sin(x[5]) - 0.01 * sympy.sin(x[1]) * sympy.sin(x[4]) - 0.88 * sympy.sin(x[4]) * sympy.cos(
            x[2]) - 0.8659 * sympy.sin(x[4]) + 0.0956 * sympy.sin(x[5]) * sympy.cos(x[1]) + 0.171 * sympy.sin(x[7]) * sympy.cos(
            x[9]) + 0.2163 * sympy.sin(x[8]) * sympy.sin(x[9]) - 0.7283 * sympy.cos(x[0]) * sympy.cos(x[3]) - 0.7622 * sympy.cos(
            x[0]) - 0.2807 * sympy.cos(x[2]) * sympy.cos(x[3]) + 0.5132 * sympy.cos(x[3]) + 0.1578 * sympy.cos(x[6]) + 0.9531 * sympy.cos(
            x[9]) + 0.3165
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.3165, 'const'), ('mul', 'binary'), (0.4688, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.3626, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.3788, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.727, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.7622, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.1578, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.5132, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.8659, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.9531, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.783, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2693, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8269, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5037, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2492, 'const'), ('X_4', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.806, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2807, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7072, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.868, 'const'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8308, 'const'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.903, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3826, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2163, 'const'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7283, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.171, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.01, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7679, 'const'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3357, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5607, 'const'), ('X_0', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0956, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.88, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_9(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_9'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']
    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.6725 * x[0] * x[1] + 0.9171 * x[0] * x[9] - 0.035 * x[1] * x[4] - 0.1221 * x[1] * sympy.sin(x[5]) + 0.3506 * x[
            2] - 0.0866 * x[3] * x[7] + 0.1418 * x[4] * x[9] + 0.4126 * x[4] - 0.1201 * x[5] * x[9] + 0.6893 * x[5] * sympy.sin(
            x[4]) + 0.91 * x[5] * sympy.sin(x[7]) - 0.2714 * x[6] * sympy.sin(x[8]) + 0.486 * x[8] * sympy.cos(x[3]) - 0.3221 * x[
                            9] * sympy.sin(x[3]) - 0.6313 * x[9] - 0.6454 * sympy.sin(x[2]) * sympy.cos(x[1]) - 0.2924 * sympy.sin(
            x[2]) * sympy.cos(x[4]) + 0.3112 * sympy.sin(x[3]) * sympy.sin(x[5]) + 0.3419 * sympy.sin(x[3]) * sympy.cos(
            x[1]) - 0.5686 * sympy.sin(x[3]) * sympy.cos(x[6]) - 0.8095 * sympy.sin(x[5]) * sympy.cos(x[0]) + 0.7099 * sympy.sin(
            x[5]) + 0.8078 * sympy.sin(x[7]) * sympy.cos(x[8]) - 0.7102 * sympy.sin(x[7]) + 0.4135 * sympy.sin(x[8]) * sympy.sin(
            x[9]) + 0.6541 * sympy.sin(x[8]) + 0.3581 * sympy.cos(x[0]) - 0.7017 * sympy.cos(x[1]) + 0.821 * sympy.cos(
            x[3]) + 0.4291 * sympy.cos(x[6]) + 0.1023
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.1023, 'const'), ('mul', 'binary'), (-0.7102, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.4126, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.7017, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.6541, 'const'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.7099, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.3581, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.821, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.6313, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.4291, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.3506, 'const'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.91, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2714, 'const'), ('X_6', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1221, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3221, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3112, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6893, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1201, 'const'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9171, 'const'), ('X_0', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5686, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4135, 'const'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.486, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3419, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0866, 'const'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6454, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2924, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6725, 'const'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8078, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1418, 'const'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8095, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.035, 'const'), ('X_1', 'var'), ('X_4', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_32(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_32'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4586 * x[0] * x[7] - 0.2974 * x[0] * sympy.cos(x[3]) + 0.6818 * x[1] * x[3] + 0.5637 * x[1] * sympy.sin(
            x[0]) + 0.9128 * x[1] + 0.0569 * x[2] * x[3] - 0.7979 * x[2] * sympy.cos(x[1]) + 0.5287 * x[2] + 0.1242 * x[3] * sympy.cos(
            x[6]) + 0.6449 * x[3] - 0.3337 * x[4] * sympy.sin(x[0]) + 0.768 * x[4] * sympy.cos(x[9]) + 0.0335 * x[4] + 0.2 * x[
                            6] * sympy.cos(x[2]) + 0.4692 * x[6] * sympy.cos(x[5]) - 0.9209 * x[6] - 0.6689 * x[7] * sympy.sin(
            x[6]) - 0.9952 * x[8] * sympy.cos(x[9]) - 0.9016 * x[8] + 0.9189 * x[9] * sympy.sin(x[0]) + 0.4925 * x[9] * sympy.cos(
            x[1]) - 0.0577 * x[9] + 0.9207 * sympy.sin(x[1]) * sympy.sin(x[7]) - 0.6022 * sympy.sin(x[1]) * sympy.sin(
            x[8]) + 0.39 * sympy.sin(x[5]) * sympy.cos(x[2]) + 0.6483 * sympy.sin(x[6]) * sympy.sin(x[9]) - 0.9653 * sympy.sin(
            x[7]) - 0.4309 * sympy.cos(x[0]) + 0.7369 * sympy.cos(x[3]) * sympy.cos(x[9]) - 0.4139 * sympy.cos(x[5]) - 0.6825
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (-0.6825, 'const'), ('mul', 'binary'), (-0.4139, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.0577, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.4309, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.9653, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.9128, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.9209, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.5287, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.0335, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.6449, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.9016, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4692, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1242, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9952, 'const'), ('X_8', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6818, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9189, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3337, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4586, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9207, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7979, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.768, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2974, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6689, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4925, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.39, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0569, 'const'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5637, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7369, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6483, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6022, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1020_prog_5(KnownEquation):
    _eq_name = 'sincos_nv10_nt1020_prog_5'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9446 * x[0] * x[2] - 0.2959 * x[0] * sympy.sin(x[7]) - 0.3547 * x[0] * sympy.cos(x[3]) + 0.719 * x[1] * x[
            5] + 0.3603 * x[1] * x[7] - 0.0804 * x[1] - 0.1199 * x[2] * x[9] + 0.439 * x[2] - 0.0646 * x[3] * x[5] + 0.4613 * x[3] * x[
                            6] + 0.8413 * x[3] * sympy.cos(x[7]) + 0.6096 * x[3] - 0.5799 * x[4] * x[5] + 0.3796 * x[4] * sympy.sin(
            x[9]) - 0.1066 * x[4] * sympy.cos(x[1]) + 0.1697 * x[6] + 0.6603 * x[7] * sympy.sin(x[6]) - 0.9709 * x[7] * sympy.cos(
            x[2]) - 0.5473 * x[7] + 0.1683 * x[8] * sympy.sin(x[2]) + 0.1288 * x[8] * sympy.sin(x[3]) - 0.8104 * x[8] * sympy.sin(
            x[5]) - 0.7906 * x[8] - 0.1269 * sympy.sin(x[2]) * sympy.sin(x[4]) - 0.2702 * sympy.sin(x[4]) - 0.1095 * sympy.sin(
            x[9]) * sympy.cos(x[3]) + 0.7272 * sympy.cos(x[0]) - 0.8699 * sympy.cos(x[1]) * sympy.cos(x[6]) - 0.0694 * sympy.cos(
            x[5]) - 0.2651 * sympy.cos(x[9]) + 0.8143
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            (0.8143, 'const'), ('mul', 'binary'), (0.6096, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.7272, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.1697, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.5473, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.439, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.2702, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.0804, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.7906, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.2651, 'const'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.0694, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1095, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5799, 'const'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1683, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1288, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9446, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1269, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3547, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8413, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0646, 'const'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4613, 'const'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3603, 'const'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1066, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2959, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8104, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.719, 'const'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8699, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1199, 'const'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6603, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3796, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9709, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_46(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_46'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9499 * x[0] * x[4] + 0.3525 * x[0] * x[6] - 0.0695 * x[0] * sympy.sin(x[2]) - 0.8026 * x[0] + 0.4056 * x[1] * x[
            4] - 0.1366 * x[1] * x[7] + 0.4015 * x[1] * sympy.sin(x[0]) - 0.9677 * x[1] + 0.4702 * x[2] * sympy.cos(x[7]) - 0.2554 * x[
                            2] - 0.07 * x[3] * sympy.sin(x[8]) - 0.2516 * x[3] + 0.55 * x[4] * sympy.cos(x[8]) + 0.22 * x[5] * x[
                            8] + 0.5018 * x[5] * sympy.sin(x[2]) + 0.3399 * x[5] - 0.3406 * x[6] * x[7] - 0.6619 * x[6] - 0.2678 * x[
                            7] * sympy.cos(x[0]) - 0.6226 * x[7] + 0.057 * x[9] * sympy.sin(x[8]) + 0.8128 * x[9] * sympy.cos(
            x[6]) - 0.3939 * x[9] + 0.6465 * sympy.sin(x[4]) - 0.5849 * sympy.cos(x[1]) * sympy.cos(x[3]) - 0.6583 * sympy.cos(
            x[8]) + 0.6348
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.6348, 'const'), ('mul', 'binary'), (-0.2516, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.2554, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.6583, 'const'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.3399, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.9677, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.6619, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.6226, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.8026, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.6465, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.3939, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5018, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.55, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0695, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8128, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.057, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.22, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.07, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4702, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2678, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3406, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1366, 'const'),
                                            ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9499, 'const'),
                                            ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5849, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4056, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4015, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3525, 'const'), ('X_0', 'var'), ('X_6', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_0(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_0'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.8054 * x[0] * x[3] + 0.1417 * x[0] * x[6] + 0.8238 * x[0] * x[7] - 0.8293 * x[1] * x[8] + 0.6469 * x[1] * x[
            9] - 0.6753 * x[2] * sympy.cos(x[0]) - 0.6552 * x[3] - 0.1649 * x[4] * sympy.sin(x[7]) + 0.9783 * x[5] * x[7] + 0.3621 * x[
                            5] * sympy.cos(x[6]) - 0.1806 * x[5] + 0.4759 * x[6] * sympy.cos(x[2]) - 0.9948 * x[6] + 0.1359 * x[
                            7] - 0.0033 * x[8] * sympy.cos(x[0]) + 0.7326 * x[8] * sympy.cos(x[4]) + 0.4211 * x[8] + 0.9224 * sympy.sin(
            x[1]) - 0.141 * sympy.sin(x[5]) * sympy.cos(x[0]) - 0.3442 * sympy.sin(x[5]) * sympy.cos(x[1]) - 0.2738 * sympy.sin(
            x[9]) - 0.9663 * sympy.cos(x[0]) - 0.2591 * sympy.cos(x[1]) * sympy.cos(x[3]) - 0.8006 * sympy.cos(x[1]) * sympy.cos(
            x[4]) + 0.7316 * sympy.cos(x[2]) + 0.0222 * sympy.cos(x[4]) + 0.5646
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.5646, 'const'), ('mul', 'binary'), (-0.9948, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.4211, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.0222, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.9224, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.6552, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.9663, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.1359, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.1806, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.7316, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.2738, 'const'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6753, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2591, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0033, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3621, 'const'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3442, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8293, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8006, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8054, 'const'), ('X_0', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4759, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.141, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7326, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6469, 'const'), ('X_1', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1649, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8238, 'const'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9783, 'const'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1417, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_35(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_35'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9334 * x[0] * x[1] + 0.8549 * x[1] * sympy.sin(x[9]) - 0.824 * x[1] + 0.2921 * x[2] * sympy.cos(x[6]) - 0.2944 * \
                        x[2] - 0.793 * x[3] * x[6] + 0.0949 * x[3] * sympy.cos(x[7]) - 0.7992 * x[3] + 0.7594 * x[4] * x[7] + 0.4803 * x[
                            5] * x[9] + 0.3228 * x[5] * sympy.cos(x[2]) - 0.2829 * x[5] - 0.0381 * x[7] * sympy.sin(x[0]) - 0.1498 * x[
                            7] * sympy.sin(x[8]) - 0.7115 * x[7] - 0.4192 * x[8] * sympy.sin(x[2]) - 0.3116 * x[8] * sympy.sin(
            x[4]) - 0.7902 * x[8] - 0.6313 * x[9] - 0.3477 * sympy.sin(x[0]) + 0.5402 * sympy.sin(x[1]) * sympy.sin(
            x[4]) + 0.737 * sympy.sin(x[1]) * sympy.cos(x[8]) - 0.4283 * sympy.sin(x[2]) * sympy.sin(x[3]) + 0.9334 * sympy.sin(
            x[4]) + 0.9178 * sympy.cos(x[1]) * sympy.cos(x[5]) + 0.3768 * sympy.cos(x[6]) + 0.1179
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.1179, 'const'), ('mul', 'binary'), (-0.2829, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.824, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.2944, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.3477, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.9334, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.7992, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.7902, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.3768, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.6313, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.7115, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7594, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9334, 'const'), ('X_0', 'var'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.793, 'const'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1498, 'const'), ('X_7', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3116, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4192, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0949, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4283, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4803, 'const'), ('X_5', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5402, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.737, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2921, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0381, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8549, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3228, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9178, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_8(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_8'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5152 * x[0] * sympy.cos(x[8]) + 0.1026 * x[1] * sympy.cos(x[6]) + 0.831 * x[1] - 0.0406 * x[2] * x[9] + 0.0133 * \
                        x[2] - 0.4507 * x[3] * x[4] - 0.5054 * x[3] * sympy.cos(x[0]) - 0.3872 * x[3] * sympy.cos(x[8]) + 0.1111 * x[4] * x[
                            6] + 0.3683 * x[5] * x[8] + 0.3951 * x[5] + 0.5656 * x[7] * sympy.cos(x[6]) - 0.702 * x[7] + 0.2552 * x[
                            8] * sympy.sin(x[6]) - 0.8668 * x[8] * sympy.cos(x[1]) - 0.4791 * x[8] * sympy.cos(x[7]) - 0.3272 * x[
                            9] * sympy.cos(x[8]) + 0.4537 * x[9] + 0.482 * sympy.sin(x[1]) * sympy.sin(x[7]) - 0.5036 * sympy.sin(
            x[2]) * sympy.cos(x[0]) + 0.0972 * sympy.sin(x[3]) + 0.8442 * sympy.sin(x[6]) + 0.3266 * sympy.sin(x[7]) * sympy.cos(
            x[3]) - 0.0077 * sympy.sin(x[8]) + 0.3697 * sympy.cos(x[0]) - 0.2995 * sympy.cos(x[4]) + 0.8623
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.8623, 'const'), ('mul', 'binary'), (0.0133, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.4537, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.2995, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.8442, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.831, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.3951, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.0972, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.0077, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.3697, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.702, 'const'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0406, 'const'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1111, 'const'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4507, 'const'),
                                            ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.482, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4791, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8668, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3272, 'const'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5054, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5656, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2552, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5036, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1026, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3872, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3683, 'const'), ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3266, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5152, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_42(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_42'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.8095 * x[0] * x[7] - 0.3824 * x[1] * x[6] + 0.4192 * x[1] * sympy.cos(x[0]) + 0.2048 * x[2] * sympy.sin(
            x[4]) + 0.7945 * x[2] * sympy.sin(x[7]) + 0.2431 * x[3] * x[6] - 0.9605 * x[3] * sympy.sin(x[1]) + 0.7495 * x[3] * sympy.sin(
            x[8]) + 0.8929 * x[3] + 0.9583 * x[5] + 0.0355 * x[6] * x[9] + 0.5118 * x[6] + 0.4302 * x[7] * x[9] + 0.8687 * x[7] * sympy.sin(
            x[4]) + 0.975 * x[7] - 0.9159 * x[8] * sympy.cos(x[1]) - 0.6903 * x[8] * sympy.cos(x[4]) - 0.0932 * x[8] * sympy.cos(
            x[7]) - 0.6848 * x[8] - 0.8085 * sympy.sin(x[0]) * sympy.sin(x[5]) + 0.8012 * sympy.sin(x[1]) + 0.2199 * sympy.sin(
            x[4]) + 0.7526 * sympy.cos(x[0]) + 0.5233 * sympy.cos(x[2]) * sympy.cos(x[8]) - 0.1576 * sympy.cos(x[2]) + 0.4807 * sympy.cos(
            x[9]) + 0.8542
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.8542, 'const'), ('mul', 'binary'), (-0.6848, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.8929, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.7526, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.2199, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.1576, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.975, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.5118, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.8012, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.4807, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.9583, 'const'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8085, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4302, 'const'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0932, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7945, 'const'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6903, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3824, 'const'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7495, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4192, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0355, 'const'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2048, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2431, 'const'), ('X_3', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9159, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8687, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5233, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8095, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9605, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_3', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_33(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_33'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9655 * x[0] * sympy.cos(x[9]) + 0.3946 * x[0] - 0.3833 * x[1] * x[4] + 0.4501 * x[1] * x[7] - 0.5007 * x[
            1] * sympy.sin(x[8]) + 0.3296 * x[2] * x[8] - 0.9625 * x[2] - 0.475 * x[3] * sympy.cos(x[4]) - 0.8824 * x[3] * sympy.cos(
            x[8]) + 0.5794 * x[3] + 0.7023 * x[5] * sympy.sin(x[7]) - 0.5123 * x[5] + 0.6019 * x[6] * x[8] + 0.851 * x[6] * sympy.sin(
            x[7]) - 0.6538 * x[7] * sympy.sin(x[3]) + 0.3553 * x[7] - 0.6536 * x[8] - 0.3102 * x[9] * sympy.sin(x[6]) - 0.4404 * sympy.sin(
            x[0]) * sympy.cos(x[4]) + 0.5583 * sympy.sin(x[1]) * sympy.sin(x[3]) - 0.8023 * sympy.sin(x[2]) * sympy.sin(
            x[4]) - 0.6876 * sympy.sin(x[6]) - 0.3541 * sympy.sin(x[9]) * sympy.cos(x[3]) + 0.6494 * sympy.cos(x[1]) + 0.435 * sympy.cos(
            x[4]) - 0.2336 * sympy.cos(x[9]) - 0.7388
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.7388, 'const'), ('mul', 'binary'), (-0.2336, 'const'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.5794, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.3553, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.5123, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.6536, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.6494, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.9625, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.6876, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.3946, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.435, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3541, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3296, 'const'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4501, 'const'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5583, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7023, 'const'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8824, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3102, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.475, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3833, 'const'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8023, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4404, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9655, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6538, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6019, 'const'), ('X_6', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5007, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.851, 'const'), ('X_6', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_20(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_20'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7447 * x[0] * x[6] + 0.348 * x[0] * sympy.cos(x[1]) - 0.7961 * x[0] - 0.3654 * x[1] * sympy.sin(x[8]) - 0.468 * \
                        x[1] * sympy.cos(x[5]) + 0.8773 * x[1] - 0.3742 * x[2] * x[4] - 0.1618 * x[2] * sympy.sin(x[5]) - 0.7266 * x[3] * x[
                            4] + 0.031 * x[3] * x[9] + 0.3818 * x[4] * x[8] - 0.0964 * x[4] + 0.4883 * x[7] * x[9] - 0.1888 * x[
                            7] * sympy.sin(x[5]) + 0.3656 * x[7] - 0.4315 * x[8] * sympy.cos(x[3]) + 0.5212 * x[8] - 0.1576 * sympy.sin(
            x[0]) * sympy.cos(x[3]) - 0.1283 * sympy.sin(x[5]) * sympy.cos(x[4]) + 0.1292 * sympy.sin(x[6]) + 0.9593 * sympy.sin(
            x[9]) * sympy.cos(x[4]) + 0.6151 * sympy.sin(x[9]) * sympy.cos(x[5]) - 0.4845 * sympy.sin(x[9]) - 0.9435 * sympy.cos(
            x[2]) + 0.957 * sympy.cos(x[3]) + 0.3343 * sympy.cos(x[5]) + 0.2643
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.2643, 'const'), ('mul', 'binary'), (0.8773, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.0964, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.7961, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.957, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.1292, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.5212, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.3343, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.4845, 'const'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (-0.9435, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.3656, 'const'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9593, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7447, 'const'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1576, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4883, 'const'), ('X_7', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1283, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7266, 'const'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3818, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3742, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.468, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.031, 'const'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3654, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.348, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4315, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1618, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6151, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1888, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_14(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_14'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.3099 * x[1] * x[2] - 0.3557 * x[1] * sympy.sin(x[4]) - 0.523 * x[1] - 0.9114 * x[2] * x[6] + 0.7865 * x[2] * x[
            8] + 0.0124 * x[2] * sympy.sin(x[0]) + 0.9559 * x[2] + 0.8635 * x[3] * sympy.cos(x[7]) + 0.5271 * x[3] - 0.3622 * x[4] * x[
                            8] + 0.6159 * x[4] * x[9] - 0.7878 * x[4] + 0.0889 * x[5] * sympy.sin(x[3]) - 0.5709 * x[5] * sympy.sin(
            x[9]) - 0.134 * x[7] * sympy.cos(x[5]) + 0.3773 * x[7] + 0.2051 * x[8] - 0.8967 * x[9] + 0.5421 * sympy.sin(x[0]) * sympy.sin(
            x[4]) + 0.0668 * sympy.sin(x[0]) + 0.4385 * sympy.sin(x[3]) * sympy.cos(x[8]) - 0.8524 * sympy.sin(x[5]) + 0.8932 * sympy.sin(
            x[7]) * sympy.cos(x[6]) + 0.1178 * sympy.sin(x[9]) * sympy.cos(x[3]) - 0.3465 * sympy.cos(x[3]) * sympy.cos(
            x[4]) - 0.9279 * sympy.cos(x[6]) - 0.7429
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.7429, 'const'), ('mul', 'binary'), (0.3773, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.8524, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.9279, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.2051, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.7878, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.0668, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (-0.8967, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.9559, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.5271, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.523, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5421, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8635, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3557, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5709, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6159, 'const'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3465, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.134, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7865, 'const'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0124, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4385, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3099, 'const'), ('X_1', 'var'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1178, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3622, 'const'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8932, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0889, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9114, 'const'), ('X_2', 'var'),
                                            ('X_6', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_31(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_31'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1813 * x[0] * x[1] - 0.2555 * x[0] * sympy.sin(x[4]) + 0.1949 * x[0] - 0.3211 * x[1] + 0.1857 * x[2] - 0.7472 * \
                        x[3] * sympy.cos(x[4]) - 0.0224 * x[3] - 0.4005 * x[4] * sympy.sin(x[5]) + 0.981 * x[5] * x[6] - 0.3216 * x[
                            5] * sympy.sin(x[7]) - 0.7127 * x[5] - 0.3448 * x[6] * x[9] + 0.0725 * x[6] * sympy.sin(x[8]) + 0.4467 * x[
                            6] - 0.2401 * x[7] * sympy.cos(x[8]) + 0.5777 * x[7] + 0.5951 * x[8] * sympy.cos(x[9]) + 0.5968 * x[
                            9] * sympy.sin(x[2]) - 0.6708 * x[9] * sympy.sin(x[5]) - 0.4543 * x[9] - 0.9473 * sympy.sin(x[1]) * sympy.cos(
            x[3]) + 0.3037 * sympy.sin(x[2]) * sympy.cos(x[6]) + 0.7666 * sympy.sin(x[3]) * sympy.cos(x[6]) - 0.2112 * sympy.cos(
            x[4]) * sympy.cos(x[6]) + 0.4297 * sympy.cos(x[4]) + 0.4367 * sympy.cos(x[8]) - 0.941
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.941, 'const'), ('mul', 'binary'), (-0.4543, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.4297, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.5777, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.3211, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.1857, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.7127, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.1949, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.4367, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.4467, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.0224, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5951, 'const'), ('X_8', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9473, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3037, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7472, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0725, 'const'), ('X_6', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5968, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3216, 'const'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2112, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2401, 'const'), ('X_7', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2555, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6708, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7666, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4005, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3448, 'const'), ('X_6', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.981, 'const'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1813, 'const'), ('X_0', 'var'),
                                            ('X_1', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_48(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_48'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.3443 * x[0] * x[5] + 0.199 * x[0] + 0.0859 * x[1] * x[8] - 0.823 * x[2] * x[8] + 0.2227 * x[2] * sympy.cos(
            x[5]) + 0.9474 * x[2] + 0.1497 * x[3] * x[6] + 0.5087 * x[3] - 0.2237 * x[4] * sympy.sin(x[2]) - 0.2646 * x[4] * sympy.cos(
            x[0]) - 0.3071 * x[5] * sympy.sin(x[1]) + 0.4202 * x[6] * sympy.sin(x[9]) - 0.9439 * x[6] * sympy.cos(x[2]) + 0.3197 * x[
                            6] - 0.7349 * x[7] * x[8] - 0.2256 * x[7] * x[9] + 0.213 * x[7] * sympy.cos(x[0]) + 0.2776 * x[7] * sympy.cos(
            x[5]) - 0.2778 * x[8] + 0.4179 * x[9] * sympy.sin(x[3]) + 0.3625 * x[9] * sympy.sin(x[4]) + 0.7796 * sympy.cos(
            x[1]) - 0.9445 * sympy.cos(x[4]) + 0.8424 * sympy.cos(x[5]) - 0.8819 * sympy.cos(x[7]) - 0.1585 * sympy.cos(x[9]) + 0.3486
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.3486, 'const'), ('mul', 'binary'), (0.3197, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.5087, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.8424, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.9474, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.199, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.8819, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.9445, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.2778, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (0.7796, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.1585, 'const'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4179, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2646, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2256, 'const'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2227, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0859, 'const'), ('X_1', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.823, 'const'), ('X_2', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7349, 'const'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3443, 'const'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4202, 'const'), ('X_6', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3071, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2776, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9439, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3625, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.213, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1497, 'const'), ('X_3', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2237, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('X_4', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_41(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_41'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8296 * x[0] + 0.2757 * x[1] * x[3] - 0.0647 * x[1] * sympy.sin(x[0]) + 0.0586 * x[1] + 0.9275 * x[2] * sympy.sin(
            x[5]) - 0.0231 * x[2] + 0.4902 * x[3] * sympy.cos(x[2]) + 0.9635 * x[4] + 0.1948 * x[5] * sympy.sin(x[1]) - 0.1001 * x[6] * x[
                            8] + 0.6538 * x[6] - 0.5847 * x[7] * sympy.sin(x[5]) + 0.1914 * x[7] * sympy.cos(x[1]) - 0.5978 * x[
                            8] - 0.9501 * x[9] * sympy.sin(x[4]) - 0.2195 * x[9] * sympy.sin(x[5]) - 0.3988 * x[9] * sympy.sin(
            x[8]) - 0.8766 * x[9] * sympy.cos(x[1]) + 0.3405 * x[9] - 0.9123 * sympy.sin(x[0]) * sympy.cos(x[3]) + 0.7296 * sympy.sin(
            x[3]) * sympy.cos(x[9]) - 0.3806 * sympy.sin(x[6]) * sympy.cos(x[5]) - 0.1606 * sympy.sin(x[8]) * sympy.cos(
            x[7]) - 0.3172 * sympy.cos(x[3]) + 0.2528 * sympy.cos(x[5]) - 0.7171 * sympy.cos(x[7]) + 0.0586
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.0586, 'const'), ('mul', 'binary'), (-0.7171, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.0586, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.6538, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.5978, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.8296, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.0231, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.3405, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.2528, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.9635, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.3172, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9501, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7296, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1914, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8766, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1001, 'const'), ('X_6', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0647, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2195, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2757, 'const'),
                                            ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9275, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3806, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5847, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1606, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1948, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9123, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4902, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3988, 'const'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_7(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_7'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7726 * x[0] * sympy.sin(x[3]) - 0.3733 * x[0] + 0.4611 * x[1] * x[5] + 0.8491 * x[1] * sympy.sin(x[9]) - 0.2548 * \
                        x[2] * sympy.sin(x[0]) + 0.0227 * x[2] * sympy.sin(x[7]) + 0.9113 * x[2] * sympy.cos(x[1]) - 0.1847 * x[
                            2] * sympy.cos(x[6]) + 0.6446 * x[4] * x[7] - 0.6091 * x[4] * sympy.sin(x[8]) - 0.0655 * x[4] * sympy.cos(
            x[9]) + 0.5649 * x[5] * x[6] + 0.9526 * x[5] * sympy.sin(x[0]) + 0.2296 * x[5] - 0.194 * x[6] + 0.0889 * x[7] + 0.245 * x[
                            8] * sympy.sin(x[2]) - 0.034 * x[8] * sympy.sin(x[3]) - 0.3053 * x[8] - 0.4749 * x[9] - 0.7389 * sympy.sin(
            x[0]) * sympy.cos(x[8]) + 0.723 * sympy.sin(x[3]) - 0.9872 * sympy.sin(x[4]) + 0.0295 * sympy.cos(x[1]) + 0.4142 * sympy.cos(
            x[2]) + 0.1423 * sympy.cos(x[3]) * sympy.cos(x[5]) - 0.193
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.193, 'const'), ('mul', 'binary'), (-0.3733, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.9872, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.0295, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.0889, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.4749, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.3053, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.2296, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.194, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.4142, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.723, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2548, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7389, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0227, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4611, 'const'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9526, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9113, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0655, 'const'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8491, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5649, 'const'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6091, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.245, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1423, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.034, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1847, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7726, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6446, 'const'), ('X_4', 'var'),
                                            ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_37(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_37'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.6894 * x[0] * x[4] + 0.6871 * x[0] * x[5] + 0.2714 * x[0] - 0.4421 * x[1] * x[7] + 0.841 * x[1] * x[9] - 0.8913 * \
                        x[1] + 0.4075 * x[2] * sympy.sin(x[3]) - 0.8214 * x[2] + 0.5828 * x[3] * sympy.sin(x[6]) + 0.9159 * x[
                            3] * sympy.cos(x[7]) - 0.3153 * x[3] - 0.5142 * x[5] * sympy.sin(x[2]) - 0.4176 * x[5] * sympy.sin(
            x[6]) + 0.8278 * x[6] * x[8] - 0.0283 * x[6] - 0.3096 * x[7] * sympy.sin(x[9]) + 0.3503 * x[8] * sympy.cos(x[4]) - 0.421 * x[
                            9] * sympy.sin(x[5]) - 0.2781 * x[9] + 0.4842 * sympy.sin(x[0]) * sympy.cos(x[7]) + 0.29 * sympy.sin(
            x[5]) * sympy.sin(x[7]) + 0.5667 * sympy.sin(x[8]) * sympy.sin(x[9]) - 0.857 * sympy.cos(x[4]) - 0.4042 * sympy.cos(
            x[5]) + 0.4204 * sympy.cos(x[7]) - 0.5279 * sympy.cos(x[8]) - 0.0102
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.0102, 'const'), ('mul', 'binary'), (-0.0283, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.3153, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.857, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.5279, 'const'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.2781, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.2714, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.8913, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.8214, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.4042, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.4204, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.841, 'const'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4176, 'const'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4075, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3503, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3096, 'const'), ('X_7', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4421, 'const'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5828, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8278, 'const'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6894, 'const'), ('X_0', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5667, 'const'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5142, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6871, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9159, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4842, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.421, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.29, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_15(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_15'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1034 * x[0] * x[3] + 0.5436 * x[0] * x[8] - 0.9041 * x[0] + 0.026 * x[1] - 0.6932 * x[2] * x[6] - 0.6483 * x[
            2] * sympy.cos(x[4]) + 0.0172 * x[2] - 0.7425 * x[3] + 0.1405 * x[4] * sympy.cos(x[0]) - 0.0132 * x[5] * sympy.sin(
            x[3]) + 0.161 * x[5] * sympy.cos(x[9]) + 0.4577 * x[6] * x[7] + 0.2415 * x[6] * sympy.cos(x[1]) + 0.0251 * x[7] * sympy.sin(
            x[0]) - 0.3605 * x[7] * sympy.cos(x[8]) + 0.5266 * x[7] + 0.1351 * x[9] * sympy.cos(x[7]) + 0.0744 * x[9] - 0.0707 * sympy.sin(
            x[1]) * sympy.cos(x[7]) + 0.8847 * sympy.sin(x[5]) - 0.3252 * sympy.sin(x[6]) + 0.7429 * sympy.sin(x[8]) * sympy.sin(
            x[9]) + 0.1354 * sympy.cos(x[2]) * sympy.cos(x[7]) + 0.2117 * sympy.cos(x[4]) - 0.0072 * sympy.cos(x[5]) * sympy.cos(
            x[7]) + 0.765 * sympy.cos(x[8]) + 0.2595
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.2595, 'const'), ('mul', 'binary'), (-0.7425, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.0172, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.026, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.5266, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.765, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.3252, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.8847, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.9041, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.2117, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.0744, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0251, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6932, 'const'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1354, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4577, 'const'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7429, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0072, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1034, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5436, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1351, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0707, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2415, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1405, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.161, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0132, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6483, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3605, 'const'), ('X_7', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_23(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_23'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.604 * x[0] * sympy.sin(x[9]) + 0.3614 * x[0] * sympy.cos(x[3]) + 0.1126 * x[1] * x[2] - 0.4914 * x[1] * sympy.sin(
            x[5]) - 0.5214 * x[3] * x[7] - 0.2653 * x[3] * sympy.cos(x[2]) - 0.0408 * x[3] * sympy.cos(x[9]) + 0.4404 * x[4] * sympy.sin(
            x[1]) + 0.2841 * x[4] * sympy.cos(x[9]) - 0.0935 * x[5] * sympy.sin(x[2]) - 0.3968 * x[5] + 0.6048 * x[7] * sympy.cos(
            x[4]) - 0.9177 * x[7] + 0.4426 * sympy.sin(x[0]) - 0.5755 * sympy.sin(x[1]) + 0.1336 * sympy.sin(x[4]) * sympy.sin(
            x[6]) + 0.0539 * sympy.sin(x[4]) - 0.3686 * sympy.sin(x[5]) * sympy.cos(x[4]) + 0.7777 * sympy.sin(x[6]) * sympy.cos(
            x[8]) - 0.1487 * sympy.sin(x[6]) + 0.2697 * sympy.sin(x[8]) + 0.9403 * sympy.sin(x[9]) * sympy.cos(x[1]) + 0.0488 * sympy.sin(
            x[9]) * sympy.cos(x[6]) - 0.3945 * sympy.cos(x[2]) + 0.3325 * sympy.cos(x[3]) - 0.4023 * sympy.cos(x[9]) + 0.5615
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.5615, 'const'), ('mul', 'binary'), (-0.3945, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.0539, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.9177, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.4023, 'const'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.3968, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.2697, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.5755, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.1487, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.3325, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.4426, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.604, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3686, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0408, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6048, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0935, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0488, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2841, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1336, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5214, 'const'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9403, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4404, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7777, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3614, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2653, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4914, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1126, 'const'), ('X_1', 'var'), ('X_2', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_30(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_30'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7243 * x[0] * x[5] - 0.7317 * x[0] + 0.2603 * x[1] * sympy.cos(x[5]) + 0.086 * x[2] * sympy.sin(x[1]) - 0.2529 * \
                        x[3] * sympy.cos(x[1]) - 0.4056 * x[3] - 0.7875 * x[4] * sympy.sin(x[8]) + 0.1009 * x[4] * sympy.cos(
            x[0]) - 0.8366 * x[5] * sympy.cos(x[8]) + 0.3929 * x[5] - 0.3218 * x[6] * sympy.sin(x[2]) + 0.8587 * x[6] * sympy.sin(
            x[5]) - 0.2675 * x[6] + 0.1022 * x[7] * sympy.sin(x[4]) - 0.3608 * x[7] * sympy.sin(x[8]) + 0.9659 * x[8] * sympy.cos(
            x[3]) + 0.2197 * x[8] * sympy.cos(x[9]) - 0.1947 * sympy.sin(x[0]) * sympy.cos(x[2]) + 0.4156 * sympy.sin(
            x[1]) + 0.4571 * sympy.sin(x[3]) * sympy.cos(x[5]) + 0.0537 * sympy.sin(x[3]) * sympy.cos(x[7]) - 0.2146 * sympy.sin(
            x[9]) + 0.8124 * sympy.cos(x[2]) - 0.563 * sympy.cos(x[4]) + 0.3435 * sympy.cos(x[7]) - 0.9541 * sympy.cos(x[8]) + 0.3469
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.3469, 'const'), ('mul', 'binary'), (0.8124, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.3435, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.4156, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (-0.563, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.9541, 'const'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.3929, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.2146, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.2675, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.4056, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.7317, 'const'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8366, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7243, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3218, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2603, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8587, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2529, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1022, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1947, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0537, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.086, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9659, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7875, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3608, 'const'), ('X_7', 'var'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1009, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2197, 'const'), ('X_8', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.4571, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_28(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_28'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.6492 * x[0] * x[6] + 0.634 * x[1] - 0.4051 * x[2] - 0.0583 * x[3] * sympy.sin(x[0]) + 0.5499 * x[3] - 0.1254 * x[
            4] * sympy.sin(x[6]) + 0.232 * x[5] * x[8] - 0.9767 * x[5] * sympy.sin(x[6]) - 0.6945 * x[5] * sympy.sin(x[9]) - 0.5045 * x[
                            5] - 0.2203 * x[6] - 0.454 * x[7] * sympy.sin(x[1]) + 0.3543 * x[7] * sympy.sin(x[2]) + 0.6772 * x[7] + 0.9713 * \
                        x[8] - 0.1113 * x[9] * sympy.sin(x[0]) + 0.8812 * x[9] * sympy.cos(x[2]) - 0.7131 * x[9] - 0.0744 * sympy.sin(
            x[0]) * sympy.cos(x[7]) + 0.1203 * sympy.sin(x[1]) * sympy.cos(x[8]) + 0.9633 * sympy.sin(x[2]) * sympy.cos(
            x[6]) - 0.2836 * sympy.sin(x[3]) * sympy.sin(x[4]) + 0.5914 * sympy.sin(x[4]) * sympy.sin(x[9]) + 0.926 * sympy.cos(
            x[0]) * sympy.cos(x[2]) - 0.4364 * sympy.cos(x[0]) - 0.4838 * sympy.cos(x[4]) - 0.9789
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.9789, 'const'), ('mul', 'binary'), (0.634, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.4838, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.5499, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.4051, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.4364, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.6772, 'const'), ('X_7', 'var'), ('mul', 'binary'), (-0.2203, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.7131, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.5045, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.9713, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9767, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6492, 'const'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5914, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0744, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6945, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9633, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2836, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8812, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1203, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.926, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1254, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3543, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.232, 'const'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1113, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0583, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.454, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_17(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_17'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2438 * x[0] * x[1] - 0.0126 * x[0] * sympy.sin(x[8]) - 0.8083 * x[0] - 0.3307 * x[1] * x[7] + 0.5987 * x[1] * x[
            9] + 0.553 * x[1] * sympy.sin(x[2]) + 0.4685 * x[2] * x[9] + 0.5174 * x[2] - 0.2717 * x[3] * x[4] + 0.5393 * x[3] * sympy.sin(
            x[1]) + 0.7372 * x[4] * sympy.sin(x[8]) - 0.6791 * x[4] + 0.6663 * x[5] + 0.3746 * x[6] + 0.7536 * x[7] + 0.5607 * x[
                            8] * sympy.cos(x[7]) - 0.6067 * x[8] + 0.0318 * x[9] * sympy.sin(x[5]) + 0.3574 * sympy.sin(x[0]) * sympy.sin(
            x[6]) - 0.8525 * sympy.sin(x[1]) - 0.8232 * sympy.sin(x[2]) * sympy.cos(x[5]) - 0.8971 * sympy.sin(x[3]) + 0.7993 * sympy.sin(
            x[5]) * sympy.cos(x[1]) - 0.0914 * sympy.sin(x[7]) * sympy.cos(x[0]) + 0.7784 * sympy.sin(x[9]) * sympy.cos(
            x[6]) - 0.3517 * sympy.cos(x[9]) + 0.0028
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.0028, 'const'), ('mul', 'binary'), (0.6663, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.3517, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.6067, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.8525, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.8083, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.6791, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.3746, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.8971, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.5174, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.7536, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7993, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0914, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5393, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5607, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5987, 'const'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3307, 'const'), ('X_1', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7784, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.553, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0318, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4685, 'const'), ('X_2', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3574, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8232, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0126, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2717, 'const'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7372, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2438, 'const'), ('X_0', 'var'),
                                            ('X_1', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_43(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_43'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2078 * x[0] * sympy.sin(x[5]) - 0.2632 * x[0] * sympy.sin(x[8]) + 0.3283 * x[0] + 0.3669 * x[1] * sympy.sin(
            x[9]) - 0.5508 * x[1] * sympy.cos(x[0]) - 0.6467 * x[1] * sympy.cos(x[3]) - 0.8989 * x[2] * x[6] + 0.0954 * x[2] * sympy.sin(
            x[5]) - 0.0889 * x[3] * x[7] + 0.7442 * x[3] * sympy.sin(x[4]) + 0.3152 * x[3] * sympy.cos(x[0]) - 0.5098 * x[3] + 0.0999 * x[
                            4] - 0.6837 * x[6] - 0.4399 * x[7] * sympy.cos(x[0]) - 0.8823 * x[7] * sympy.cos(x[5]) - 0.8861 * x[
                            8] + 0.6226 * x[9] - 0.3813 * sympy.sin(x[0]) * sympy.sin(x[9]) - 0.8912 * sympy.sin(x[2]) + 0.5755 * sympy.sin(
            x[4]) * sympy.sin(x[9]) + 0.0096 * sympy.sin(x[5]) + 0.5149 * sympy.sin(x[6]) * sympy.cos(x[0]) - 0.9517 * sympy.sin(
            x[8]) * sympy.cos(x[5]) - 0.9398 * sympy.cos(x[1]) - 0.8097 * sympy.cos(x[7]) - 0.6558
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.6558, 'const'), ('mul', 'binary'), (-0.8861, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.9398, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.0999, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.3283, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.6226, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.8097, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.5098, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.8912, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.0096, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.6837, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0954, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3152, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2078, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6467, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2632, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4399, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3813, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0889, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7442, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9517, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5755, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5149, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3669, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5508, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8823, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8989, 'const'), ('X_2', 'var'), ('X_6', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_2(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_2'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.0462 * x[0] * x[8] - 0.2435 * x[0] * sympy.cos(x[4]) - 0.0627 * x[0] + 0.1061 * x[1] * x[4] - 0.4753 * x[
            2] * sympy.sin(x[7]) + 0.0186 * x[2] + 0.3976 * x[3] * x[5] + 0.4745 * x[3] * x[9] + 0.9768 * x[4] + 0.4851 * x[5] * x[
                            8] + 0.3128 * x[5] * x[9] + 0.0925 * x[5] * sympy.sin(x[6]) - 0.2174 * x[6] * sympy.sin(x[1]) - 0.5666 * x[
                            6] + 0.7916 * x[7] * x[8] - 0.4152 * x[7] + 0.0621 * x[8] + 0.3223 * sympy.sin(x[1]) * sympy.cos(
            x[0]) - 0.22 * sympy.sin(x[2]) * sympy.cos(x[3]) + 0.7755 * sympy.sin(x[3]) + 0.3987 * sympy.sin(x[5]) + 0.2815 * sympy.sin(
            x[6]) * sympy.cos(x[7]) + 0.6786 * sympy.sin(x[7]) * sympy.cos(x[0]) - 0.4429 * sympy.cos(x[1]) + 0.5729 * sympy.cos(
            x[4]) * sympy.cos(x[8]) - 0.179 * sympy.cos(x[9]) + 0.0282
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.0282, 'const'), ('mul', 'binary'), (0.9768, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.0621, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.0186, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.7755, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.3987, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.5666, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.179, 'const'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.4429, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.0627, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.4152, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.22, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3223, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4851, 'const'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3128, 'const'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7916, 'const'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2174, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5729, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3976, 'const'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0462, 'const'), ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2815, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4753, 'const'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4745, 'const'), ('X_3', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1061, 'const'), ('X_1', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2435, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0925, 'const'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6786, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_4(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_4'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.0731 * x[0] + 0.514 * x[2] * x[6] - 0.7159 * x[2] + 0.4869 * x[3] * sympy.cos(x[0]) + 0.6919 * x[3] * sympy.cos(
            x[7]) + 0.6843 * x[4] * sympy.sin(x[6]) + 0.0201 * x[4] - 0.5998 * x[5] * x[7] - 0.9995 * x[5] * sympy.cos(x[1]) - 0.2888 * x[
                            5] * sympy.cos(x[2]) - 0.8994 * x[8] * sympy.sin(x[3]) - 0.0303 * x[8] + 0.4599 * x[9] * sympy.sin(
            x[0]) - 0.1238 * x[9] * sympy.sin(x[1]) + 0.2515 * x[9] * sympy.cos(x[6]) - 0.6577 * sympy.sin(x[0]) * sympy.cos(
            x[6]) - 0.498 * sympy.sin(x[3]) - 0.683 * sympy.sin(x[6]) * sympy.cos(x[1]) - 0.4337 * sympy.sin(x[6]) - 0.1355 * sympy.sin(
            x[7]) * sympy.sin(x[8]) - 0.9464 * sympy.sin(x[7]) * sympy.cos(x[1]) + 0.0935 * sympy.sin(x[7]) - 0.4505 * sympy.cos(
            x[0]) * sympy.cos(x[1]) + 0.9077 * sympy.cos(x[1]) - 0.2559 * sympy.cos(x[5]) - 0.5321 * sympy.cos(x[9]) + 0.8513
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.8513, 'const'), ('mul', 'binary'), (-0.7159, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.498, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.0731, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.9077, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.0303, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.2559, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.4337, 'const'),
                                            ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.5321, 'const'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.0935, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.0201, 'const'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.683, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8994, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6577, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1238, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6843, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2515, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4599, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6919, 'const'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9464, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.514, 'const'), ('X_2', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2888, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4869, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4505, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9995, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1355, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5998, 'const'),
                                            ('X_5', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_45(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_45'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7167 * x[0] * x[7] - 0.1192 * x[0] * sympy.sin(x[9]) + 0.399 * x[0] + 0.2118 * x[1] * x[5] + 0.1126 * x[
            1] + 0.7308 * x[2] * sympy.cos(x[8]) + 0.0709 * x[2] + 0.9787 * x[3] + 0.2062 * x[4] * sympy.sin(x[9]) + 0.7711 * x[
                            4] * sympy.cos(x[3]) - 0.4897 * x[4] + 0.5828 * x[5] * x[7] - 0.5979 * x[5] * sympy.sin(x[2]) - 0.0754 * x[
                            5] - 0.3574 * x[6] * x[8] + 0.353 * x[6] * sympy.sin(x[1]) - 0.5019 * x[6] * sympy.cos(x[3]) - 0.3665 * x[
                            6] - 0.3824 * x[7] * sympy.cos(x[4]) - 0.6532 * x[7] + 0.5362 * x[8] + 0.4827 * x[9] * sympy.cos(
            x[1]) + 0.4548 * x[9] - 0.0255 * sympy.sin(x[1]) * sympy.cos(x[0]) + 0.2802 * sympy.cos(x[2]) * sympy.cos(
            x[6]) - 0.5843 * sympy.cos(x[3]) * sympy.cos(x[9]) + 0.6954
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.6954, 'const'), ('mul', 'binary'), (-0.3665, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.4897, 'const'), ('X_4', 'var'), ('mul', 'binary'), (0.5362, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (0.9787, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.6532, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.0709, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.399, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.0754, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.4548, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.1126, 'const'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2802, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7308, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0255, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5019, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5828, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.353, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1192, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5979, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5843, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3824, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7167, 'const'), ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3574, 'const'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2062, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4827, 'const'), ('cos', 'unary'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2118, 'const'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7711, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_4', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_49(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_49'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5322 * x[0] * x[5] + 0.1536 * x[0] * x[6] - 0.8061 * x[0] * sympy.sin(x[1]) - 0.3503 * x[0] - 0.3083 * x[1] * x[
            2] + 0.3137 * x[2] + 0.729 * x[3] - 0.7155 * x[4] * x[6] - 0.8601 * x[4] * x[9] - 0.588 * x[4] + 0.3536 * x[6] * x[7] - 0.1271 * \
                        x[6] * x[8] + 0.6743 * x[6] + 0.6611 * x[7] * x[9] - 0.9719 * x[8] + 0.6856 * x[9] * sympy.cos(x[5]) + 0.767 * x[
                            9] * sympy.cos(x[8]) - 0.0187 * sympy.sin(x[1]) * sympy.sin(x[7]) + 0.4421 * sympy.sin(
            x[1]) - 0.077 * sympy.sin(x[2]) * sympy.cos(x[0]) + 0.4614 * sympy.sin(x[2]) * sympy.cos(x[4]) + 0.2208 * sympy.sin(
            x[3]) * sympy.cos(x[4]) + 0.8902 * sympy.sin(x[5]) + 0.9081 * sympy.sin(x[7]) - 0.25 * sympy.sin(x[9]) - 0.8455 * sympy.cos(
            x[2]) * sympy.cos(x[9]) + 0.5713
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.5713, 'const'), ('mul', 'binary'), (-0.25, 'const'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.729, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.4421, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.8902, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.9081, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.9719, 'const'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.588, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.3503, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.6743, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.3137, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.767, 'const'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6611, 'const'),
                                            ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3536, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.077, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8601, 'const'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.7155, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6856, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8061, 'const'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0187, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5322, 'const'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1271, 'const'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2208, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3083, 'const'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1536, 'const'), ('X_0', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8455, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4614, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_11(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_11'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.1875 * x[0] * sympy.cos(x[2]) - 0.3011 * x[0] - 0.4771 * x[1] * x[9] - 0.4205 * x[2] * x[6] - 0.0651 * x[
            3] * sympy.sin(x[8]) + 0.3453 * x[4] * x[6] + 0.0051 * x[4] - 0.9193 * x[5] * sympy.cos(x[6]) - 0.5683 * x[6] - 0.1043 * x[
                            7] * sympy.cos(x[2]) + 0.0251 * x[7] - 0.9828 * x[8] * sympy.sin(x[1]) + 0.5411 * x[9] * sympy.sin(
            x[0]) + 0.7924 * x[9] * sympy.sin(x[2]) + 0.6506 * x[9] + 0.3537 * sympy.sin(x[0]) * sympy.cos(x[3]) + 0.0392 * sympy.sin(
            x[2]) * sympy.cos(x[8]) - 0.2831 * sympy.sin(x[3]) + 0.8753 * sympy.sin(x[5]) * sympy.cos(x[0]) - 0.9977 * sympy.sin(
            x[5]) * sympy.cos(x[7]) + 0.5664 * sympy.sin(x[6]) * sympy.sin(x[7]) + 0.4374 * sympy.cos(x[1]) + 0.3761 * sympy.cos(
            x[2]) - 0.8336 * sympy.cos(x[5]) + 0.6262 * sympy.cos(x[7]) * sympy.cos(x[9]) - 0.7001 * sympy.cos(x[8]) + 0.0131
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.0131, 'const'), ('mul', 'binary'), (0.0251, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.3011, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.4374, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.5683, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.7001, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.2831, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.6506, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.3761, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.8336, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.0051, 'const'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9828, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5411, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5664, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4771, 'const'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8753, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9193, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3537, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1875, 'const'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1043, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9977, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6262, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3453, 'const'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4205, 'const'),
                                            ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7924, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0651, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0392, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_10(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_10'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.4325 * x[0] * x[2] - 0.9214 * x[0] * x[6] + 0.9348 * x[1] * sympy.sin(x[9]) + 0.2847 * x[1] * sympy.cos(
            x[3]) + 0.7563 * x[1] - 0.7588 * x[2] * sympy.sin(x[5]) - 0.5384 * x[3] * sympy.sin(x[7]) - 0.9517 * x[3] - 0.1394 * x[
                            4] * sympy.cos(x[0]) - 0.2538 * x[4] + 0.8392 * x[6] * sympy.sin(x[2]) - 0.5573 * x[6] * sympy.cos(
            x[4]) - 0.1354 * x[7] * sympy.sin(x[0]) - 0.6868 * x[7] * sympy.cos(x[6]) - 0.1727 * x[7] + 0.9306 * x[9] * sympy.sin(
            x[5]) - 0.5875 * sympy.sin(x[1]) * sympy.cos(x[2]) - 0.9885 * sympy.sin(x[5]) * sympy.sin(x[7]) - 0.8291 * sympy.sin(
            x[6]) - 0.8071 * sympy.sin(x[8]) * sympy.cos(x[6]) - 0.1876 * sympy.sin(x[8]) - 0.0715 * sympy.sin(x[9]) - 0.1441 * sympy.cos(
            x[0]) + 0.4892 * sympy.cos(x[2]) * sympy.cos(x[3]) + 0.9026 * sympy.cos(x[2]) - 0.455 * sympy.cos(x[5]) - 0.4824
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.4824, 'const'), ('mul', 'binary'), (-0.8291, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.9517, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.7563, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.1727, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.455, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.9026, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (-0.0715, 'const'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.2538, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.1876, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            (-0.1441, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8071, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.1354, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5573, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9306, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1394, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9348, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6868, 'const'), ('cos', 'unary'), ('X_6', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9214, 'const'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2847, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7588, 'const'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4325, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8392, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5875, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5384, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4892, 'const'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9885, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_1(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_1'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.4105 * x[0] * x[1] + 0.3684 * x[0] * x[5] - 0.6649 * x[0] * sympy.sin(x[8]) - 0.4167 * x[0] * sympy.cos(
            x[7]) + 0.5613 * x[1] - 0.5376 * x[2] * x[6] + 0.3762 * x[3] * sympy.sin(x[0]) + 0.3672 * x[3] * sympy.sin(x[1]) + 0.1575 * x[
                            3] + 0.3044 * x[4] * sympy.sin(x[5]) - 0.4065 * x[4] + 0.6449 * x[5] * sympy.cos(x[2]) - 0.6137 * x[
                            5] + 0.1827 * x[6] * x[7] + 0.01 * x[6] * sympy.cos(x[9]) + 0.8699 * x[6] - 0.3857 * x[7] - 0.4725 * x[
                            8] - 0.6598 * x[9] * sympy.sin(x[1]) - 0.3186 * sympy.sin(x[0]) + 0.5162 * sympy.sin(x[1]) * sympy.sin(
            x[4]) - 0.0893 * sympy.sin(x[2]) * sympy.sin(x[8]) - 0.3978 * sympy.sin(x[3]) * sympy.cos(x[7]) - 0.4203 * sympy.sin(
            x[6]) * sympy.sin(x[8]) - 0.7083 * sympy.cos(x[2]) + 0.7123 * sympy.cos(x[9]) - 0.4489
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.4489, 'const'), ('mul', 'binary'), (-0.3857, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.7123, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.4065, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.3186, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.8699, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.5613, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.1575, 'const'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.4725, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.6137, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.7083, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4167, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3762, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3684, 'const'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0893, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5376, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6649, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.3978, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1827, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.01, 'const'),
                                            ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6449, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3044, 'const'), ('X_4', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3672, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4105, 'const'), ('X_0', 'var'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5162, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6598, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4203, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_40(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_40'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2026 * x[0] * x[1] + 0.6138 * x[0] * x[4] + 0.5023 * x[0] * x[8] - 0.591 * x[0] * sympy.sin(x[3]) - 0.1622 * x[
            0] * sympy.sin(x[9]) + 0.6448 * x[0] - 0.3662 * x[1] * sympy.cos(x[7]) + 0.5146 * x[2] * x[5] + 0.1866 * x[2] * sympy.sin(
            x[7]) - 0.4914 * x[2] * sympy.cos(x[0]) - 0.973 * x[2] - 0.8041 * x[3] * x[7] - 0.0659 * x[3] + 0.4547 * x[4] + 0.2807 * x[
                            5] * sympy.cos(x[0]) - 0.6385 * x[5] - 0.916 * x[7] * sympy.sin(x[0]) + 0.4698 * x[7] + 0.3781 * x[
                            9] * sympy.sin(x[2]) - 0.8413 * sympy.sin(x[1]) * sympy.sin(x[4]) - 0.7357 * sympy.sin(
            x[6]) - 0.6775 * sympy.sin(x[8]) * sympy.cos(x[7]) + 0.122 * sympy.sin(x[9]) - 0.9128 * sympy.cos(x[1]) + 0.0774 * sympy.cos(
            x[3]) * sympy.cos(x[5]) + 0.8138 * sympy.cos(x[8]) + 0.8617
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.8617, 'const'), ('mul', 'binary'), (-0.973, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.6385, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.8138, 'const'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.4547, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.122, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.9128, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (0.6448, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.4698, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.7357, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (-0.0659, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1866, 'const'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5023, 'const'),
                                            ('X_0', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4914, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3662, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8413, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0774, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6775, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.3781, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.591, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5146, 'const'),
                                            ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2807, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2026, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6138, 'const'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1622, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8041, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.916, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_29(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_29'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.3162 * x[0] * sympy.sin(x[2]) + 0.5578 * x[1] * x[7] - 0.612 * x[1] * sympy.sin(x[6]) + 0.8744 * x[1] + 0.64 * x[
            2] * x[4] + 0.7093 * x[2] * x[8] + 0.9315 * x[2] + 0.6938 * x[3] * x[6] - 0.4329 * x[3] * sympy.cos(x[9]) - 0.9798 * x[6] * x[
                            8] + 0.6815 * x[6] * sympy.sin(x[9]) - 0.8994 * x[6] * sympy.cos(x[0]) - 0.4082 * x[6] + 0.0879 * x[
                            7] + 0.7966 * x[9] + 0.7746 * sympy.sin(x[0]) - 0.3764 * sympy.sin(x[4]) - 0.2888 * sympy.sin(x[5]) * sympy.cos(
            x[1]) - 0.2171 * sympy.sin(x[5]) - 0.6566 * sympy.sin(x[7]) * sympy.cos(x[5]) + 0.7742 * sympy.sin(x[8]) + 0.0892 * sympy.cos(
            x[0]) * sympy.cos(x[3]) + 0.0475 * sympy.cos(x[0]) * sympy.cos(x[4]) + 0.4482 * sympy.cos(x[3]) - 0.2208 * sympy.cos(
            x[5]) * sympy.cos(x[9]) + 0.341 * sympy.cos(x[6]) * sympy.cos(x[7]) - 0.9999
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.9999, 'const'), ('mul', 'binary'), (0.4482, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.4082, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (0.7742, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.9315, 'const'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.2171, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.3764, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.7966, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.8744, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.7746, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.0879, 'const'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6938, 'const'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0475, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0892, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9798, 'const'), ('X_6', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6566, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8994, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3162, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5578, 'const'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4329, 'const'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.341, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2208, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.612, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6815, 'const'), ('X_6', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2888, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7093, 'const'), ('X_2', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.64, 'const'), ('X_2', 'var'), ('X_4', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_22(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_22'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.9768 * x[0] * sympy.cos(x[4]) + 0.6246 * x[1] * sympy.sin(x[9]) + 0.542 * x[1] * sympy.cos(x[7]) + 0.0656 * x[
            1] + 0.6652 * x[4] * sympy.sin(x[3]) - 0.4223 * x[4] * sympy.cos(x[8]) - 0.966 * x[4] - 0.5468 * x[5] * x[9] - 0.0202 * x[
                            5] * sympy.sin(x[7]) + 0.7262 * x[8] * x[9] + 0.8428 * x[8] * sympy.sin(x[3]) + 0.3052 * x[9] * sympy.cos(
            x[2]) - 0.8092 * sympy.sin(x[0]) - 0.2684 * sympy.sin(x[1]) * sympy.cos(x[2]) - 0.0552 * sympy.sin(x[2]) * sympy.sin(
            x[4]) + 0.2399 * sympy.sin(x[2]) * sympy.cos(x[3]) + 0.2335 * sympy.sin(x[2]) - 0.8092 * sympy.sin(x[7]) * sympy.sin(
            x[8]) + 0.1784 * sympy.sin(x[7]) + 0.8298 * sympy.sin(x[8]) - 0.5916 * sympy.sin(x[9]) + 0.4707 * sympy.cos(x[2]) * sympy.cos(
            x[7]) + 0.4897 * sympy.cos(x[3]) + 0.2574 * sympy.cos(x[5]) - 0.8991 * sympy.cos(x[6]) * sympy.cos(x[9]) - 0.9431 * sympy.cos(
            x[6]) + 0.4302
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.4302, 'const'), ('mul', 'binary'), (0.2335, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (-0.966, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.8298, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.1784, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.5916, 'const'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.4897, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.8092, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.9431, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.2574, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.0656, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0202, 'const'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4707, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6246, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8092, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3052, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2399, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2684, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8991, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0552, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4223, 'const'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.542, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5468, 'const'),
                                            ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9768, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.7262, 'const'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6652, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8428, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_27(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_27'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5203 * x[0] * x[8] + 0.6224 * x[0] + 0.8837 * x[1] * x[6] - 0.6584 * x[1] + 0.7676 * x[2] * sympy.sin(
            x[8]) - 0.1962 * x[2] * sympy.sin(x[9]) - 0.603 * x[3] + 0.4545 * x[4] + 0.3334 * x[5] * sympy.sin(x[9]) + 0.0346 * x[
                            5] * sympy.cos(x[3]) - 0.5058 * x[5] + 0.9321 * x[6] * x[8] - 0.2501 * x[6] * sympy.cos(x[0]) + 0.7212 * x[
                            6] * sympy.cos(x[4]) + 0.8624 * x[7] * sympy.sin(x[3]) + 0.5497 * x[7] - 0.7471 * x[8] * sympy.sin(
            x[5]) + 0.6849 * x[8] * sympy.cos(x[7]) + 0.5348 * x[9] * sympy.sin(x[4]) - 0.3522 * sympy.sin(x[1]) * sympy.cos(
            x[5]) - 0.5585 * sympy.sin(x[2]) + 0.0732 * sympy.sin(x[3]) * sympy.sin(x[9]) - 0.8506 * sympy.sin(x[6]) + 0.9811 * sympy.sin(
            x[8]) - 0.0457 * sympy.sin(x[9]) + 0.0834 * sympy.cos(x[4]) * sympy.cos(x[8]) + 0.5887
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.5887, 'const'), ('mul', 'binary'), (0.6224, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.0457, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.5585, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), (0.4545, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.9811, 'const'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.6584, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.5058, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.5497, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.603, 'const'), ('X_3', 'var'), ('mul', 'binary'), (-0.8506, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7471, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9321, 'const'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0346, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8837, 'const'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1962, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7676, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6849, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3334, 'const'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3522, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7212, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5203, 'const'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.5348, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0834, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.0732, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2501, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8624, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_34(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_34'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.8716 * x[0] * x[2] - 0.8018 * x[0] * sympy.cos(x[5]) + 0.0191 * x[0] * sympy.cos(x[8]) + 0.6042 * x[
            1] * sympy.cos(x[8]) - 0.7821 * x[1] + 0.0007 * x[4] + 0.5257 * x[5] * sympy.cos(x[3]) - 0.658 * x[5] * sympy.cos(
            x[8]) - 0.0211 * x[6] * x[9] - 0.8716 * x[6] + 0.764 * x[7] * x[8] + 0.9067 * x[8] * x[9] - 0.9377 * x[9] * sympy.sin(
            x[3]) - 0.5187 * x[9] * sympy.cos(x[4]) + 0.6565 * x[9] + 0.8284 * sympy.sin(x[0]) * sympy.cos(x[1]) - 0.7737 * sympy.sin(
            x[3]) - 0.5447 * sympy.sin(x[4]) * sympy.sin(x[5]) + 0.6239 * sympy.sin(x[5]) + 0.765 * sympy.sin(x[6]) * sympy.sin(
            x[7]) + 0.0554 * sympy.sin(x[7]) - 0.3455 * sympy.sin(x[8]) * sympy.cos(x[4]) - 0.9894 * sympy.cos(x[0]) * sympy.cos(
            x[6]) - 0.024 * sympy.cos(x[0]) + 0.1052 * sympy.cos(x[2]) + 0.0679 * sympy.cos(x[8]) + 0.13
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.13, 'const'), ('mul', 'binary'), (0.6239, 'const'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.0554, 'const'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.8716, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.024, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.1052, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.6565, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.0679, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.7737, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.7821, 'const'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.0007, 'const'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.0211, 'const'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9067, 'const'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8018, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9894, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6042, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5187, 'const'),
                                            ('cos', 'unary'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.658, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.8716, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.764, 'const'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.9377, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8284, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5257, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.765, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0191, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3455, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5447, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_16(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_16'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2965 * x[0] * x[2] + 0.976 * x[1] * sympy.sin(x[5]) + 0.1471 * x[1] - 0.7399 * x[2] * sympy.cos(x[8]) + 0.4693 * \
                        x[2] + 0.9735 * x[3] * x[8] - 0.7188 * x[4] * x[7] - 0.9982 * x[4] * sympy.sin(x[0]) + 0.6477 * x[4] * sympy.cos(
            x[5]) + 0.6103 * x[4] + 0.2907 * x[6] * x[7] - 0.5682 * x[6] * x[9] + 0.0277 * x[7] - 0.5385 * x[8] - 0.3636 * x[9] * sympy.sin(
            x[2]) + 0.4164 * x[9] * sympy.cos(x[0]) - 0.9681 * x[9] + 0.0967 * sympy.sin(x[0]) - 0.8368 * sympy.sin(x[1]) * sympy.cos(
            x[7]) - 0.6989 * sympy.sin(x[2]) * sympy.sin(x[6]) - 0.3262 * sympy.sin(x[4]) * sympy.sin(x[9]) + 0.9997 * sympy.sin(
            x[5]) * sympy.sin(x[6]) + 0.7746 * sympy.sin(x[5]) - 0.0862 * sympy.sin(x[6]) - 0.5811 * sympy.sin(x[7]) * sympy.sin(
            x[9]) + 0.9346 * sympy.cos(x[3]) - 0.3518
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.3518, 'const'), ('mul', 'binary'), (-0.0862, 'const'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.9681, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.0967, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.7746, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (-0.5385, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.9346, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'),
                                            (0.4693, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.6103, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.0277, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.1471, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.976, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9982, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2965, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7188, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6477, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9735, 'const'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6989, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5682, 'const'), ('X_6', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7399, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5811, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3262, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8368, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3636, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9997, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4164, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2907, 'const'),
                                            ('X_6', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_13(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_13'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.014 * x[0] * sympy.cos(x[5]) - 0.2726 * x[1] * x[3] - 0.2359 * x[2] * sympy.cos(x[3]) + 0.3955 * x[2] - 0.7998 * \
                        x[3] * x[8] + 0.567 * x[5] * sympy.sin(x[6]) - 0.7079 * x[5] - 0.0783 * x[6] * x[7] - 0.6176 * x[6] - 0.97 * x[7] * \
                        x[9] - 0.538 * x[7] * sympy.cos(x[0]) - 0.6544 * x[7] * sympy.cos(x[3]) - 0.6049 * x[7] + 0.2989 * x[9] * sympy.cos(
            x[0]) + 0.6662 * sympy.sin(x[3]) * sympy.cos(x[0]) - 0.7027 * sympy.sin(x[5]) * sympy.cos(x[2]) + 0.1036 * sympy.sin(
            x[5]) * sympy.cos(x[9]) - 0.6069 * sympy.sin(x[9]) * sympy.cos(x[8]) + 0.3468 * sympy.sin(x[9]) + 0.353 * sympy.cos(
            x[0]) * sympy.cos(x[2]) - 0.5618 * sympy.cos(x[0]) - 0.2569 * sympy.cos(x[1]) + 0.051 * sympy.cos(x[3]) + 0.4229 * sympy.cos(
            x[4]) * sympy.cos(x[8]) - 0.9158 * sympy.cos(x[4]) + 0.1603 * sympy.cos(x[8]) + 0.0233
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.0233, 'const'), ('mul', 'binary'), (-0.2569, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.6049, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.9158, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.6176, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.7079, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.1603, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.3468, 'const'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.051, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.5618, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.3955, 'const'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.4229, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2726, 'const'), ('X_1', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2359, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.538, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6544, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.97, 'const'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6662, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2989, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.353, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7027, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0783, 'const'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7998, 'const'), ('X_3', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.567, 'const'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6069, 'const'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.014, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1036, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_47(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_47'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.8015 * x[0] * x[5] - 0.0684 * x[0] + 0.2005 * x[1] * sympy.cos(x[4]) + 0.738 * x[2] * x[7] + 0.234 * x[
            3] * sympy.sin(x[2]) + 0.1461 * x[4] * x[6] + 0.8894 * x[6] + 0.1086 * x[7] * x[9] + 0.3708 * x[7] * sympy.sin(x[4]) + 0.9617 * \
                        x[7] * sympy.cos(x[3]) - 0.6434 * x[8] * sympy.cos(x[3]) + 0.0148 * x[8] * sympy.cos(x[6]) - 0.5607 * x[
                            9] + 0.0446 * sympy.sin(x[0]) * sympy.sin(x[7]) - 0.7344 * sympy.sin(x[0]) * sympy.cos(
            x[4]) + 0.3051 * sympy.sin(x[1]) * sympy.cos(x[3]) - 0.3336 * sympy.sin(x[1]) + 0.1143 * sympy.sin(x[3]) * sympy.cos(
            x[5]) + 0.5009 * sympy.sin(x[3]) + 0.1118 * sympy.sin(x[4]) + 0.0578 * sympy.sin(x[5]) * sympy.sin(x[7]) - 0.843 * sympy.sin(
            x[5]) - 0.451 * sympy.sin(x[7]) + 0.6385 * sympy.cos(x[2]) + 0.4271 * sympy.cos(x[3]) * sympy.cos(x[9]) + 0.2566 * sympy.cos(
            x[8]) - 0.585
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.585, 'const'), ('mul', 'binary'), (-0.451, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.3336, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (0.6385, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.843, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.2566, 'const'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.5607, 'const'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.8894, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.5009, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.0684, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.1118, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0446, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0148, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3708, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3051, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1461, 'const'), ('X_4', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8015, 'const'), ('X_0', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4271, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.738, 'const'),
                                            ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1143, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2005, 'const'), ('X_1', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0578, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7344, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.234, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9617, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6434, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1086, 'const'),
                                            ('X_7', 'var'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_36(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_36'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.1178 * x[0] * sympy.cos(x[9]) - 0.431 * x[0] + 0.2862 * x[1] * x[3] - 0.9528 * x[1] * sympy.cos(x[2]) + 0.1448 * \
                        x[1] + 0.2011 * x[2] * x[5] + 0.0559 * x[2] - 0.1376 * x[3] * sympy.sin(x[0]) - 0.7707 * x[3] + 0.0651 * x[
                            4] * sympy.cos(x[8]) + 0.1885 * x[4] - 0.9303 * x[5] * sympy.cos(x[6]) + 0.9305 * x[5] + 0.4119 * x[
                            6] + 0.9052 * x[7] * sympy.cos(x[9]) - 0.269 * x[7] + 0.6797 * x[8] * x[9] - 0.0641 * x[9] * sympy.cos(
            x[4]) - 0.9688 * sympy.sin(x[0]) * sympy.sin(x[8]) + 0.419 * sympy.sin(x[0]) * sympy.cos(x[6]) - 0.9245 * sympy.sin(
            x[4]) * sympy.cos(x[5]) - 0.2943 * sympy.sin(x[5]) * sympy.cos(x[0]) - 0.4632 * sympy.cos(x[1]) * sympy.cos(
            x[8]) + 0.2865 * sympy.cos(x[2]) * sympy.cos(x[3]) - 0.0393 * sympy.cos(x[8]) + 0.2397 * sympy.cos(x[9]) + 0.9968
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.9968, 'const'), ('mul', 'binary'), (0.0559, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.7707, 'const'), ('X_3', 'var'), ('mul', 'binary'), (0.1448, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.431, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.0393, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.2397, 'const'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.1885, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.9305, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.4119, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.269, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4632, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1376, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9245, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2865, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6797, 'const'), ('X_8', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0641, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2943, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2862, 'const'), ('X_1', 'var'), ('X_3', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2011, 'const'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1178, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.9303, 'const'), ('X_5', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9528, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9688, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0651, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.419, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9052, 'const'),
                                            ('X_7', 'var'), ('cos', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_44(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_44'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.2668 * x[0] * sympy.sin(x[9]) - 0.4476 * x[1] * x[7] - 0.5679 * x[1] * sympy.cos(x[3]) - 0.2512 * x[1] + 0.0666 * \
                        x[2] + 0.1045 * x[3] * sympy.sin(x[2]) - 0.7319 * x[3] * sympy.sin(x[4]) + 0.9351 * x[3] + 0.2162 * x[4] * x[
                            5] - 0.2221 * x[6] * sympy.sin(x[9]) - 0.0622 * x[7] * sympy.sin(x[3]) + 0.6986 * x[7] - 0.2936 * x[
                            8] * sympy.sin(x[9]) + 0.8572 * x[8] + 0.4285 * x[9] * sympy.sin(x[3]) + 0.1861 * sympy.sin(x[0]) * sympy.sin(
            x[3]) + 0.0126 * sympy.sin(x[0]) * sympy.sin(x[7]) - 0.9248 * sympy.sin(x[1]) * sympy.sin(x[8]) + 0.7907 * sympy.sin(
            x[2]) * sympy.sin(x[4]) - 0.019 * sympy.sin(x[5]) * sympy.cos(x[0]) + 0.5584 * sympy.cos(x[0]) + 0.3902 * sympy.cos(
            x[1]) * sympy.cos(x[6]) - 0.6322 * sympy.cos(x[4]) - 0.4564 * sympy.cos(x[5]) - 0.4462 * sympy.cos(x[6]) + 0.1756 * sympy.cos(
            x[9]) + 0.7657
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.7657, 'const'), ('mul', 'binary'), (0.0666, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.4564, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            (-0.4462, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), (0.5584, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'), (0.6986, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.6322, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (0.1756, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (0.9351, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.2512, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.8572, 'const'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1045, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2668, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2936, 'const'), ('X_8', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4476, 'const'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0126, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4285, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9248, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1861, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2221, 'const'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.019, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.5679, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7907, 'const'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7319, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3902, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0622, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2162, 'const'),
                                            ('X_4', 'var'), ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_6(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_6'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.2509 * x[0] * sympy.cos(x[4]) - 0.5671 * x[0] - 0.0737 * x[1] * x[3] - 0.0105 * x[1] * sympy.sin(x[2]) - 0.7492 * \
                        x[1] * sympy.sin(x[6]) + 0.8988 * x[1] - 0.4798 * x[2] - 0.3559 * x[3] * x[9] - 0.2269 * x[3] * sympy.cos(
            x[8]) + 0.6276 * x[4] + 0.8767 * x[5] * x[7] + 0.6947 * x[5] * x[8] + 0.039 * x[5] * sympy.sin(x[4]) - 0.6679 * x[5] + 0.8022 * \
                        x[6] * sympy.sin(x[8]) + 0.5435 * x[6] - 0.3114 * x[8] + 0.2299 * x[9] * sympy.cos(x[0]) + 0.943 * x[
                            9] + 0.8963 * sympy.sin(x[2]) * sympy.sin(x[7]) + 0.536 * sympy.sin(x[2]) * sympy.cos(
            x[6]) - 0.8081 * sympy.sin(x[3]) - 0.5365 * sympy.sin(x[6]) * sympy.cos(x[9]) - 0.2566 * sympy.sin(x[7]) * sympy.cos(
            x[6]) - 0.882 * sympy.sin(x[7]) * sympy.cos(x[9]) + 0.1985 * sympy.cos(x[7]) + 0.5665
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.5665, 'const'), ('mul', 'binary'), (-0.3114, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.4798, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.8988, 'const'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.5435, 'const'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.5671, 'const'), ('X_0', 'var'), ('mul', 'binary'), (-0.8081, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.1985, 'const'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), (0.943, 'const'), ('X_9', 'var'), ('mul', 'binary'), (-0.6679, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.6276, 'const'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2509, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6947, 'const'), ('X_5', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.0105, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0737, 'const'), ('X_1', 'var'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2566, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8767, 'const'), ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.2269, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.536, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2299, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.882, 'const'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5365, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.039, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8022, 'const'),
                                            ('X_6', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7492, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8963, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3559, 'const'), ('X_3', 'var'),
                                            ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_18(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_18'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7044 * x[0] * x[2] - 0.7818 * x[1] * x[6] - 0.8982 * x[2] * sympy.cos(x[5]) + 0.7443 * x[2] + 0.1714 * x[
            4] * sympy.sin(x[3]) - 0.2534 * x[4] * sympy.sin(x[7]) - 0.216 * x[4] + 0.8152 * x[5] * sympy.cos(x[4]) + 0.4964 * x[
                            5] + 0.8887 * x[6] * sympy.cos(x[5]) + 0.4274 * x[6] + 0.082 * x[7] * sympy.sin(x[0]) + 0.616 * x[7] - 0.4746 * \
                        x[9] * sympy.cos(x[3]) - 0.0573 * x[9] + 0.7392 * sympy.sin(x[0]) * sympy.sin(x[3]) - 0.1341 * sympy.sin(
            x[3]) * sympy.cos(x[2]) - 0.7219 * sympy.sin(x[4]) * sympy.cos(x[8]) + 0.6767 * sympy.sin(x[8]) * sympy.sin(
            x[9]) - 0.9879 * sympy.sin(x[9]) * sympy.cos(x[1]) - 0.1306 * sympy.cos(x[0]) * sympy.cos(x[1]) - 0.5101 * sympy.cos(
            x[0]) * sympy.cos(x[8]) + 0.1532 * sympy.cos(x[0]) + 0.7219 * sympy.cos(x[1]) + 0.0682 * sympy.cos(x[3]) + 0.4135 * sympy.cos(
            x[8]) + 0.4623
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.4623, 'const'), ('mul', 'binary'), (0.7219, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.0573, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.7443, 'const'), ('X_2', 'var'), ('mul', 'binary'), (0.4274, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (0.1532, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.4135, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.216, 'const'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.616, 'const'), ('X_7', 'var'), ('mul', 'binary'),
                                            (0.4964, 'const'), ('X_5', 'var'), ('mul', 'binary'), (0.0682, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8982, 'const'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8887, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9879, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7219, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7818, 'const'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5101, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1714, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2534, 'const'), ('X_4', 'var'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1341, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4746, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.1306, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7392, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.7044, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8152, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6767, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.082, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_3(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_3'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.0507 * x[0] * sympy.sin(x[5]) + 0.5104 * x[0] * sympy.cos(x[1]) - 0.7365 * x[0] - 0.2827 * x[1] * sympy.sin(
            x[5]) + 0.3007 * x[1] * sympy.sin(x[9]) - 0.104 * x[2] * sympy.sin(x[5]) + 0.1314 * x[2] * sympy.cos(x[1]) - 0.6913 * x[
                            3] + 0.9665 * x[5] * sympy.sin(x[6]) - 0.2099 * x[5] + 0.9733 * x[6] * x[9] - 0.1721 * x[6] * sympy.sin(
            x[8]) + 0.4332 * x[6] + 0.393 * x[7] * sympy.cos(x[4]) - 0.0119 * x[7] * sympy.cos(x[6]) + 0.8941 * x[7] + 0.1221 * x[
                            9] + 0.2853 * sympy.sin(x[1]) - 0.3293 * sympy.sin(x[2]) * sympy.sin(x[7]) - 0.2847 * sympy.sin(
            x[3]) * sympy.sin(x[9]) - 0.9227 * sympy.sin(x[7]) * sympy.cos(x[8]) + 0.6848 * sympy.sin(x[9]) * sympy.cos(
            x[5]) + 0.041 * sympy.cos(x[0]) * sympy.cos(x[7]) - 0.9627 * sympy.cos(x[2]) + 0.7607 * sympy.cos(x[4]) - 0.5099 * sympy.cos(
            x[8]) - 0.5929
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.5929, 'const'), ('mul', 'binary'), (-0.9627, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('mul', 'binary'), (0.2853, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.7365, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.1221, 'const'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.5099, 'const'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (0.4332, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.6913, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (-0.2099, 'const'), ('X_5', 'var'), ('mul', 'binary'),
                                            (0.7607, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (0.8941, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0507, 'const'), ('X_0', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1314, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5104, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9733, 'const'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0119, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.104, 'const'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2847, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9227, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.393, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3007, 'const'), ('X_1', 'var'),
                                            ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3293, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.041, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1721, 'const'), ('X_6', 'var'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6848, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9665, 'const'), ('X_5', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2827, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_24(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_24'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.8224 * x[1] * x[2] - 0.7421 * x[1] * x[6] - 0.4452 * x[1] * sympy.sin(x[5]) - 0.6502 * x[1] - 0.3495 * x[
            2] * sympy.cos(x[0]) + 0.3244 * x[2] + 0.8415 * x[4] * x[8] - 0.7235 * x[4] * x[9] - 0.2371 * x[5] * sympy.sin(x[4]) + 0.5192 * \
                        x[5] * sympy.cos(x[3]) + 0.182 * x[5] * sympy.cos(x[7]) - 0.0694 * x[6] * sympy.cos(x[8]) + 0.4075 * x[6] + 0.5984 * \
                        x[7] + 0.7343 * x[9] * sympy.cos(x[2]) + 0.1205 * x[9] * sympy.cos(x[8]) - 0.345 * x[9] - 0.1066 * sympy.sin(
            x[0]) * sympy.sin(x[5]) - 0.8327 * sympy.sin(x[0]) + 0.201 * sympy.sin(x[2]) * sympy.cos(x[7]) - 0.9854 * sympy.sin(
            x[3]) * sympy.sin(x[8]) - 0.4953 * sympy.sin(x[4]) + 0.8351 * sympy.sin(x[8]) + 0.0246 * sympy.cos(x[3]) - 0.8081 * sympy.cos(
            x[4]) * sympy.cos(x[7]) - 0.7295 * sympy.cos(x[5]) - 0.155
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.155, 'const'), ('mul', 'binary'), (-0.8327, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.3244, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.7295, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.5984, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.6502, 'const'), ('X_1', 'var'), ('mul', 'binary'),
                                            (0.8351, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (0.0246, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.4075, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.4953, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            (-0.345, 'const'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9854, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.182, 'const'), ('X_5', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7343, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7421, 'const'), ('X_1', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5192, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2371, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1066, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.8415, 'const'), ('X_4', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1205, 'const'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3495, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4452, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8224, 'const'), ('X_1', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8081, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7235, 'const'), ('X_4', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.201, 'const'), ('sin', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0694, 'const'),
                                            ('X_6', 'var'), ('cos', 'unary'), ('X_8', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_12(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_12'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7639 * x[0] * sympy.sin(x[1]) - 0.1304 * x[2] * x[9] - 0.4251 * x[2] * sympy.cos(x[8]) + 0.5563 * x[2] - 0.8265 * \
                        x[3] * sympy.sin(x[5]) - 0.4954 * x[3] * sympy.cos(x[4]) + 0.0583 * x[3] - 0.5862 * x[4] - 0.8661 * x[
                            5] * sympy.sin(x[1]) + 0.4393 * x[5] - 0.2198 * x[6] * sympy.cos(x[5]) - 0.349 * x[7] * x[9] - 0.8231 * x[
                            7] * sympy.sin(x[6]) - 0.7292 * x[7] - 0.0017 * x[8] * sympy.cos(x[0]) - 0.6185 * x[8] + 0.6229 * sympy.sin(
            x[0]) * sympy.cos(x[3]) + 0.5383 * sympy.sin(x[4]) * sympy.sin(x[5]) - 0.4283 * sympy.sin(x[4]) * sympy.sin(
            x[8]) - 0.6505 * sympy.sin(x[4]) * sympy.cos(x[9]) - 0.3306 * sympy.sin(x[6]) - 0.6058 * sympy.sin(x[7]) * sympy.cos(
            x[0]) - 0.5664 * sympy.cos(x[0]) - 0.9325 * sympy.cos(x[1]) + 0.218 * sympy.cos(x[2]) * sympy.cos(x[4]) + 0.8659 * sympy.cos(
            x[9]) - 0.1888
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.1888, 'const'), ('mul', 'binary'), (0.8659, 'const'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (0.0583, 'const'), ('X_3', 'var'), ('mul', 'binary'),
                                            (-0.5862, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.9325, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.3306, 'const'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.6185, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.4393, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.5664, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.5563, 'const'), ('X_2', 'var'), ('mul', 'binary'), (-0.7292, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.349, 'const'), ('X_7', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1304, 'const'), ('X_2', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.218, 'const'), ('cos', 'unary'),
                                            ('X_2', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.8231, 'const'), ('sin', 'unary'), ('X_6', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6229, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8265, 'const'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2198, 'const'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4954, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0017, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4251, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6058, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4283, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6505, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7639, 'const'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5383, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8661, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_25(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_25'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9808 * x[0] * x[2] - 0.439 * x[0] - 0.3673 * x[1] * x[5] - 0.4409 * x[1] * sympy.sin(x[4]) + 0.9659 * x[
            1] * sympy.sin(x[7]) + 0.286 * x[2] * sympy.cos(x[9]) + 0.7724 * x[2] - 0.3505 * x[3] * sympy.sin(x[5]) + 0.3199 * x[
                            3] * sympy.sin(x[8]) - 0.5169 * x[4] * sympy.cos(x[7]) - 0.8043 * x[5] * x[8] - 0.1327 * x[6] + 0.8354 * x[
                            7] - 0.3938 * x[8] + 0.0452 * x[9] - 0.3964 * sympy.sin(x[1]) * sympy.sin(x[6]) - 0.4013 * sympy.sin(
            x[1]) + 0.0584 * sympy.sin(x[3]) * sympy.cos(x[0]) - 0.8015 * sympy.sin(x[4]) * sympy.cos(x[2]) - 0.6504 * sympy.sin(
            x[4]) * sympy.cos(x[6]) + 0.3234 * sympy.sin(x[4]) + 0.6532 * sympy.sin(x[5]) * sympy.sin(x[9]) + 0.3615 * sympy.sin(
            x[6]) * sympy.cos(x[2]) - 0.6891 * sympy.sin(x[9]) * sympy.cos(x[8]) + 0.8082 * sympy.cos(x[3]) + 0.7837 * sympy.cos(
            x[5]) - 0.0465
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.0465, 'const'), ('mul', 'binary'), (-0.4013, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (0.7724, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.1327, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.3234, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (0.0452, 'const'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.8354, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.7837, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), (0.8082, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.3938, 'const'), ('X_8', 'var'), ('mul', 'binary'), (-0.439, 'const'),
                                            ('X_0', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0584, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.9659, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6504, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8043, 'const'), ('X_5', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3673, 'const'), ('X_1', 'var'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5169, 'const'), ('X_4', 'var'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4409, 'const'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.6891, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8015, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.3199, 'const'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.3505, 'const'), ('X_3', 'var'), ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6532, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3964, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3615, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('sin', 'unary'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9808, 'const'), ('X_0', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.286, 'const'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_21(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_21'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.5912 * x[0] - 0.5381 * x[1] * x[8] - 0.7918 * x[1] * x[9] + 0.5013 * x[2] * x[7] + 0.9498 * x[2] * sympy.cos(
            x[1]) + 0.9681 * x[3] * x[7] - 0.9882 * x[4] * sympy.sin(x[3]) + 0.2349 * x[4] * sympy.cos(x[5]) + 0.1008 * x[4] + 0.2154 * x[
                            5] - 0.45 * x[6] * sympy.sin(x[0]) + 0.6655 * x[7] * sympy.cos(x[0]) + 0.2684 * x[8] * sympy.sin(
            x[0]) + 0.8529 * x[9] * sympy.sin(x[8]) - 0.8997 * x[9] * sympy.cos(x[6]) + 0.8769 * sympy.sin(x[1]) * sympy.cos(
            x[6]) + 0.7223 * sympy.sin(x[2]) + 0.8711 * sympy.sin(x[3]) - 0.7133 * sympy.sin(x[7]) - 0.0265 * sympy.sin(
            x[8]) + 0.259 * sympy.sin(x[9]) + 0.7761 * sympy.cos(x[1]) + 0.3542 * sympy.cos(x[2]) * sympy.cos(x[3]) + 0.5543 * sympy.cos(
            x[3]) * sympy.cos(x[5]) - 0.838 * sympy.cos(x[4]) * sympy.cos(x[6]) + 0.5095 * sympy.cos(x[6]) - 0.6308
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.6308, 'const'), ('mul', 'binary'), (0.5095, 'const'), ('cos', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), (0.8711, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (0.1008, 'const'), ('X_4', 'var'), ('mul', 'binary'), (-0.0265, 'const'),
                                            ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), (-0.5912, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.7223, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (0.2154, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.7133, 'const'), ('sin', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.259, 'const'), ('sin', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), (0.7761, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.3542, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8769, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.45, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5543, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6655, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8997, 'const'),
                                            ('cos', 'unary'), ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5013, 'const'), ('X_2', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9882, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5381, 'const'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9498, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2684, 'const'), ('sin', 'unary'), ('X_0', 'var'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9681, 'const'), ('X_3', 'var'),
                                            ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7918, 'const'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.838, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.2349, 'const'), ('X_4', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.8529, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_26(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_26'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7049 * x[0] * x[2] + 0.5323 * x[0] + 0.565 * x[1] - 0.7483 * x[2] - 0.4027 * x[3] * sympy.cos(x[0]) + 0.8695 * x[
            4] * x[6] + 0.1449 * x[4] * sympy.cos(x[3]) - 0.523 * x[4] + 0.7858 * x[5] * x[9] + 0.8706 * x[6] * x[9] - 0.6738 * x[
                            7] * sympy.cos(x[9]) + 0.2256 * x[8] * sympy.sin(x[4]) - 0.4813 * x[8] * sympy.cos(x[7]) - 0.8686 * x[
                            8] + 0.0548 * x[9] * sympy.sin(x[8]) - 0.1223 * sympy.sin(x[0]) * sympy.sin(x[4]) - 0.4205 * sympy.sin(
            x[3]) - 0.0514 * sympy.sin(x[5]) * sympy.sin(x[6]) - 0.7862 * sympy.sin(x[5]) * sympy.cos(x[8]) + 0.224 * sympy.sin(
            x[5]) - 0.9288 * sympy.cos(x[1]) * sympy.cos(x[9]) - 0.7758 * sympy.cos(x[3]) * sympy.cos(x[5]) - 0.9347 * sympy.cos(
            x[3]) * sympy.cos(x[9]) - 0.4981 * sympy.cos(x[6]) - 0.7748 * sympy.cos(x[7]) + 0.6619 * sympy.cos(x[9]) + 0.0974
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.0974, 'const'), ('mul', 'binary'), (-0.523, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.565, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.224, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('mul', 'binary'), (0.5323, 'const'), ('X_0', 'var'),
                                            ('mul', 'binary'), (0.6619, 'const'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (-0.4205, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.7748, 'const'),
                                            ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.7483, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (-0.4981, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.8686, 'const'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9347, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0514, 'const'), ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4027, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8706, 'const'),
                                            ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2256, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4813, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0548, 'const'), ('sin', 'unary'), ('X_8', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.1449, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1223, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.8695, 'const'), ('X_4', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9288, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7862, 'const'), ('sin', 'unary'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7049, 'const'),
                                            ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.7758, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7858, 'const'), ('X_5', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6738, 'const'), ('X_7', 'var'), ('cos', 'unary'), ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_39(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_39'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.2159 * x[0] * x[6] + 0.1357 * x[0] * sympy.cos(x[2]) - 0.4088 * x[0] + 0.0528 * x[1] * x[6] - 0.2288 * x[
            1] * sympy.sin(x[4]) - 0.5143 * x[1] * sympy.cos(x[9]) - 0.2189 * x[2] * x[3] + 0.4322 * x[4] * x[9] - 0.9027 * x[
                            4] * sympy.sin(x[0]) - 0.6626 * x[4] + 0.54 * x[5] * sympy.cos(x[2]) - 0.6032 * x[6] * x[8] - 0.9019 * x[
                            6] + 0.9844 * x[7] * sympy.sin(x[4]) - 0.3771 * x[7] * sympy.cos(x[1]) + 0.8166 * x[7] - 0.1638 * x[
                            8] * sympy.cos(x[1]) - 0.1459 * x[8] - 0.6546 * x[9] - 0.9467 * sympy.sin(x[1]) + 0.7364 * sympy.sin(
            x[2]) + 0.2959 * sympy.sin(x[3]) * sympy.sin(x[7]) - 0.9591 * sympy.sin(x[3]) * sympy.sin(x[8]) + 0.3562 * sympy.cos(
            x[3]) + 0.4992 * sympy.cos(x[5]) * sympy.cos(x[9]) + 0.9278 * sympy.cos(x[5]) + 0.7963
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.7963, 'const'), ('mul', 'binary'), (-0.9467, 'const'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), (-0.4088, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (-0.6546, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.8166, 'const'), ('X_7', 'var'),
                                            ('mul', 'binary'), (-0.1459, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.3562, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.6626, 'const'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.7364, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.9019, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.9278, 'const'), ('cos', 'unary'),
                                            ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4322, 'const'), ('X_4', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9591, 'const'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.1638, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2288, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2959, 'const'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.5143, 'const'),
                                            ('X_1', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.54, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3771, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.0528, 'const'), ('X_1', 'var'), ('X_6', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6032, 'const'), ('X_6', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4992, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2159, 'const'),
                                            ('X_0', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.9027, 'const'),
                                            ('sin', 'unary'), ('X_0', 'var'), ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.1357, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9844, 'const'), ('sin', 'unary'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2189, 'const'), ('X_2', 'var'), ('X_3', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_19(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_19'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.7492 * x[0] * sympy.cos(x[4]) + 0.9073 * x[1] * sympy.cos(x[8]) + 0.5918 * x[2] * x[4] + 0.6062 * x[
            2] * sympy.cos(x[8]) + 0.0652 * x[2] * sympy.cos(x[9]) - 0.1762 * x[2] + 0.8297 * x[3] * x[9] - 0.6905 * x[4] * x[5] - 0.7149 * \
                        x[4] * x[7] - 0.4261 * x[5] * x[7] + 0.4286 * x[5] + 0.2743 * x[6] * x[9] + 0.4221 * x[6] * sympy.sin(
            x[1]) + 0.7433 * x[6] * sympy.cos(x[3]) - 0.336 * x[7] * x[8] - 0.006 * x[7] + 0.3077 * x[9] * sympy.cos(x[8]) - 0.2016 * x[
                            9] + 0.1166 * sympy.sin(x[0]) * sympy.cos(x[8]) + 0.1247 * sympy.sin(x[0]) + 0.7594 * sympy.sin(
            x[1]) + 0.9967 * sympy.sin(x[3]) * sympy.cos(x[0]) - 0.1448 * sympy.sin(x[3]) - 0.6719 * sympy.sin(x[4]) - 0.9723 * sympy.sin(
            x[8]) - 0.5177 * sympy.cos(x[6]) + 0.7253
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.7253, 'const'), ('mul', 'binary'), (-0.9723, 'const'), ('sin', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.1762, 'const'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.006, 'const'), ('X_7', 'var'), ('mul', 'binary'), (0.1247, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('mul', 'binary'), (0.7594, 'const'), ('sin', 'unary'), ('X_1', 'var'),
                                            ('mul', 'binary'), (-0.2016, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.4286, 'const'),
                                            ('X_5', 'var'), ('mul', 'binary'), (-0.6719, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (-0.5177, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('mul', 'binary'),
                                            (-0.1448, 'const'), ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.6062, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.1166, 'const'), ('sin', 'unary'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.5918, 'const'), ('X_2', 'var'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9073, 'const'), ('X_1', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4221, 'const'),
                                            ('sin', 'unary'), ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.3077, 'const'), ('cos', 'unary'), ('X_8', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0652, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.6905, 'const'), ('X_4', 'var'), ('X_5', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.2743, 'const'), ('X_6', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7149, 'const'), ('X_4', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.4261, 'const'), ('X_5', 'var'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.336, 'const'), ('X_7', 'var'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.7492, 'const'), ('X_0', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8297, 'const'), ('X_3', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.7433, 'const'), ('cos', 'unary'),
                                            ('X_3', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9967, 'const'),
                                            ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_38(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_38'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.5359 * x[0] * x[3] - 0.2392 * x[0] * x[4] - 0.4847 * x[0] * x[9] + 0.6903 * x[0] * sympy.cos(x[2]) - 0.4406 * x[
            0] * sympy.cos(x[7]) + 0.4493 * x[0] + 0.4321 * x[1] * x[6] - 0.5731 * x[1] * sympy.sin(x[7]) + 0.3126 * x[1] - 0.4564 * x[4] * \
                        x[5] + 0.5084 * x[4] * sympy.cos(x[2]) - 0.7993 * x[5] - 0.2797 * x[6] * sympy.cos(x[4]) + 0.5731 * x[
                            6] * sympy.cos(x[7]) - 0.7251 * x[6] - 0.9548 * x[8] + 0.7021 * x[9] * sympy.cos(x[1]) + 0.3085 * sympy.sin(
            x[2]) - 0.612 * sympy.sin(x[4]) * sympy.sin(x[7]) + 0.6327 * sympy.cos(x[0]) * sympy.cos(x[5]) + 0.6669 * sympy.cos(
            x[2]) * sympy.cos(x[3]) - 0.6568 * sympy.cos(x[3]) * sympy.cos(x[9]) - 0.1421 * sympy.cos(x[3]) + 0.8831 * sympy.cos(
            x[4]) + 0.3423 * sympy.cos(x[7]) + 0.3553 * sympy.cos(x[9]) - 0.6759
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.6759, 'const'), ('mul', 'binary'), (0.3423, 'const'), ('cos', 'unary'),
                                            ('X_7', 'var'), ('mul', 'binary'), (0.4493, 'const'), ('X_0', 'var'), ('mul', 'binary'),
                                            (0.8831, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'), (-0.7251, 'const'),
                                            ('X_6', 'var'), ('mul', 'binary'), (-0.1421, 'const'), ('cos', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), (-0.9548, 'const'), ('X_8', 'var'), ('mul', 'binary'), (0.3553, 'const'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), (-0.7993, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (0.3126, 'const'), ('X_1', 'var'), ('mul', 'binary'), (0.3085, 'const'),
                                            ('sin', 'unary'), ('X_2', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.4321, 'const'),
                                            ('X_1', 'var'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4406, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5084, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.5731, 'const'), ('X_6', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2797, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6327, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5359, 'const'), ('X_0', 'var'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5731, 'const'), ('X_1', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6903, 'const'), ('X_0', 'var'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2392, 'const'), ('X_0', 'var'), ('X_4', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.6669, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4847, 'const'),
                                            ('X_0', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.6568, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4564, 'const'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.7021, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.612, 'const'), ('sin', 'unary'), ('X_4', 'var'),
                                            ('sin', 'unary'), ('X_7', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_9(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_9'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.7172 * x[1] * sympy.cos(x[9]) - 0.2832 * x[2] * x[4] - 0.3174 * x[2] * sympy.sin(x[8]) + 0.2131 * x[2] + 0.9763 * \
                        x[3] * sympy.sin(x[4]) - 0.6523 * x[3] * sympy.cos(x[9]) + 0.2884 * x[4] * x[6] + 0.6804 * x[4] * x[7] + 0.315 * x[
                            5] * sympy.cos(x[4]) + 0.2764 * x[5] * sympy.cos(x[8]) + 0.3971 * x[5] + 0.8584 * x[6] * x[9] + 0.6163 * x[
                            6] + 0.0462 * x[8] * x[9] - 0.8063 * x[8] * sympy.cos(x[1]) - 0.749 * x[8] * sympy.cos(x[3]) - 0.4535 * x[
                            8] * sympy.cos(x[6]) + 0.068 * x[8] - 0.0188 * sympy.sin(x[0]) * sympy.sin(x[7]) + 0.9848 * sympy.sin(
            x[1]) * sympy.cos(x[0]) - 0.5681 * sympy.sin(x[7]) + 0.1285 * sympy.sin(x[9]) - 0.9868 * sympy.cos(x[0]) - 0.2029 * sympy.cos(
            x[1]) - 0.0812 * sympy.cos(x[3]) - 0.0655 * sympy.cos(x[4]) + 0.8913
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.8913, 'const'), ('mul', 'binary'), (0.1285, 'const'), ('sin', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), (-0.0655, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('mul', 'binary'), (0.3971, 'const'), ('X_5', 'var'), ('mul', 'binary'), (-0.0812, 'const'),
                                            ('cos', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (0.2131, 'const'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.6163, 'const'), ('X_6', 'var'), ('mul', 'binary'), (0.068, 'const'),
                                            ('X_8', 'var'), ('mul', 'binary'), (-0.9868, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.5681, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'),
                                            (-0.2029, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.749, 'const'), ('cos', 'unary'), ('X_3', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.6804, 'const'), ('X_4', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.6523, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_9', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.7172, 'const'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2764, 'const'), ('X_5', 'var'),
                                            ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8063, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.4535, 'const'), ('cos', 'unary'), ('X_6', 'var'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2832, 'const'), ('X_2', 'var'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3174, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.9763, 'const'), ('X_3', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0462, 'const'), ('X_8', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.2884, 'const'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.0188, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.315, 'const'), ('cos', 'unary'), ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9848, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('sin', 'unary'),
                                            ('X_1', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.8584, 'const'), ('X_6', 'var'),
                                            ('X_9', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_32(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_32'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = -0.3146 * x[0] * x[2] - 0.4634 * x[0] * sympy.cos(x[5]) - 0.8372 * x[0] - 0.1917 * x[1] - 0.5178 * x[3] * sympy.cos(
            x[4]) + 0.1925 * x[3] * sympy.cos(x[5]) + 0.0843 * x[3] * sympy.cos(x[9]) + 0.095 * x[4] * x[5] + 0.6114 * x[5] * x[
                            7] + 0.2087 * x[5] - 0.1962 * x[6] * x[9] - 0.2049 * x[6] * sympy.cos(x[4]) + 0.1942 * x[6] - 0.1129 * x[
                            7] * sympy.sin(x[0]) - 0.6433 * x[7] - 0.794 * x[9] * sympy.sin(x[4]) - 0.1961 * x[9] - 0.2017 * sympy.sin(
            x[1]) * sympy.cos(x[4]) + 0.9023 * sympy.sin(x[3]) - 0.572 * sympy.sin(x[4]) + 0.9884 * sympy.sin(x[5]) * sympy.sin(
            x[8]) + 0.6048 * sympy.sin(x[6]) * sympy.cos(x[1]) - 0.3605 * sympy.cos(x[1]) * sympy.cos(x[8]) - 0.9768 * sympy.cos(
            x[2]) - 0.9197 * sympy.cos(x[7]) * sympy.cos(x[8]) - 0.0055 * sympy.cos(x[8]) - 0.9483
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (-0.9483, 'const'), ('mul', 'binary'), (0.2087, 'const'), ('X_5', 'var'),
                                            ('mul', 'binary'), (-0.1917, 'const'), ('X_1', 'var'), ('mul', 'binary'), (-0.6433, 'const'),
                                            ('X_7', 'var'), ('mul', 'binary'), (-0.0055, 'const'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.9768, 'const'), ('cos', 'unary'), ('X_2', 'var'), ('mul', 'binary'),
                                            (-0.1961, 'const'), ('X_9', 'var'), ('mul', 'binary'), (0.1942, 'const'), ('X_6', 'var'),
                                            ('mul', 'binary'), (-0.8372, 'const'), ('X_0', 'var'), ('mul', 'binary'), (0.9023, 'const'),
                                            ('sin', 'unary'), ('X_3', 'var'), ('mul', 'binary'), (-0.572, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.0843, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.095, 'const'),
                                            ('X_4', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.794, 'const'),
                                            ('sin', 'unary'), ('X_4', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.9197, 'const'), ('cos', 'unary'), ('X_7', 'var'), ('cos', 'unary'), ('X_8', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.2049, 'const'), ('cos', 'unary'), ('X_4', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6048, 'const'), ('cos', 'unary'),
                                            ('X_1', 'var'), ('sin', 'unary'), ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (-0.5178, 'const'), ('X_3', 'var'), ('cos', 'unary'), ('X_4', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3605, 'const'), ('cos', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.1925, 'const'), ('X_3', 'var'),
                                            ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6114, 'const'),
                                            ('X_5', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.9884, 'const'),
                                            ('sin', 'unary'), ('X_5', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.3146, 'const'), ('X_0', 'var'), ('X_2', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.2017, 'const'), ('sin', 'unary'), ('X_1', 'var'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1129, 'const'), ('sin', 'unary'),
                                            ('X_0', 'var'), ('X_7', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.1962, 'const'),
                                            ('X_6', 'var'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4634, 'const'),
                                            ('X_0', 'var'), ('cos', 'unary'), ('X_5', 'var')]


@register_eq_class
class sincos_nv10_nt1016_prog_5(KnownEquation):
    _eq_name = 'sincos_nv10_nt1016_prog_5'
    _function_set = ['add', 'sub', 'mul', 'sin', 'cos', 'const']

    def __init__(self):
        super().__init__(num_vars=10)
        x = self.x
        self.sympy_eq = 0.9433 * x[0] * x[1] - 0.5413 * x[0] * sympy.sin(x[3]) - 0.8339 * x[1] * x[9] + 0.4075 * x[1] * sympy.sin(
            x[4]) - 0.4261 * x[2] * x[6] + 0.5826 * x[2] * sympy.sin(x[8]) - 0.535 * x[2] * sympy.cos(x[7]) - 0.0292 * x[3] * x[
                            7] - 0.7761 * x[3] + 0.5715 * x[4] * sympy.cos(x[0]) + 0.6293 * x[5] * sympy.cos(x[0]) - 0.8088 * x[
                            6] * sympy.cos(x[5]) + 0.4547 * x[6] + 0.0173 * x[7] * x[9] - 0.5063 * x[8] + 0.2733 * sympy.sin(
            x[2]) * sympy.sin(x[3]) - 0.2634 * sympy.sin(x[4]) * sympy.cos(x[9]) - 0.5375 * sympy.sin(x[4]) + 0.9246 * sympy.sin(
            x[7]) - 0.4108 * sympy.sin(x[8]) * sympy.cos(x[1]) - 0.4931 * sympy.sin(x[9]) + 0.0017 * sympy.cos(x[0]) - 0.0218 * sympy.cos(
            x[1]) - 0.5334 * sympy.cos(x[2]) - 0.3728 * sympy.cos(x[4]) * sympy.cos(x[8]) - 0.613 * sympy.cos(x[5]) + 0.3351
        self.sympy_eq_preorder_traversal = [('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'), ('add', 'binary'),
                                            ('add', 'binary'), (0.3351, 'const'), ('mul', 'binary'), (-0.5375, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), (-0.5334, 'const'), ('cos', 'unary'), ('X_2', 'var'),
                                            ('mul', 'binary'), (0.4547, 'const'), ('X_6', 'var'), ('mul', 'binary'), (-0.0218, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('mul', 'binary'), (-0.5063, 'const'), ('X_8', 'var'),
                                            ('mul', 'binary'), (-0.4931, 'const'), ('sin', 'unary'), ('X_9', 'var'), ('mul', 'binary'),
                                            (0.9246, 'const'), ('sin', 'unary'), ('X_7', 'var'), ('mul', 'binary'), (-0.7761, 'const'),
                                            ('X_3', 'var'), ('mul', 'binary'), (0.0017, 'const'), ('cos', 'unary'), ('X_0', 'var'),
                                            ('mul', 'binary'), (-0.613, 'const'), ('cos', 'unary'), ('X_5', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.4261, 'const'), ('X_2', 'var'), ('X_6', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.9433, 'const'), ('X_0', 'var'), ('X_1', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.0173, 'const'), ('X_7', 'var'), ('X_9', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (0.2733, 'const'), ('sin', 'unary'), ('X_2', 'var'), ('sin', 'unary'),
                                            ('X_3', 'var'), ('mul', 'binary'), ('mul', 'binary'), (0.6293, 'const'), ('cos', 'unary'),
                                            ('X_0', 'var'), ('X_5', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.4108, 'const'),
                                            ('cos', 'unary'), ('X_1', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.0292, 'const'), ('X_3', 'var'), ('X_7', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.5413, 'const'), ('X_0', 'var'), ('sin', 'unary'), ('X_3', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (-0.8088, 'const'), ('cos', 'unary'), ('X_5', 'var'),
                                            ('X_6', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.2634, 'const'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5826, 'const'), ('X_2', 'var'), ('sin', 'unary'), ('X_8', 'var'), ('mul', 'binary'),
                                            ('mul', 'binary'), (-0.535, 'const'), ('X_2', 'var'), ('cos', 'unary'), ('X_7', 'var'),
                                            ('mul', 'binary'), ('mul', 'binary'), (0.4075, 'const'), ('X_1', 'var'), ('sin', 'unary'),
                                            ('X_4', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.8339, 'const'), ('X_1', 'var'),
                                            ('X_9', 'var'), ('mul', 'binary'), ('mul', 'binary'), (-0.3728, 'const'), ('cos', 'unary'),
                                            ('X_4', 'var'), ('cos', 'unary'), ('X_8', 'var'), ('mul', 'binary'), ('mul', 'binary'),
                                            (0.5715, 'const'), ('cos', 'unary'), ('X_0', 'var'), ('X_4', 'var')]
